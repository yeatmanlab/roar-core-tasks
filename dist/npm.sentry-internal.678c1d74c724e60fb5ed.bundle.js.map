{"version":3,"file":"npm.sentry-internal.678c1d74c724e60fb5ed.bundle.js","mappings":"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","sources":["webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/browser-utils/esm/debug-build.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/browser-utils/esm/getNativeImplementation.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/browser-utils/esm/instrument/dom.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/browser-utils/esm/instrument/history.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/browser-utils/esm/instrument/xhr.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/browser-utils/esm/metrics/browserMetrics.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/browser-utils/esm/metrics/inp.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/bindReporter.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/getActivationStart.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/initMetric.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/generateUniqueID.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/observe.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/onHidden.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/runOnce.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/whenActivated.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/onFCP.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/getCLS.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/getFID.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/polyfills/interactionCountPolyfill.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/getINP.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/getLCP.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/onTTFB.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/browser-utils/esm/metrics/instrument.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/browser-utils/esm/metrics/utils.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/getNavigationEntry.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/getVisibilityWatcher.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/browser-utils/esm/types.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@sentry-internal/replay/esm/index.js"],"sourcesContent":["/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","import { isNativeFunction, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { WINDOW } from './types.js';\n\n/**\n * We generally want to use window.fetch / window.setTimeout.\n * However, in some cases this may be wrapped (e.g. by Zone.js for Angular),\n * so we try to get an unpatched version of this from a sandboxed iframe.\n */\n\nconst cachedImplementations = {};\n\n/**\n * Get the native implementation of a browser function.\n *\n * This can be used to ensure we get an unwrapped version of a function, in cases where a wrapped function can lead to problems.\n *\n * The following methods can be retrieved:\n * - `setTimeout`: This can be wrapped by e.g. Angular, causing change detection to be triggered.\n * - `fetch`: This can be wrapped by e.g. ad-blockers, causing an infinite loop when a request is blocked.\n */\nfunction getNativeImplementation(\n  name,\n) {\n  const cached = cachedImplementations[name];\n  if (cached) {\n    return cached;\n  }\n\n  let impl = WINDOW[name] ;\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFunction(impl)) {\n    return (cachedImplementations[name] = impl.bind(WINDOW) );\n  }\n\n  const document = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow[name]) {\n        impl = contentWindow[name] ;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      // Could not create sandbox iframe, just use window.xxx\n      DEBUG_BUILD && logger.warn(`Could not create sandbox iframe for ${name} check, bailing to window.${name}: `, e);\n    }\n  }\n\n  // Sanity check: This _should_ not happen, but if it does, we just skip caching...\n  // This can happen e.g. in tests where fetch may not be available in the env, or similar.\n  if (!impl) {\n    return impl;\n  }\n\n  return (cachedImplementations[name] = impl.bind(WINDOW) );\n}\n\n/** Clear a cached implementation. */\nfunction clearCachedImplementation(name) {\n  cachedImplementations[name] = undefined;\n}\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nfunction fetch(...rest) {\n  return getNativeImplementation('fetch')(...rest);\n}\n\n/**\n * Get an unwrapped `setTimeout` method.\n * This ensures that even if e.g. Angular wraps `setTimeout`, we get the native implementation,\n * avoiding triggering change detection.\n */\nfunction setTimeout(...rest) {\n  return getNativeImplementation('setTimeout')(...rest);\n}\n\nexport { clearCachedImplementation, fetch, getNativeImplementation, setTimeout };\n//# sourceMappingURL=getNativeImplementation.js.map\n","import { addHandler, maybeInstrument, triggerHandlers, fill, addNonEnumerableProperty, uuid4 } from '@sentry/utils';\nimport { WINDOW } from '../types.js';\n\nconst DEBOUNCE_DURATION = 1000;\n\nlet debounceTimerID;\nlet lastCapturedEventType;\nlet lastCapturedEventTargetId;\n\n/**\n * Add an instrumentation handler for when a click or a keypress happens.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addClickKeypressInstrumentationHandler(handler) {\n  const type = 'dom';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentDOM);\n}\n\n/** Exported for tests only. */\nfunction instrumentDOM() {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    const proto = (WINDOW )[target] && (WINDOW )[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener) {\n      return function (\n\n        type,\n        listener,\n        options,\n      ) {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this ;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener) {\n        return function (\n\n          type,\n          listener,\n          options,\n        ) {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this ;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\n/**\n * Check whether the event is similar to the last captured one. For example, two click events on the same button.\n */\nfunction isSimilarToLastCapturedEvent(event) {\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (event.type !== lastCapturedEventType) {\n    return false;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (!event.target || (event.target )._sentryId !== lastCapturedEventTargetId) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return true;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(eventType, target) {\n  // We are only interested in filtering `keypress` events for now.\n  if (eventType !== 'keypress') {\n    return false;\n  }\n\n  if (!target || !target.tagName) {\n    return true;\n  }\n\n  // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n  // e.g.tabbing through elements, hotkeys, etc.\n  if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n */\nfunction makeDOMEventHandler(\n  handler,\n  globalListener = false,\n) {\n  return (event) => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || event['_sentryCaptured']) {\n      return;\n    }\n\n    const target = getEventTarget(event);\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event.type, target)) {\n      return;\n    }\n\n    // Mark event as \"seen\"\n    addNonEnumerableProperty(event, '_sentryCaptured', true);\n\n    if (target && !target._sentryId) {\n      // Add UUID to event target so we can identify if\n      addNonEnumerableProperty(target, '_sentryId', uuid4());\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no last captured event, it means that we can safely capture the new event and store it for future comparisons.\n    // If there is a last captured event, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    if (!isSimilarToLastCapturedEvent(event)) {\n      const handlerData = { event, name, global: globalListener };\n      handler(handlerData);\n      lastCapturedEventType = event.type;\n      lastCapturedEventTargetId = target ? target._sentryId : undefined;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      lastCapturedEventTargetId = undefined;\n      lastCapturedEventType = undefined;\n    }, DEBOUNCE_DURATION);\n  };\n}\n\nfunction getEventTarget(event) {\n  try {\n    return event.target ;\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n    return null;\n  }\n}\n\nexport { addClickKeypressInstrumentationHandler, instrumentDOM };\n//# sourceMappingURL=dom.js.map\n","import { addHandler, maybeInstrument, supportsHistory, triggerHandlers, fill } from '@sentry/utils';\nimport { WINDOW } from '../types.js';\n\nlet lastHref;\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addHistoryInstrumentationHandler(handler) {\n  const type = 'history';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentHistory);\n}\n\nfunction instrumentHistory() {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function ( ...args) {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    const handlerData = { from, to };\n    triggerHandlers('history', handlerData);\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  function historyReplacementFunction(originalHistoryFunction) {\n    return function ( ...args) {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        const handlerData = { from, to };\n        triggerHandlers('history', handlerData);\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n\nexport { addHistoryInstrumentationHandler };\n//# sourceMappingURL=history.js.map\n","import { addHandler, maybeInstrument, fill, timestampInSeconds, isString, triggerHandlers } from '@sentry/utils';\nimport { WINDOW } from '../types.js';\n\nconst SENTRY_XHR_DATA_KEY = '__sentry_xhr_v3__';\n\n/**\n * Add an instrumentation handler for when an XHR request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addXhrInstrumentationHandler(handler) {\n  const type = 'xhr';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentXHR);\n}\n\n/** Exported only for tests. */\nfunction instrumentXHR() {\n  if (!(WINDOW ).XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen) {\n    return function ( ...args) {\n      const startTimestamp = timestampInSeconds() * 1000;\n\n      // open() should always be called with two or more arguments\n      // But to be on the safe side, we actually validate this and bail out if we don't have a method & url\n      const method = isString(args[0]) ? args[0].toUpperCase() : undefined;\n      const url = parseUrl(args[1]);\n\n      if (!method || !url) {\n        return originalOpen.apply(this, args);\n      }\n\n      this[SENTRY_XHR_DATA_KEY] = {\n        method,\n        url,\n        request_headers: {},\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      if (method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          const handlerData = {\n            endTimestamp: timestampInSeconds() * 1000,\n            startTimestamp,\n            xhr: this,\n          };\n          triggerHandlers('xhr', handlerData);\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        fill(this, 'onreadystatechange', function (original) {\n          return function ( ...readyStateArgs) {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      fill(this, 'setRequestHeader', function (original) {\n        return function ( ...setRequestHeaderArgs) {\n          const [header, value] = setRequestHeaderArgs;\n\n          const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo && isString(header) && isString(value)) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return original.apply(this, setRequestHeaderArgs);\n        };\n      });\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend) {\n    return function ( ...args) {\n      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];\n\n      if (!sentryXhrData) {\n        return originalSend.apply(this, args);\n      }\n\n      if (args[0] !== undefined) {\n        sentryXhrData.body = args[0];\n      }\n\n      const handlerData = {\n        startTimestamp: timestampInSeconds() * 1000,\n        xhr: this,\n      };\n      triggerHandlers('xhr', handlerData);\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nfunction parseUrl(url) {\n  if (isString(url)) {\n    return url;\n  }\n\n  try {\n    // url can be a string or URL\n    // but since URL is not available in IE11, we do not check for it,\n    // but simply assume it is an URL and return `toString()` from it (which returns the full URL)\n    // If that fails, we just return undefined\n    return (url ).toString();\n  } catch (e2) {} // eslint-disable-line no-empty\n\n  return undefined;\n}\n\nexport { SENTRY_XHR_DATA_KEY, addXhrInstrumentationHandler, instrumentXHR };\n//# sourceMappingURL=xhr.js.map\n","import { spanToJSON, setMeasurement, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, getActiveSpan, startInactiveSpan } from '@sentry/core';\nimport { browserPerformanceTimeOrigin, logger, parseUrl, htmlTreeAsString, getComponentName } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../types.js';\nimport { addPerformanceInstrumentationHandler, addClsInstrumentationHandler, addLcpInstrumentationHandler, addFidInstrumentationHandler, addTtfbInstrumentationHandler } from './instrument.js';\nimport { getBrowserPerformanceAPI, msToSec, startAndEndSpan, isMeasurementValue } from './utils.js';\nimport { getNavigationEntry } from './web-vitals/lib/getNavigationEntry.js';\nimport { getVisibilityWatcher } from './web-vitals/lib/getVisibilityWatcher.js';\n\n/* eslint-disable max-lines */\n\nconst MAX_INT_AS_BYTES = 2147483647;\n\nlet _performanceCursor = 0;\n\nlet _measurements = {};\nlet _lcpEntry;\nlet _clsEntry;\n\n/**\n * Start tracking web vitals.\n * The callback returned by this function can be used to stop tracking & ensure all measurements are final & captured.\n *\n * @returns A function that forces web vitals collection\n */\nfunction startTrackingWebVitals() {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n    if (performance.mark) {\n      WINDOW.performance.mark('sentry-tracing-init');\n    }\n    const fidCallback = _trackFID();\n    const clsCallback = _trackCLS();\n    const lcpCallback = _trackLCP();\n    const ttfbCallback = _trackTtfb();\n\n    return () => {\n      fidCallback();\n      clsCallback();\n      lcpCallback();\n      ttfbCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\n/**\n * Start tracking long tasks.\n */\nfunction startTrackingLongTasks() {\n  addPerformanceInstrumentationHandler('longtask', ({ entries }) => {\n    for (const entry of entries) {\n      if (!getActiveSpan()) {\n        return;\n      }\n      const startTime = msToSec((browserPerformanceTimeOrigin ) + entry.startTime);\n      const duration = msToSec(entry.duration);\n\n      const span = startInactiveSpan({\n        name: 'Main UI thread blocked',\n        op: 'ui.long-task',\n        startTime,\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n        },\n      });\n      if (span) {\n        span.end(startTime + duration);\n      }\n    }\n  });\n}\n\n/**\n * Start tracking interaction events.\n */\nfunction startTrackingInteractions() {\n  addPerformanceInstrumentationHandler('event', ({ entries }) => {\n    for (const entry of entries) {\n      if (!getActiveSpan()) {\n        return;\n      }\n\n      if (entry.name === 'click') {\n        const startTime = msToSec((browserPerformanceTimeOrigin ) + entry.startTime);\n        const duration = msToSec(entry.duration);\n\n        const spanOptions = {\n          name: htmlTreeAsString(entry.target),\n          op: `ui.interaction.${entry.name}`,\n          startTime: startTime,\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n          },\n        };\n\n        const componentName = getComponentName(entry.target);\n        if (componentName) {\n          spanOptions.attributes['ui.component_name'] = componentName;\n        }\n\n        const span = startInactiveSpan(spanOptions);\n        if (span) {\n          span.end(startTime + duration);\n        }\n      }\n    }\n  });\n}\n\n/** Starts tracking the Cumulative Layout Shift on the current page. */\nfunction _trackCLS() {\n  return addClsInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('[Measurements] Adding CLS');\n    _measurements['cls'] = { value: metric.value, unit: '' };\n    _clsEntry = entry ;\n  }, true);\n}\n\n/** Starts tracking the Largest Contentful Paint on the current page. */\nfunction _trackLCP() {\n  return addLcpInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('[Measurements] Adding LCP');\n    _measurements['lcp'] = { value: metric.value, unit: 'millisecond' };\n    _lcpEntry = entry ;\n  }, true);\n}\n\n/** Starts tracking the First Input Delay on the current page. */\nfunction _trackFID() {\n  return addFidInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    const timeOrigin = msToSec(browserPerformanceTimeOrigin );\n    const startTime = msToSec(entry.startTime);\n    DEBUG_BUILD && logger.log('[Measurements] Adding FID');\n    _measurements['fid'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.fid'] = { value: timeOrigin + startTime, unit: 'second' };\n  });\n}\n\nfunction _trackTtfb() {\n  return addTtfbInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('[Measurements] Adding TTFB');\n    _measurements['ttfb'] = { value: metric.value, unit: 'millisecond' };\n  });\n}\n\n/** Add performance related spans to a transaction */\nfunction addPerformanceEntries(span) {\n  const performance = getBrowserPerformanceAPI();\n  if (!performance || !WINDOW.performance.getEntries || !browserPerformanceTimeOrigin) {\n    // Gatekeeper if performance API not available\n    return;\n  }\n\n  DEBUG_BUILD && logger.log('[Tracing] Adding & adjusting spans using Performance API');\n  const timeOrigin = msToSec(browserPerformanceTimeOrigin);\n\n  const performanceEntries = performance.getEntries();\n\n  const { op, start_timestamp: transactionStartTime } = spanToJSON(span);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  performanceEntries.slice(_performanceCursor).forEach((entry) => {\n    const startTime = msToSec(entry.startTime);\n    const duration = msToSec(entry.duration);\n\n    if (op === 'navigation' && transactionStartTime && timeOrigin + startTime < transactionStartTime) {\n      return;\n    }\n\n    switch (entry.entryType) {\n      case 'navigation': {\n        _addNavigationSpans(span, entry, timeOrigin);\n        break;\n      }\n      case 'mark':\n      case 'paint':\n      case 'measure': {\n        _addMeasureSpans(span, entry, startTime, duration, timeOrigin);\n\n        // capture web vitals\n        const firstHidden = getVisibilityWatcher();\n        // Only report if the page wasn't hidden prior to the web vital.\n        const shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n\n        if (entry.name === 'first-paint' && shouldRecord) {\n          DEBUG_BUILD && logger.log('[Measurements] Adding FP');\n          _measurements['fp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        if (entry.name === 'first-contentful-paint' && shouldRecord) {\n          DEBUG_BUILD && logger.log('[Measurements] Adding FCP');\n          _measurements['fcp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        break;\n      }\n      case 'resource': {\n        _addResourceSpans(span, entry, entry.name , startTime, duration, timeOrigin);\n        break;\n      }\n      // Ignore other entry types.\n    }\n  });\n\n  _performanceCursor = Math.max(performanceEntries.length - 1, 0);\n\n  _trackNavigator(span);\n\n  // Measurements are only available for pageload transactions\n  if (op === 'pageload') {\n    _addTtfbRequestTimeToMeasurements(_measurements);\n\n    ['fcp', 'fp', 'lcp'].forEach(name => {\n      if (!_measurements[name] || !transactionStartTime || timeOrigin >= transactionStartTime) {\n        return;\n      }\n      // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n      // Unfortunately, timeOrigin is not captured within the span span data, so these web vitals will need\n      // to be adjusted to be relative to span.startTimestamp.\n      const oldValue = _measurements[name].value;\n      const measurementTimestamp = timeOrigin + msToSec(oldValue);\n\n      // normalizedValue should be in milliseconds\n      const normalizedValue = Math.abs((measurementTimestamp - transactionStartTime) * 1000);\n      const delta = normalizedValue - oldValue;\n\n      DEBUG_BUILD && logger.log(`[Measurements] Normalized ${name} from ${oldValue} to ${normalizedValue} (${delta})`);\n      _measurements[name].value = normalizedValue;\n    });\n\n    const fidMark = _measurements['mark.fid'];\n    if (fidMark && _measurements['fid']) {\n      // create span for FID\n      startAndEndSpan(span, fidMark.value, fidMark.value + msToSec(_measurements['fid'].value), {\n        name: 'first input delay',\n        op: 'ui.action',\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n        },\n      });\n\n      // Delete mark.fid as we don't want it to be part of final payload\n      delete _measurements['mark.fid'];\n    }\n\n    // If FCP is not recorded we should not record the cls value\n    // according to the new definition of CLS.\n    if (!('fcp' in _measurements)) {\n      delete _measurements.cls;\n    }\n\n    Object.keys(_measurements).forEach(measurementName => {\n      setMeasurement(measurementName, _measurements[measurementName].value, _measurements[measurementName].unit);\n    });\n\n    _tagMetricInfo(span);\n  }\n\n  _lcpEntry = undefined;\n  _clsEntry = undefined;\n  _measurements = {};\n}\n\n/** Create measure related spans */\nfunction _addMeasureSpans(\n  span,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  const measureStartTimestamp = timeOrigin + startTime;\n  const measureEndTimestamp = measureStartTimestamp + duration;\n\n  startAndEndSpan(span, measureStartTimestamp, measureEndTimestamp, {\n    name: entry.name ,\n    op: entry.entryType ,\n    attributes: {\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.resource.browser.metrics',\n    },\n  });\n\n  return measureStartTimestamp;\n}\n\n/** Instrument navigation entries */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addNavigationSpans(span, entry, timeOrigin) {\n  ['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'].forEach(event => {\n    _addPerformanceNavigationTiming(span, entry, event, timeOrigin);\n  });\n  _addPerformanceNavigationTiming(span, entry, 'secureConnection', timeOrigin, 'TLS/SSL', 'connectEnd');\n  _addPerformanceNavigationTiming(span, entry, 'fetch', timeOrigin, 'cache', 'domainLookupStart');\n  _addPerformanceNavigationTiming(span, entry, 'domainLookup', timeOrigin, 'DNS');\n  _addRequest(span, entry, timeOrigin);\n}\n\n/** Create performance navigation related spans */\nfunction _addPerformanceNavigationTiming(\n  span,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry,\n  event,\n  timeOrigin,\n  name,\n  eventEnd,\n) {\n  const end = eventEnd ? (entry[eventEnd] ) : (entry[`${event}End`] );\n  const start = entry[`${event}Start`] ;\n  if (!start || !end) {\n    return;\n  }\n  startAndEndSpan(span, timeOrigin + msToSec(start), timeOrigin + msToSec(end), {\n    op: 'browser',\n    name: name || event,\n    attributes: {\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n    },\n  });\n}\n\n/** Create request and response related spans */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addRequest(span, entry, timeOrigin) {\n  if (entry.responseEnd) {\n    // It is possible that we are collecting these metrics when the page hasn't finished loading yet, for example when the HTML slowly streams in.\n    // In this case, ie. when the document request hasn't finished yet, `entry.responseEnd` will be 0.\n    // In order not to produce faulty spans, where the end timestamp is before the start timestamp, we will only collect\n    // these spans when the responseEnd value is available. The backend (Relay) would drop the entire span if it contained faulty spans.\n    startAndEndSpan(\n      span,\n      timeOrigin + msToSec(entry.requestStart ),\n      timeOrigin + msToSec(entry.responseEnd ),\n      {\n        op: 'browser',\n        name: 'request',\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n        },\n      },\n    );\n\n    startAndEndSpan(\n      span,\n      timeOrigin + msToSec(entry.responseStart ),\n      timeOrigin + msToSec(entry.responseEnd ),\n      {\n        op: 'browser',\n        name: 'response',\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n        },\n      },\n    );\n  }\n}\n\n/** Create resource-related spans */\nfunction _addResourceSpans(\n  span,\n  entry,\n  resourceUrl,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  // we already instrument based on fetch and xhr, so we don't need to\n  // duplicate spans here.\n  if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n    return;\n  }\n\n  const parsedUrl = parseUrl(resourceUrl);\n\n  const attributes = {\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.resource.browser.metrics',\n  };\n  setResourceEntrySizeData(attributes, entry, 'transferSize', 'http.response_transfer_size');\n  setResourceEntrySizeData(attributes, entry, 'encodedBodySize', 'http.response_content_length');\n  setResourceEntrySizeData(attributes, entry, 'decodedBodySize', 'http.decoded_response_content_length');\n\n  if ('renderBlockingStatus' in entry) {\n    attributes['resource.render_blocking_status'] = entry.renderBlockingStatus;\n  }\n  if (parsedUrl.protocol) {\n    attributes['url.scheme'] = parsedUrl.protocol.split(':').pop(); // the protocol returned by parseUrl includes a :, but OTEL spec does not, so we remove it.\n  }\n\n  if (parsedUrl.host) {\n    attributes['server.address'] = parsedUrl.host;\n  }\n\n  attributes['url.same_origin'] = resourceUrl.includes(WINDOW.location.origin);\n\n  const startTimestamp = timeOrigin + startTime;\n  const endTimestamp = startTimestamp + duration;\n\n  startAndEndSpan(span, startTimestamp, endTimestamp, {\n    name: resourceUrl.replace(WINDOW.location.origin, ''),\n    op: entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource.other',\n    attributes,\n  });\n}\n\n/**\n * Capture the information of the user agent.\n */\nfunction _trackNavigator(span) {\n  const navigator = WINDOW.navigator ;\n  if (!navigator) {\n    return;\n  }\n\n  // track network connectivity\n  const connection = navigator.connection;\n  if (connection) {\n    if (connection.effectiveType) {\n      span.setAttribute('effectiveConnectionType', connection.effectiveType);\n    }\n\n    if (connection.type) {\n      span.setAttribute('connectionType', connection.type);\n    }\n\n    if (isMeasurementValue(connection.rtt)) {\n      _measurements['connection.rtt'] = { value: connection.rtt, unit: 'millisecond' };\n    }\n  }\n\n  if (isMeasurementValue(navigator.deviceMemory)) {\n    span.setAttribute('deviceMemory', `${navigator.deviceMemory} GB`);\n  }\n\n  if (isMeasurementValue(navigator.hardwareConcurrency)) {\n    span.setAttribute('hardwareConcurrency', String(navigator.hardwareConcurrency));\n  }\n}\n\n/** Add LCP / CLS data to span to allow debugging */\nfunction _tagMetricInfo(span) {\n  if (_lcpEntry) {\n    DEBUG_BUILD && logger.log('[Measurements] Adding LCP Data');\n\n    // Capture Properties of the LCP element that contributes to the LCP.\n\n    if (_lcpEntry.element) {\n      span.setAttribute('lcp.element', htmlTreeAsString(_lcpEntry.element));\n    }\n\n    if (_lcpEntry.id) {\n      span.setAttribute('lcp.id', _lcpEntry.id);\n    }\n\n    if (_lcpEntry.url) {\n      // Trim URL to the first 200 characters.\n      span.setAttribute('lcp.url', _lcpEntry.url.trim().slice(0, 200));\n    }\n\n    span.setAttribute('lcp.size', _lcpEntry.size);\n  }\n\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n  if (_clsEntry && _clsEntry.sources) {\n    DEBUG_BUILD && logger.log('[Measurements] Adding CLS Data');\n    _clsEntry.sources.forEach((source, index) =>\n      span.setAttribute(`cls.source.${index + 1}`, htmlTreeAsString(source.node)),\n    );\n  }\n}\n\nfunction setResourceEntrySizeData(\n  attributes,\n  entry,\n  key,\n  dataKey,\n) {\n  const entryVal = entry[key];\n  if (entryVal != null && entryVal < MAX_INT_AS_BYTES) {\n    attributes[dataKey] = entryVal;\n  }\n}\n\n/**\n * Add ttfb request time information to measurements.\n *\n * ttfb information is added via vendored web vitals library.\n */\nfunction _addTtfbRequestTimeToMeasurements(_measurements) {\n  const navEntry = getNavigationEntry();\n  if (!navEntry) {\n    return;\n  }\n\n  const { responseStart, requestStart } = navEntry;\n\n  if (requestStart <= responseStart) {\n    DEBUG_BUILD && logger.log('[Measurements] Adding TTFB Request Time');\n    _measurements['ttfb.requestTime'] = {\n      value: responseStart - requestStart,\n      unit: 'millisecond',\n    };\n  }\n}\n\nexport { _addMeasureSpans, _addResourceSpans, addPerformanceEntries, startTrackingInteractions, startTrackingLongTasks, startTrackingWebVitals };\n//# sourceMappingURL=browserMetrics.js.map\n","import { getClient, getCurrentScope, getActiveSpan, getRootSpan, spanToJSON, SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, startInactiveSpan, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE } from '@sentry/core';\nimport { browserPerformanceTimeOrigin, htmlTreeAsString, dropUndefinedKeys } from '@sentry/utils';\nimport { addInpInstrumentationHandler, addPerformanceInstrumentationHandler, isPerformanceEventTiming } from './instrument.js';\nimport { getBrowserPerformanceAPI, msToSec } from './utils.js';\n\n// We only care about name here\n\nconst LAST_INTERACTIONS = [];\nconst INTERACTIONS_ROUTE_MAP = new Map();\n\n/**\n * Start tracking INP webvital events.\n */\nfunction startTrackingINP() {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    const inpCallback = _trackINP();\n\n    return () => {\n      inpCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\nconst INP_ENTRY_MAP = {\n  click: 'click',\n  pointerdown: 'click',\n  pointerup: 'click',\n  mousedown: 'click',\n  mouseup: 'click',\n  touchstart: 'click',\n  touchend: 'click',\n  mouseover: 'hover',\n  mouseout: 'hover',\n  mouseenter: 'hover',\n  mouseleave: 'hover',\n  pointerover: 'hover',\n  pointerout: 'hover',\n  pointerenter: 'hover',\n  pointerleave: 'hover',\n  dragstart: 'drag',\n  dragend: 'drag',\n  drag: 'drag',\n  dragenter: 'drag',\n  dragleave: 'drag',\n  dragover: 'drag',\n  drop: 'drag',\n  keydown: 'press',\n  keyup: 'press',\n  keypress: 'press',\n  input: 'press',\n};\n\n/** Starts tracking the Interaction to Next Paint on the current page. */\nfunction _trackINP() {\n  return addInpInstrumentationHandler(({ metric }) => {\n    const client = getClient();\n    if (!client || metric.value == undefined) {\n      return;\n    }\n\n    const entry = metric.entries.find(entry => entry.duration === metric.value && INP_ENTRY_MAP[entry.name]);\n\n    if (!entry) {\n      return;\n    }\n\n    const { interactionId } = entry;\n    const interactionType = INP_ENTRY_MAP[entry.name];\n\n    const options = client.getOptions();\n    /** Build the INP span, create an envelope from the span, and then send the envelope */\n    const startTime = msToSec((browserPerformanceTimeOrigin ) + entry.startTime);\n    const duration = msToSec(metric.value);\n    const scope = getCurrentScope();\n    const activeSpan = getActiveSpan();\n    const rootSpan = activeSpan ? getRootSpan(activeSpan) : undefined;\n\n    // We first try to lookup the route name from our INTERACTIONS_ROUTE_MAP,\n    // where we cache the route per interactionId\n    const cachedRouteName = interactionId != null ? INTERACTIONS_ROUTE_MAP.get(interactionId) : undefined;\n\n    // Else, we try to use the active span.\n    // Finally, we fall back to look at the transactionName on the scope\n    const routeName =\n      cachedRouteName || (rootSpan ? spanToJSON(rootSpan).description : scope.getScopeData().transactionName);\n\n    const user = scope.getUser();\n\n    // We need to get the replay, user, and activeTransaction from the current scope\n    // so that we can associate replay id, profile id, and a user display to the span\n    const replay = client.getIntegrationByName('Replay');\n\n    const replayId = replay && replay.getReplayId();\n\n    const userDisplay = user !== undefined ? user.email || user.id || user.ip_address : undefined;\n    let profileId = undefined;\n    try {\n      // @ts-expect-error skip optional chaining to save bundle size with try catch\n      profileId = scope.getScopeData().contexts.profile.profile_id;\n    } catch (e) {\n      // do nothing\n    }\n\n    const name = htmlTreeAsString(entry.target);\n    const attributes = dropUndefinedKeys({\n      release: options.release,\n      environment: options.environment,\n      transaction: routeName,\n      [SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME]: metric.value,\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser.inp',\n      user: userDisplay || undefined,\n      profile_id: profileId || undefined,\n      replay_id: replayId || undefined,\n    });\n\n    const span = startInactiveSpan({\n      name,\n      op: `ui.interaction.${interactionType}`,\n      attributes,\n      startTime: startTime,\n      experimental: {\n        standalone: true,\n      },\n    });\n\n    span.addEvent('inp', {\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT]: 'millisecond',\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE]: metric.value,\n    });\n\n    span.end(startTime + duration);\n  });\n}\n\n/** Register a listener to cache route information for INP interactions. */\nfunction registerInpInteractionListener(latestRoute) {\n  const handleEntries = ({ entries }) => {\n    entries.forEach(entry => {\n      if (!isPerformanceEventTiming(entry) || !latestRoute.name) {\n        return;\n      }\n\n      const interactionId = entry.interactionId;\n      if (interactionId == null) {\n        return;\n      }\n\n      // If the interaction was already recorded before, nothing more to do\n      if (INTERACTIONS_ROUTE_MAP.has(interactionId)) {\n        return;\n      }\n\n      // We keep max. 10 interactions in the list, then remove the oldest one & clean up\n      if (LAST_INTERACTIONS.length > 10) {\n        const last = LAST_INTERACTIONS.shift() ;\n        INTERACTIONS_ROUTE_MAP.delete(last);\n      }\n\n      // We add the interaction to the list of recorded interactions\n      // and store the route information for this interaction\n      // (we clone the object because it is mutated when it changes)\n      LAST_INTERACTIONS.push(interactionId);\n      INTERACTIONS_ROUTE_MAP.set(interactionId, latestRoute.name);\n    });\n  };\n\n  addPerformanceInstrumentationHandler('event', handleEntries);\n  addPerformanceInstrumentationHandler('first-input', handleEntries);\n}\n\nexport { registerInpInteractionListener, startTrackingINP };\n//# sourceMappingURL=inp.js.map\n","const getRating = (value, thresholds) => {\n  if (value > thresholds[1]) {\n    return 'poor';\n  }\n  if (value > thresholds[0]) {\n    return 'needs-improvement';\n  }\n  return 'good';\n};\n\nconst bindReporter = (\n  callback,\n  metric,\n  thresholds,\n  reportAllChanges,\n) => {\n  let prevValue;\n  let delta;\n  return (forceReport) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (delta || prevValue === undefined) {\n          prevValue = metric.value;\n          metric.delta = delta;\n          metric.rating = getRating(metric.value, thresholds);\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n\nexport { bindReporter };\n//# sourceMappingURL=bindReporter.js.map\n","import { getNavigationEntry } from './getNavigationEntry.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst getActivationStart = () => {\n  const navEntry = getNavigationEntry();\n  return (navEntry && navEntry.activationStart) || 0;\n};\n\nexport { getActivationStart };\n//# sourceMappingURL=getActivationStart.js.map\n","import { WINDOW } from '../../../types.js';\nimport { generateUniqueID } from './generateUniqueID.js';\nimport { getActivationStart } from './getActivationStart.js';\nimport { getNavigationEntry } from './getNavigationEntry.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst initMetric = (name, value) => {\n  const navEntry = getNavigationEntry();\n  let navigationType = 'navigate';\n\n  if (navEntry) {\n    if ((WINDOW.document && WINDOW.document.prerendering) || getActivationStart() > 0) {\n      navigationType = 'prerender';\n    } else if (WINDOW.document && WINDOW.document.wasDiscarded) {\n      navigationType = 'restore';\n    } else if (navEntry.type) {\n      navigationType = navEntry.type.replace(/_/g, '-') ;\n    }\n  }\n\n  // Use `entries` type specific for the metric.\n  const entries = [];\n\n  return {\n    name,\n    value: typeof value === 'undefined' ? -1 : value,\n    rating: 'good' , // If needed, will be updated when reported. `const` to keep the type from widening to `string`.\n    delta: 0,\n    entries,\n    id: generateUniqueID(),\n    navigationType,\n  };\n};\n\nexport { initMetric };\n//# sourceMappingURL=initMetric.js.map\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nconst generateUniqueID = () => {\n  return `v3-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n\nexport { generateUniqueID };\n//# sourceMappingURL=generateUniqueID.js.map\n","/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nconst observe = (\n  type,\n  callback,\n  opts,\n) => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      const po = new PerformanceObserver(list => {\n        // Delay by a microtask to workaround a bug in Safari where the\n        // callback is invoked immediately, rather than in a separate task.\n        // See: https://github.com/GoogleChrome/web-vitals/issues/277\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        Promise.resolve().then(() => {\n          callback(list.getEntries() );\n        });\n      });\n      po.observe(\n        Object.assign(\n          {\n            type,\n            buffered: true,\n          },\n          opts || {},\n        ) ,\n      );\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n\nexport { observe };\n//# sourceMappingURL=observe.js.map\n","import { WINDOW } from '../../../types.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst onHidden = (cb) => {\n  const onHiddenOrPageHide = (event) => {\n    if (event.type === 'pagehide' || (WINDOW.document && WINDOW.document.visibilityState === 'hidden')) {\n      cb(event);\n    }\n  };\n\n  if (WINDOW.document) {\n    addEventListener('visibilitychange', onHiddenOrPageHide, true);\n    // Some browsers have buggy implementations of visibilitychange,\n    // so we use pagehide in addition, just to be safe.\n    addEventListener('pagehide', onHiddenOrPageHide, true);\n  }\n};\n\nexport { onHidden };\n//# sourceMappingURL=onHidden.js.map\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst runOnce = (cb) => {\n  let called = false;\n  return (arg) => {\n    if (!called) {\n      cb(arg);\n      called = true;\n    }\n  };\n};\n\nexport { runOnce };\n//# sourceMappingURL=runOnce.js.map\n","import { WINDOW } from '../../../types.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst whenActivated = (callback) => {\n  if (WINDOW.document && WINDOW.document.prerendering) {\n    addEventListener('prerenderingchange', () => callback(), true);\n  } else {\n    callback();\n  }\n};\n\nexport { whenActivated };\n//# sourceMappingURL=whenActivated.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { getActivationStart } from './lib/getActivationStart.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { whenActivated } from './lib/whenActivated.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for FCP. See https://web.dev/articles/fcp#what_is_a_good_fcp_score */\nconst FCPThresholds = [1800, 3000];\n\n/**\n * Calculates the [FCP](https://web.dev/articles/fcp) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `paint` performance entry used to determine the value. The reported\n * value is a `DOMHighResTimeStamp`.\n */\nconst onFCP = (onReport, opts = {}) => {\n  whenActivated(() => {\n    const visibilityWatcher = getVisibilityWatcher();\n    const metric = initMetric('FCP');\n    let report;\n\n    const handleEntries = (entries) => {\n      (entries ).forEach(entry => {\n        if (entry.name === 'first-contentful-paint') {\n          po.disconnect();\n\n          // Only report if the page wasn't hidden prior to the first paint.\n          if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n            // The activationStart reference is used because FCP should be\n            // relative to page activation rather than navigation start if the\n            // page was prerendered. But in cases where `activationStart` occurs\n            // after the FCP, this time should be clamped at 0.\n            metric.value = Math.max(entry.startTime - getActivationStart(), 0);\n            metric.entries.push(entry);\n            report(true);\n          }\n        }\n      });\n    };\n\n    const po = observe('paint', handleEntries);\n\n    if (po) {\n      report = bindReporter(onReport, metric, FCPThresholds, opts.reportAllChanges);\n    }\n  });\n};\n\nexport { FCPThresholds, onFCP };\n//# sourceMappingURL=onFCP.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\nimport { runOnce } from './lib/runOnce.js';\nimport { onFCP } from './onFCP.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for CLS. See https://web.dev/articles/cls#what_is_a_good_cls_score */\nconst CLSThresholds = [0.1, 0.25];\n\n/**\n * Calculates the [CLS](https://web.dev/articles/cls) value for the current page and\n * calls the `callback` function once the value is ready to be reported, along\n * with all `layout-shift` performance entries that were used in the metric\n * value calculation. The reported value is a `double` (corresponding to a\n * [layout shift score](https://web.dev/articles/cls#layout_shift_score)).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** CLS should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nconst onCLS = (onReport, opts = {}) => {\n  // Start monitoring FCP so we can only report CLS if FCP is also reported.\n  // Note: this is done to match the current behavior of CrUX.\n  onFCP(\n    runOnce(() => {\n      const metric = initMetric('CLS', 0);\n      let report;\n\n      let sessionValue = 0;\n      let sessionEntries = [];\n\n      const handleEntries = (entries) => {\n        entries.forEach(entry => {\n          // Only count layout shifts without recent user input.\n          if (!entry.hadRecentInput) {\n            const firstSessionEntry = sessionEntries[0];\n            const lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n\n            // If the entry occurred less than 1 second after the previous entry\n            // and less than 5 seconds after the first entry in the session,\n            // include the entry in the current session. Otherwise, start a new\n            // session.\n            if (\n              sessionValue &&\n              entry.startTime - lastSessionEntry.startTime < 1000 &&\n              entry.startTime - firstSessionEntry.startTime < 5000\n            ) {\n              sessionValue += entry.value;\n              sessionEntries.push(entry);\n            } else {\n              sessionValue = entry.value;\n              sessionEntries = [entry];\n            }\n          }\n        });\n\n        // If the current session value is larger than the current CLS value,\n        // update CLS and the entries contributing to it.\n        if (sessionValue > metric.value) {\n          metric.value = sessionValue;\n          metric.entries = sessionEntries;\n          report();\n        }\n      };\n\n      const po = observe('layout-shift', handleEntries);\n      if (po) {\n        report = bindReporter(onReport, metric, CLSThresholds, opts.reportAllChanges);\n\n        onHidden(() => {\n          handleEntries(po.takeRecords() );\n          report(true);\n        });\n\n        // Queue a task to report (if nothing else triggers a report first).\n        // This allows CLS to be reported as soon as FCP fires when\n        // `reportAllChanges` is true.\n        setTimeout(report, 0);\n      }\n    }),\n  );\n};\n\nexport { CLSThresholds, onCLS };\n//# sourceMappingURL=getCLS.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\nimport { runOnce } from './lib/runOnce.js';\nimport { whenActivated } from './lib/whenActivated.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for FID. See https://web.dev/articles/fid#what_is_a_good_fid_score */\nconst FIDThresholds = [100, 300];\n\n/**\n * Calculates the [FID](https://web.dev/articles/fid) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `first-input` performance entry used to determine the value. The\n * reported value is a `DOMHighResTimeStamp`.\n *\n * _**Important:** since FID is only reported after the user interacts with the\n * page, it's possible that it will not be reported for some page loads._\n */\nconst onFID = (onReport, opts = {}) => {\n  whenActivated(() => {\n    const visibilityWatcher = getVisibilityWatcher();\n    const metric = initMetric('FID');\n    // eslint-disable-next-line prefer-const\n    let report;\n\n    const handleEntry = (entry) => {\n      // Only report if the page wasn't hidden prior to the first input.\n      if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n        metric.value = entry.processingStart - entry.startTime;\n        metric.entries.push(entry);\n        report(true);\n      }\n    };\n\n    const handleEntries = (entries) => {\n      (entries ).forEach(handleEntry);\n    };\n\n    const po = observe('first-input', handleEntries);\n    report = bindReporter(onReport, metric, FIDThresholds, opts.reportAllChanges);\n\n    if (po) {\n      onHidden(\n        runOnce(() => {\n          handleEntries(po.takeRecords() );\n          po.disconnect();\n        }),\n      );\n    }\n  });\n};\n\nexport { FIDThresholds, onFID };\n//# sourceMappingURL=getFID.js.map\n","import { observe } from '../observe.js';\n\nlet interactionCountEstimate = 0;\nlet minKnownInteractionId = Infinity;\nlet maxKnownInteractionId = 0;\n\nconst updateEstimate = (entries) => {\n  (entries ).forEach(e => {\n    if (e.interactionId) {\n      minKnownInteractionId = Math.min(minKnownInteractionId, e.interactionId);\n      maxKnownInteractionId = Math.max(maxKnownInteractionId, e.interactionId);\n\n      interactionCountEstimate = maxKnownInteractionId ? (maxKnownInteractionId - minKnownInteractionId) / 7 + 1 : 0;\n    }\n  });\n};\n\nlet po;\n\n/**\n * Returns the `interactionCount` value using the native API (if available)\n * or the polyfill estimate in this module.\n */\nconst getInteractionCount = () => {\n  return po ? interactionCountEstimate : performance.interactionCount || 0;\n};\n\n/**\n * Feature detects native support or initializes the polyfill if needed.\n */\nconst initInteractionCountPolyfill = () => {\n  if ('interactionCount' in performance || po) return;\n\n  po = observe('event', updateEstimate, {\n    type: 'event',\n    buffered: true,\n    durationThreshold: 0,\n  } );\n};\n\nexport { getInteractionCount, initInteractionCountPolyfill };\n//# sourceMappingURL=interactionCountPolyfill.js.map\n","import { WINDOW } from '../../types.js';\nimport { bindReporter } from './lib/bindReporter.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\nimport { initInteractionCountPolyfill, getInteractionCount } from './lib/polyfills/interactionCountPolyfill.js';\nimport { whenActivated } from './lib/whenActivated.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for INP. See https://web.dev/articles/inp#what_is_a_good_inp_score */\nconst INPThresholds = [200, 500];\n\n// Used to store the interaction count after a bfcache restore, since p98\n// interaction latencies should only consider the current navigation.\nconst prevInteractionCount = 0;\n\n/**\n * Returns the interaction count since the last bfcache restore (or for the\n * full page lifecycle if there were no bfcache restores).\n */\nconst getInteractionCountForNavigation = () => {\n  return getInteractionCount() - prevInteractionCount;\n};\n\n// To prevent unnecessary memory usage on pages with lots of interactions,\n// store at most 10 of the longest interactions to consider as INP candidates.\nconst MAX_INTERACTIONS_TO_CONSIDER = 10;\n\n// A list of longest interactions on the page (by latency) sorted so the\n// longest one is first. The list is as most MAX_INTERACTIONS_TO_CONSIDER long.\nconst longestInteractionList = [];\n\n// A mapping of longest interactions by their interaction ID.\n// This is used for faster lookup.\nconst longestInteractionMap = {};\n\n/**\n * Takes a performance entry and adds it to the list of worst interactions\n * if its duration is long enough to make it among the worst. If the\n * entry is part of an existing interaction, it is merged and the latency\n * and entries list is updated as needed.\n */\nconst processEntry = (entry) => {\n  // The least-long of the 10 longest interactions.\n  const minLongestInteraction = longestInteractionList[longestInteractionList.length - 1];\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const existingInteraction = longestInteractionMap[entry.interactionId];\n\n  // Only process the entry if it's possibly one of the ten longest,\n  // or if it's part of an existing interaction.\n  if (\n    existingInteraction ||\n    longestInteractionList.length < MAX_INTERACTIONS_TO_CONSIDER ||\n    entry.duration > minLongestInteraction.latency\n  ) {\n    // If the interaction already exists, update it. Otherwise create one.\n    if (existingInteraction) {\n      existingInteraction.entries.push(entry);\n      existingInteraction.latency = Math.max(existingInteraction.latency, entry.duration);\n    } else {\n      const interaction = {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        id: entry.interactionId,\n        latency: entry.duration,\n        entries: [entry],\n      };\n      longestInteractionMap[interaction.id] = interaction;\n      longestInteractionList.push(interaction);\n    }\n\n    // Sort the entries by latency (descending) and keep only the top ten.\n    longestInteractionList.sort((a, b) => b.latency - a.latency);\n    longestInteractionList.splice(MAX_INTERACTIONS_TO_CONSIDER).forEach(i => {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete longestInteractionMap[i.id];\n    });\n  }\n};\n\n/**\n * Returns the estimated p98 longest interaction based on the stored\n * interaction candidates and the interaction count for the current page.\n */\nconst estimateP98LongestInteraction = () => {\n  const candidateInteractionIndex = Math.min(\n    longestInteractionList.length - 1,\n    Math.floor(getInteractionCountForNavigation() / 50),\n  );\n\n  return longestInteractionList[candidateInteractionIndex];\n};\n\n/**\n * Calculates the [INP](https://web.dev/articles/inp) value for the current\n * page and calls the `callback` function once the value is ready, along with\n * the `event` performance entries reported for that interaction. The reported\n * value is a `DOMHighResTimeStamp`.\n *\n * A custom `durationThreshold` configuration option can optionally be passed to\n * control what `event-timing` entries are considered for INP reporting. The\n * default threshold is `40`, which means INP scores of less than 40 are\n * reported as 0. Note that this will not affect your 75th percentile INP value\n * unless that value is also less than 40 (well below the recommended\n * [good](https://web.dev/articles/inp#what_is_a_good_inp_score) threshold).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** INP should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nconst onINP = (onReport, opts = {}) => {\n  whenActivated(() => {\n    // TODO(philipwalton): remove once the polyfill is no longer needed.\n    initInteractionCountPolyfill();\n\n    const metric = initMetric('INP');\n    // eslint-disable-next-line prefer-const\n    let report;\n\n    const handleEntries = (entries) => {\n      entries.forEach(entry => {\n        if (entry.interactionId) {\n          processEntry(entry);\n        }\n\n        // Entries of type `first-input` don't currently have an `interactionId`,\n        // so to consider them in INP we have to first check that an existing\n        // entry doesn't match the `duration` and `startTime`.\n        // Note that this logic assumes that `event` entries are dispatched\n        // before `first-input` entries. This is true in Chrome (the only browser\n        // that currently supports INP).\n        // TODO(philipwalton): remove once crbug.com/1325826 is fixed.\n        if (entry.entryType === 'first-input') {\n          const noMatchingEntry = !longestInteractionList.some(interaction => {\n            return interaction.entries.some(prevEntry => {\n              return entry.duration === prevEntry.duration && entry.startTime === prevEntry.startTime;\n            });\n          });\n          if (noMatchingEntry) {\n            processEntry(entry);\n          }\n        }\n      });\n\n      const inp = estimateP98LongestInteraction();\n\n      if (inp && inp.latency !== metric.value) {\n        metric.value = inp.latency;\n        metric.entries = inp.entries;\n        report();\n      }\n    };\n\n    const po = observe('event', handleEntries, {\n      // Event Timing entries have their durations rounded to the nearest 8ms,\n      // so a duration of 40ms would be any event that spans 2.5 or more frames\n      // at 60Hz. This threshold is chosen to strike a balance between usefulness\n      // and performance. Running this callback for any interaction that spans\n      // just one or two frames is likely not worth the insight that could be\n      // gained.\n      durationThreshold: opts.durationThreshold != null ? opts.durationThreshold : 40,\n    } );\n\n    report = bindReporter(onReport, metric, INPThresholds, opts.reportAllChanges);\n\n    if (po) {\n      // If browser supports interactionId (and so supports INP), also\n      // observe entries of type `first-input`. This is useful in cases\n      // where the first interaction is less than the `durationThreshold`.\n      if ('PerformanceEventTiming' in WINDOW && 'interactionId' in PerformanceEventTiming.prototype) {\n        po.observe({ type: 'first-input', buffered: true });\n      }\n\n      onHidden(() => {\n        handleEntries(po.takeRecords() );\n\n        // If the interaction count shows that there were interactions but\n        // none were captured by the PerformanceObserver, report a latency of 0.\n        if (metric.value < 0 && getInteractionCountForNavigation() > 0) {\n          metric.value = 0;\n          metric.entries = [];\n        }\n\n        report(true);\n      });\n    }\n  });\n};\n\nexport { INPThresholds, onINP };\n//# sourceMappingURL=getINP.js.map\n","import { WINDOW } from '../../types.js';\nimport { bindReporter } from './lib/bindReporter.js';\nimport { getActivationStart } from './lib/getActivationStart.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\nimport { runOnce } from './lib/runOnce.js';\nimport { whenActivated } from './lib/whenActivated.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for LCP. See https://web.dev/articles/lcp#what_is_a_good_lcp_score */\nconst LCPThresholds = [2500, 4000];\n\nconst reportedMetricIDs = {};\n\n/**\n * Calculates the [LCP](https://web.dev/articles/lcp) value for the current page and\n * calls the `callback` function once the value is ready (along with the\n * relevant `largest-contentful-paint` performance entry used to determine the\n * value). The reported value is a `DOMHighResTimeStamp`.\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called any time a new `largest-contentful-paint`\n * performance entry is dispatched, or once the final value of the metric has\n * been determined.\n */\nconst onLCP = (onReport, opts = {}) => {\n  whenActivated(() => {\n    const visibilityWatcher = getVisibilityWatcher();\n    const metric = initMetric('LCP');\n    let report;\n\n    const handleEntries = (entries) => {\n      const lastEntry = entries[entries.length - 1] ;\n      if (lastEntry) {\n        // Only report if the page wasn't hidden prior to LCP.\n        if (lastEntry.startTime < visibilityWatcher.firstHiddenTime) {\n          // The startTime attribute returns the value of the renderTime if it is\n          // not 0, and the value of the loadTime otherwise. The activationStart\n          // reference is used because LCP should be relative to page activation\n          // rather than navigation start if the page was prerendered. But in cases\n          // where `activationStart` occurs after the LCP, this time should be\n          // clamped at 0.\n          metric.value = Math.max(lastEntry.startTime - getActivationStart(), 0);\n          metric.entries = [lastEntry];\n          report();\n        }\n      }\n    };\n\n    const po = observe('largest-contentful-paint', handleEntries);\n\n    if (po) {\n      report = bindReporter(onReport, metric, LCPThresholds, opts.reportAllChanges);\n\n      const stopListening = runOnce(() => {\n        if (!reportedMetricIDs[metric.id]) {\n          handleEntries(po.takeRecords() );\n          po.disconnect();\n          reportedMetricIDs[metric.id] = true;\n          report(true);\n        }\n      });\n\n      // Stop listening after input. Note: while scrolling is an input that\n      // stops LCP observation, it's unreliable since it can be programmatically\n      // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n      ['keydown', 'click'].forEach(type => {\n        if (WINDOW.document) {\n          // Wrap in a setTimeout so the callback is run in a separate task\n          // to avoid extending the keyboard/click handler to reduce INP impact\n          // https://github.com/GoogleChrome/web-vitals/issues/383\n          addEventListener(type, () => setTimeout(stopListening, 0), true);\n        }\n      });\n\n      onHidden(stopListening);\n    }\n  });\n};\n\nexport { LCPThresholds, onLCP };\n//# sourceMappingURL=getLCP.js.map\n","import { WINDOW } from '../../types.js';\nimport { bindReporter } from './lib/bindReporter.js';\nimport { getActivationStart } from './lib/getActivationStart.js';\nimport { getNavigationEntry } from './lib/getNavigationEntry.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { whenActivated } from './lib/whenActivated.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for TTFB. See https://web.dev/articles/ttfb#what_is_a_good_ttfb_score */\nconst TTFBThresholds = [800, 1800];\n\n/**\n * Runs in the next task after the page is done loading and/or prerendering.\n * @param callback\n */\nconst whenReady = (callback) => {\n  if (WINDOW.document && WINDOW.document.prerendering) {\n    whenActivated(() => whenReady(callback));\n  } else if (WINDOW.document && WINDOW.document.readyState !== 'complete') {\n    addEventListener('load', () => whenReady(callback), true);\n  } else {\n    // Queue a task so the callback runs after `loadEventEnd`.\n    setTimeout(callback, 0);\n  }\n};\n\n/**\n * Calculates the [TTFB](https://web.dev/articles/ttfb) value for the\n * current page and calls the `callback` function once the page has loaded,\n * along with the relevant `navigation` performance entry used to determine the\n * value. The reported value is a `DOMHighResTimeStamp`.\n *\n * Note, this function waits until after the page is loaded to call `callback`\n * in order to ensure all properties of the `navigation` entry are populated.\n * This is useful if you want to report on other metrics exposed by the\n * [Navigation Timing API](https://w3c.github.io/navigation-timing/). For\n * example, the TTFB metric starts from the page's [time\n * origin](https://www.w3.org/TR/hr-time-2/#sec-time-origin), which means it\n * includes time spent on DNS lookup, connection negotiation, network latency,\n * and server processing time.\n */\nconst onTTFB = (onReport, opts = {}) => {\n  const metric = initMetric('TTFB');\n  const report = bindReporter(onReport, metric, TTFBThresholds, opts.reportAllChanges);\n\n  whenReady(() => {\n    const navEntry = getNavigationEntry();\n\n    if (navEntry) {\n      const responseStart = navEntry.responseStart;\n\n      // In some cases no value is reported by the browser (for\n      // privacy/security reasons), and in other cases (bugs) the value is\n      // negative or is larger than the current page time. Ignore these cases:\n      // https://github.com/GoogleChrome/web-vitals/issues/137\n      // https://github.com/GoogleChrome/web-vitals/issues/162\n      // https://github.com/GoogleChrome/web-vitals/issues/275\n      if (responseStart <= 0 || responseStart > performance.now()) return;\n\n      // The activationStart reference is used because TTFB should be\n      // relative to page activation rather than navigation start if the\n      // page was prerendered. But in cases where `activationStart` occurs\n      // after the first byte is received, this time should be clamped at 0.\n      metric.value = Math.max(responseStart - getActivationStart(), 0);\n\n      metric.entries = [navEntry];\n      report(true);\n    }\n  });\n};\n\nexport { TTFBThresholds, onTTFB };\n//# sourceMappingURL=onTTFB.js.map\n","import { logger, getFunctionName } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { onCLS } from './web-vitals/getCLS.js';\nimport { onFID } from './web-vitals/getFID.js';\nimport { onINP } from './web-vitals/getINP.js';\nimport { onLCP } from './web-vitals/getLCP.js';\nimport { observe } from './web-vitals/lib/observe.js';\nimport { onTTFB } from './web-vitals/onTTFB.js';\n\nconst handlers = {};\nconst instrumented = {};\n\nlet _previousCls;\nlet _previousFid;\nlet _previousLcp;\nlet _previousTtfb;\nlet _previousInp;\n\n/**\n * Add a callback that will be triggered when a CLS metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for CLS when the cleanup callback is called.\n * This will lead to the CLS being finalized and frozen.\n */\nfunction addClsInstrumentationHandler(\n  callback,\n  stopOnCallback = false,\n) {\n  return addMetricObserver('cls', callback, instrumentCls, _previousCls, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a LCP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for LCP when the cleanup callback is called.\n * This will lead to the LCP being finalized and frozen.\n */\nfunction addLcpInstrumentationHandler(\n  callback,\n  stopOnCallback = false,\n) {\n  return addMetricObserver('lcp', callback, instrumentLcp, _previousLcp, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addFidInstrumentationHandler(callback) {\n  return addMetricObserver('fid', callback, instrumentFid, _previousFid);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n */\nfunction addTtfbInstrumentationHandler(callback) {\n  return addMetricObserver('ttfb', callback, instrumentTtfb, _previousTtfb);\n}\n\n/**\n * Add a callback that will be triggered when a INP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addInpInstrumentationHandler(\n  callback,\n) {\n  return addMetricObserver('inp', callback, instrumentInp, _previousInp);\n}\n\n/**\n * Add a callback that will be triggered when a performance observer is triggered,\n * and receives the entries of the observer.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addPerformanceInstrumentationHandler(\n  type,\n  callback,\n) {\n  addHandler(type, callback);\n\n  if (!instrumented[type]) {\n    instrumentPerformanceObserver(type);\n    instrumented[type] = true;\n  }\n\n  return getCleanupCallback(type, callback);\n}\n\n/** Trigger all handlers of a given type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = handlers[type];\n\n  if (!typeHandlers || !typeHandlers.length) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nfunction instrumentCls() {\n  return onCLS(\n    metric => {\n      triggerHandlers('cls', {\n        metric,\n      });\n      _previousCls = metric;\n    },\n    // We want the callback to be called whenever the CLS value updates.\n    // By default, the callback is only called when the tab goes to the background.\n    { reportAllChanges: true },\n  );\n}\n\nfunction instrumentFid() {\n  return onFID(metric => {\n    triggerHandlers('fid', {\n      metric,\n    });\n    _previousFid = metric;\n  });\n}\n\nfunction instrumentLcp() {\n  return onLCP(\n    metric => {\n      triggerHandlers('lcp', {\n        metric,\n      });\n      _previousLcp = metric;\n    },\n    // We want the callback to be called whenever the LCP value updates.\n    // By default, the callback is only called when the tab goes to the background.\n    { reportAllChanges: true },\n  );\n}\n\nfunction instrumentTtfb() {\n  return onTTFB(metric => {\n    triggerHandlers('ttfb', {\n      metric,\n    });\n    _previousTtfb = metric;\n  });\n}\n\nfunction instrumentInp() {\n  return onINP(metric => {\n    triggerHandlers('inp', {\n      metric,\n    });\n    _previousInp = metric;\n  });\n}\n\nfunction addMetricObserver(\n  type,\n  callback,\n  instrumentFn,\n  previousValue,\n  stopOnCallback = false,\n) {\n  addHandler(type, callback);\n\n  let stopListening;\n\n  if (!instrumented[type]) {\n    stopListening = instrumentFn();\n    instrumented[type] = true;\n  }\n\n  if (previousValue) {\n    callback({ metric: previousValue });\n  }\n\n  return getCleanupCallback(type, callback, stopOnCallback ? stopListening : undefined);\n}\n\nfunction instrumentPerformanceObserver(type) {\n  const options = {};\n\n  // Special per-type options we want to use\n  if (type === 'event') {\n    options.durationThreshold = 0;\n  }\n\n  observe(\n    type,\n    entries => {\n      triggerHandlers(type, { entries });\n    },\n    options,\n  );\n}\n\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n// Get a callback which can be called to remove the instrumentation handler\nfunction getCleanupCallback(\n  type,\n  callback,\n  stopListening,\n) {\n  return () => {\n    if (stopListening) {\n      stopListening();\n    }\n\n    const typeHandlers = handlers[type];\n\n    if (!typeHandlers) {\n      return;\n    }\n\n    const index = typeHandlers.indexOf(callback);\n    if (index !== -1) {\n      typeHandlers.splice(index, 1);\n    }\n  };\n}\n\n/**\n * Check if a PerformanceEntry is a PerformanceEventTiming by checking for the `duration` property.\n */\nfunction isPerformanceEventTiming(entry) {\n  return 'duration' in entry;\n}\n\nexport { addClsInstrumentationHandler, addFidInstrumentationHandler, addInpInstrumentationHandler, addLcpInstrumentationHandler, addPerformanceInstrumentationHandler, addTtfbInstrumentationHandler, isPerformanceEventTiming };\n//# sourceMappingURL=instrument.js.map\n","import { spanToJSON, withActiveSpan, startInactiveSpan } from '@sentry/core';\nimport { WINDOW } from '../types.js';\n\n/**\n * Checks if a given value is a valid measurement value.\n */\nfunction isMeasurementValue(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n */\nfunction startAndEndSpan(\n  parentSpan,\n  startTimeInSeconds,\n  endTime,\n  { ...ctx },\n) {\n  const parentStartTime = spanToJSON(parentSpan).start_timestamp;\n  if (parentStartTime && parentStartTime > startTimeInSeconds) {\n    // We can only do this for SentrySpans...\n    if (typeof (parentSpan ).updateStartTime === 'function') {\n      (parentSpan ).updateStartTime(startTimeInSeconds);\n    }\n  }\n\n  // The return value only exists for tests\n  return withActiveSpan(parentSpan, () => {\n    const span = startInactiveSpan({\n      startTime: startTimeInSeconds,\n      ...ctx,\n    });\n\n    if (span) {\n      span.end(endTime);\n    }\n\n    return span;\n  });\n}\n\n/** Get the browser performance API. */\nfunction getBrowserPerformanceAPI() {\n  // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n  return WINDOW && WINDOW.addEventListener && WINDOW.performance;\n}\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time) {\n  return time / 1000;\n}\n\nexport { getBrowserPerformanceAPI, isMeasurementValue, msToSec, startAndEndSpan };\n//# sourceMappingURL=utils.js.map\n","import { WINDOW } from '../../../types.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst getNavigationEntry = () => {\n  return WINDOW.performance && performance.getEntriesByType && performance.getEntriesByType('navigation')[0];\n};\n\nexport { getNavigationEntry };\n//# sourceMappingURL=getNavigationEntry.js.map\n","import { WINDOW } from '../../../types.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nlet firstHiddenTime = -1;\n\nconst initHiddenTime = () => {\n  // If the document is hidden when this code runs, assume it was always\n  // hidden and the page was loaded in the background, with the one exception\n  // that visibility state is always 'hidden' during prerendering, so we have\n  // to ignore that case until prerendering finishes (see: `prerenderingchange`\n  // event logic below).\n  firstHiddenTime = WINDOW.document.visibilityState === 'hidden' && !WINDOW.document.prerendering ? 0 : Infinity;\n};\n\nconst onVisibilityUpdate = (event) => {\n  // If the document is 'hidden' and no previous hidden timestamp has been\n  // set, update it based on the current event data.\n  if (WINDOW.document.visibilityState === 'hidden' && firstHiddenTime > -1) {\n    // If the event is a 'visibilitychange' event, it means the page was\n    // visible prior to this change, so the event timestamp is the first\n    // hidden time.\n    // However, if the event is not a 'visibilitychange' event, then it must\n    // be a 'prerenderingchange' event, and the fact that the document is\n    // still 'hidden' from the above check means the tab was activated\n    // in a background state and so has always been hidden.\n    firstHiddenTime = event.type === 'visibilitychange' ? event.timeStamp : 0;\n\n    // Remove all listeners now that a `firstHiddenTime` value has been set.\n    removeEventListener('visibilitychange', onVisibilityUpdate, true);\n    removeEventListener('prerenderingchange', onVisibilityUpdate, true);\n  }\n};\n\nconst addChangeListeners = () => {\n  addEventListener('visibilitychange', onVisibilityUpdate, true);\n  // IMPORTANT: when a page is prerendering, its `visibilityState` is\n  // 'hidden', so in order to account for cases where this module checks for\n  // visibility during prerendering, an additional check after prerendering\n  // completes is also required.\n  addEventListener('prerenderingchange', onVisibilityUpdate, true);\n};\n\nconst getVisibilityWatcher = () => {\n  if (WINDOW.document && firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    initHiddenTime();\n    addChangeListeners();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n\nexport { getVisibilityWatcher };\n//# sourceMappingURL=getVisibilityWatcher.js.map\n","import { GLOBAL_OBJ } from '@sentry/utils';\n\nconst WINDOW = GLOBAL_OBJ\n\n;\n\nexport { WINDOW };\n//# sourceMappingURL=types.js.map\n","import { _nullishCoalesce, _optionalChain } from '@sentry/utils';\nimport { addBreadcrumb, getClient, isSentryRequestUrl, addEventProcessor, prepareEvent, getIsolationScope, getCurrentScope, setContext, captureException, getActiveSpan, getRootSpan, spanToJSON, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, parseSampleRate } from '@sentry/core';\nimport { GLOBAL_OBJ, normalize, fill, htmlTreeAsString, browserPerformanceTimeOrigin, logger, uuid4, dropUndefinedKeys, stringMatchesSomePattern, createEnvelope, createEventEnvelopeHeaders, getSdkMetadataForEnvelopeHeader, resolvedSyncPromise, updateRateLimits, isRateLimited, isBrowser, consoleSandbox } from '@sentry/utils';\nimport { setTimeout as setTimeout$2, addPerformanceInstrumentationHandler, addLcpInstrumentationHandler, addClsInstrumentationHandler, addFidInstrumentationHandler, addInpInstrumentationHandler, SENTRY_XHR_DATA_KEY, addClickKeypressInstrumentationHandler, addHistoryInstrumentationHandler } from '@sentry-internal/browser-utils';\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and replay packages should `@sentry/browser` import\n// from `@sentry/replay` in the future\nconst WINDOW = GLOBAL_OBJ ;\n\nconst REPLAY_SESSION_KEY = 'sentryReplaySession';\nconst REPLAY_EVENT_NAME = 'replay_event';\nconst UNABLE_TO_SEND_REPLAY = 'Unable to send Replay';\n\n// The idle limit for a session after which recording is paused.\nconst SESSION_IDLE_PAUSE_DURATION = 300000; // 5 minutes in ms\n\n// The idle limit for a session after which the session expires.\nconst SESSION_IDLE_EXPIRE_DURATION = 900000; // 15 minutes in ms\n\n/** Default flush delays */\nconst DEFAULT_FLUSH_MIN_DELAY = 5000;\n// XXX: Temp fix for our debounce logic where `maxWait` would never occur if it\n// was the same as `wait`\nconst DEFAULT_FLUSH_MAX_DELAY = 5500;\n\n/* How long to wait for error checkouts */\nconst BUFFER_CHECKOUT_TIME = 60000;\n\nconst RETRY_BASE_INTERVAL = 5000;\nconst RETRY_MAX_COUNT = 3;\n\n/* The max (uncompressed) size in bytes of a network body. Any body larger than this will be truncated. */\nconst NETWORK_BODY_MAX_SIZE = 150000;\n\n/* The max size of a single console arg that is captured. Any arg larger than this will be truncated. */\nconst CONSOLE_ARG_MAX_SIZE = 5000;\n\n/* Min. time to wait before we consider something a slow click. */\nconst SLOW_CLICK_THRESHOLD = 3000;\n/* For scroll actions after a click, we only look for a very short time period to detect programmatic scrolling. */\nconst SLOW_CLICK_SCROLL_TIMEOUT = 300;\n\n/** When encountering a total segment size exceeding this size, stop the replay (as we cannot properly ingest it). */\nconst REPLAY_MAX_EVENT_BUFFER_SIZE = 20000000; // ~20MB\n\n/** Replays must be min. 5s long before we send them. */\nconst MIN_REPLAY_DURATION = 4999;\n/* The max. allowed value that the minReplayDuration can be set to. */\nconst MIN_REPLAY_DURATION_LIMIT = 15000;\n\n/** The max. length of a replay. */\nconst MAX_REPLAY_DURATION = 3600000; // 60 minutes in ms;\n\nfunction _nullishCoalesce$1(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } }function _optionalChain$5(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var NodeType$1;\n(function (NodeType) {\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\n})(NodeType$1 || (NodeType$1 = {}));\n\nfunction isElement$1(n) {\n    return n.nodeType === n.ELEMENT_NODE;\n}\nfunction isShadowRoot(n) {\n    const host = _optionalChain$5([n, 'optionalAccess', _ => _.host]);\n    return Boolean(_optionalChain$5([host, 'optionalAccess', _2 => _2.shadowRoot]) === n);\n}\nfunction isNativeShadowDom(shadowRoot) {\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\n}\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\n    if (cssText.includes(' background-clip: text;') &&\n        !cssText.includes(' -webkit-background-clip: text;')) {\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\n    }\n    return cssText;\n}\nfunction escapeImportStatement(rule) {\n    const { cssText } = rule;\n    if (cssText.split('\"').length < 3)\n        return cssText;\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\n    if (rule.layerName === '') {\n        statement.push(`layer`);\n    }\n    else if (rule.layerName) {\n        statement.push(`layer(${rule.layerName})`);\n    }\n    if (rule.supportsText) {\n        statement.push(`supports(${rule.supportsText})`);\n    }\n    if (rule.media.length) {\n        statement.push(rule.media.mediaText);\n    }\n    return statement.join(' ') + ';';\n}\nfunction stringifyStylesheet(s) {\n    try {\n        const rules = s.rules || s.cssRules;\n        return rules\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\n            : null;\n    }\n    catch (error) {\n        return null;\n    }\n}\nfunction stringifyRule(rule) {\n    let importStringified;\n    if (isCSSImportRule(rule)) {\n        try {\n            importStringified =\n                stringifyStylesheet(rule.styleSheet) ||\n                    escapeImportStatement(rule);\n        }\n        catch (error) {\n        }\n    }\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\n        return fixSafariColons(rule.cssText);\n    }\n    return importStringified || rule.cssText;\n}\nfunction fixSafariColons(cssStringified) {\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\n    return cssStringified.replace(regex, '$1\\\\$2');\n}\nfunction isCSSImportRule(rule) {\n    return 'styleSheet' in rule;\n}\nfunction isCSSStyleRule(rule) {\n    return 'selectorText' in rule;\n}\nclass Mirror {\n    constructor() {\n        this.idNodeMap = new Map();\n        this.nodeMetaMap = new WeakMap();\n    }\n    getId(n) {\n        if (!n)\n            return -1;\n        const id = _optionalChain$5([this, 'access', _3 => _3.getMeta, 'call', _4 => _4(n), 'optionalAccess', _5 => _5.id]);\n        return _nullishCoalesce$1(id, () => ( -1));\n    }\n    getNode(id) {\n        return this.idNodeMap.get(id) || null;\n    }\n    getIds() {\n        return Array.from(this.idNodeMap.keys());\n    }\n    getMeta(n) {\n        return this.nodeMetaMap.get(n) || null;\n    }\n    removeNodeFromMap(n) {\n        const id = this.getId(n);\n        this.idNodeMap.delete(id);\n        if (n.childNodes) {\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\n        }\n    }\n    has(id) {\n        return this.idNodeMap.has(id);\n    }\n    hasNode(node) {\n        return this.nodeMetaMap.has(node);\n    }\n    add(n, meta) {\n        const id = meta.id;\n        this.idNodeMap.set(id, n);\n        this.nodeMetaMap.set(n, meta);\n    }\n    replace(id, n) {\n        const oldNode = this.getNode(id);\n        if (oldNode) {\n            const meta = this.nodeMetaMap.get(oldNode);\n            if (meta)\n                this.nodeMetaMap.set(n, meta);\n        }\n        this.idNodeMap.set(id, n);\n    }\n    reset() {\n        this.idNodeMap = new Map();\n        this.nodeMetaMap = new WeakMap();\n    }\n}\nfunction createMirror() {\n    return new Mirror();\n}\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\n    if (tagName === 'OPTION') {\n        tagName = 'SELECT';\n    }\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\n        (type && maskInputOptions[type]) ||\n        type === 'password' ||\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\n}\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\n    let text = value || '';\n    if (!isMasked) {\n        return text;\n    }\n    if (maskInputFn) {\n        text = maskInputFn(text, element);\n    }\n    return '*'.repeat(text.length);\n}\nfunction toLowerCase(str) {\n    return str.toLowerCase();\n}\nfunction toUpperCase(str) {\n    return str.toUpperCase();\n}\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\nfunction is2DCanvasBlank(canvas) {\n    const ctx = canvas.getContext('2d');\n    if (!ctx)\n        return true;\n    const chunkSize = 50;\n    for (let x = 0; x < canvas.width; x += chunkSize) {\n        for (let y = 0; y < canvas.height; y += chunkSize) {\n            const getImageData = ctx.getImageData;\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\n                : getImageData;\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\n            if (pixelBuffer.some((pixel) => pixel !== 0))\n                return false;\n        }\n    }\n    return true;\n}\nfunction getInputType(element) {\n    const type = element.type;\n    return element.hasAttribute('data-rr-is-password')\n        ? 'password'\n        : type\n            ?\n                toLowerCase(type)\n            : null;\n}\nfunction getInputValue(el, tagName, type) {\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\n        return el.getAttribute('value') || '';\n    }\n    return el.value;\n}\n\nlet _id = 1;\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\nconst IGNORED_NODE = -2;\nfunction genId() {\n    return _id++;\n}\nfunction getValidTagName(element) {\n    if (element instanceof HTMLFormElement) {\n        return 'form';\n    }\n    const processedTagName = toLowerCase(element.tagName);\n    if (tagNameRegex.test(processedTagName)) {\n        return 'div';\n    }\n    return processedTagName;\n}\nfunction extractOrigin(url) {\n    let origin = '';\n    if (url.indexOf('//') > -1) {\n        origin = url.split('/').slice(0, 3).join('/');\n    }\n    else {\n        origin = url.split('/')[0];\n    }\n    origin = origin.split('?')[0];\n    return origin;\n}\nlet canvasService;\nlet canvasCtx;\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\nconst URL_WWW_MATCH = /^www\\..*/i;\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\nfunction absoluteToStylesheet(cssText, href) {\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\n        const filePath = path1 || path2 || path3;\n        const maybeQuote = quote1 || quote2 || '';\n        if (!filePath) {\n            return origin;\n        }\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\n        }\n        if (DATA_URI.test(filePath)) {\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\n        }\n        if (filePath[0] === '/') {\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\n        }\n        const stack = href.split('/');\n        const parts = filePath.split('/');\n        stack.pop();\n        for (const part of parts) {\n            if (part === '.') {\n                continue;\n            }\n            else if (part === '..') {\n                stack.pop();\n            }\n            else {\n                stack.push(part);\n            }\n        }\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\n    });\n}\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\n    if (attributeValue.trim() === '') {\n        return attributeValue;\n    }\n    let pos = 0;\n    function collectCharacters(regEx) {\n        let chars;\n        const match = regEx.exec(attributeValue.substring(pos));\n        if (match) {\n            chars = match[0];\n            pos += chars.length;\n            return chars;\n        }\n        return '';\n    }\n    const output = [];\n    while (true) {\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\n        if (pos >= attributeValue.length) {\n            break;\n        }\n        let url = collectCharacters(SRCSET_NOT_SPACES);\n        if (url.slice(-1) === ',') {\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\n            output.push(url);\n        }\n        else {\n            let descriptorsStr = '';\n            url = absoluteToDoc(doc, url);\n            let inParens = false;\n            while (true) {\n                const c = attributeValue.charAt(pos);\n                if (c === '') {\n                    output.push((url + descriptorsStr).trim());\n                    break;\n                }\n                else if (!inParens) {\n                    if (c === ',') {\n                        pos += 1;\n                        output.push((url + descriptorsStr).trim());\n                        break;\n                    }\n                    else if (c === '(') {\n                        inParens = true;\n                    }\n                }\n                else {\n                    if (c === ')') {\n                        inParens = false;\n                    }\n                }\n                descriptorsStr += c;\n                pos += 1;\n            }\n        }\n    }\n    return output.join(', ');\n}\nfunction absoluteToDoc(doc, attributeValue) {\n    if (!attributeValue || attributeValue.trim() === '') {\n        return attributeValue;\n    }\n    const a = doc.createElement('a');\n    a.href = attributeValue;\n    return a.href;\n}\nfunction isSVGElement(el) {\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\n}\nfunction getHref() {\n    const a = document.createElement('a');\n    a.href = '';\n    return a.href;\n}\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\n    if (!value) {\n        return value;\n    }\n    if (name === 'src' ||\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'xlink:href' && value[0] !== '#') {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'background' &&\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'srcset') {\n        return getAbsoluteSrcsetString(doc, value);\n    }\n    else if (name === 'style') {\n        return absoluteToStylesheet(value, getHref());\n    }\n    else if (tagName === 'object' && name === 'data') {\n        return absoluteToDoc(doc, value);\n    }\n    if (typeof maskAttributeFn === 'function') {\n        return maskAttributeFn(name, value, element);\n    }\n    return value;\n}\nfunction ignoreAttribute(tagName, name, _value) {\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\n}\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\n    try {\n        if (unblockSelector && element.matches(unblockSelector)) {\n            return false;\n        }\n        if (typeof blockClass === 'string') {\n            if (element.classList.contains(blockClass)) {\n                return true;\n            }\n        }\n        else {\n            for (let eIndex = element.classList.length; eIndex--;) {\n                const className = element.classList[eIndex];\n                if (blockClass.test(className)) {\n                    return true;\n                }\n            }\n        }\n        if (blockSelector) {\n            return element.matches(blockSelector);\n        }\n    }\n    catch (e) {\n    }\n    return false;\n}\nfunction elementClassMatchesRegex(el, regex) {\n    for (let eIndex = el.classList.length; eIndex--;) {\n        const className = el.classList[eIndex];\n        if (regex.test(className)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\n    if (!node)\n        return -1;\n    if (node.nodeType !== node.ELEMENT_NODE)\n        return -1;\n    if (distance > limit)\n        return -1;\n    if (matchPredicate(node))\n        return distance;\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\n}\nfunction createMatchPredicate(className, selector) {\n    return (node) => {\n        const el = node;\n        if (el === null)\n            return false;\n        try {\n            if (className) {\n                if (typeof className === 'string') {\n                    if (el.matches(`.${className}`))\n                        return true;\n                }\n                else if (elementClassMatchesRegex(el, className)) {\n                    return true;\n                }\n            }\n            if (selector && el.matches(selector))\n                return true;\n            return false;\n        }\n        catch (e2) {\n            return false;\n        }\n    };\n}\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\n    try {\n        const el = node.nodeType === node.ELEMENT_NODE\n            ? node\n            : node.parentElement;\n        if (el === null)\n            return false;\n        if (el.tagName === 'INPUT') {\n            const autocomplete = el.getAttribute('autocomplete');\n            const disallowedAutocompleteValues = [\n                'current-password',\n                'new-password',\n                'cc-number',\n                'cc-exp',\n                'cc-exp-month',\n                'cc-exp-year',\n                'cc-csc',\n            ];\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\n                return true;\n            }\n        }\n        let maskDistance = -1;\n        let unmaskDistance = -1;\n        if (maskAllText) {\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\n            if (unmaskDistance < 0) {\n                return true;\n            }\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\n        }\n        else {\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\n            if (maskDistance < 0) {\n                return false;\n            }\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\n        }\n        return maskDistance >= 0\n            ? unmaskDistance >= 0\n                ? maskDistance <= unmaskDistance\n                : true\n            : unmaskDistance >= 0\n                ? false\n                : !!maskAllText;\n    }\n    catch (e) {\n    }\n    return !!maskAllText;\n}\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\n    const win = iframeEl.contentWindow;\n    if (!win) {\n        return;\n    }\n    let fired = false;\n    let readyState;\n    try {\n        readyState = win.document.readyState;\n    }\n    catch (error) {\n        return;\n    }\n    if (readyState !== 'complete') {\n        const timer = setTimeout(() => {\n            if (!fired) {\n                listener();\n                fired = true;\n            }\n        }, iframeLoadTimeout);\n        iframeEl.addEventListener('load', () => {\n            clearTimeout(timer);\n            fired = true;\n            listener();\n        });\n        return;\n    }\n    const blankUrl = 'about:blank';\n    if (win.location.href !== blankUrl ||\n        iframeEl.src === blankUrl ||\n        iframeEl.src === '') {\n        setTimeout(listener, 0);\n        return iframeEl.addEventListener('load', listener);\n    }\n    iframeEl.addEventListener('load', listener);\n}\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\n    let fired = false;\n    let styleSheetLoaded;\n    try {\n        styleSheetLoaded = link.sheet;\n    }\n    catch (error) {\n        return;\n    }\n    if (styleSheetLoaded)\n        return;\n    const timer = setTimeout(() => {\n        if (!fired) {\n            listener();\n            fired = true;\n        }\n    }, styleSheetLoadTimeout);\n    link.addEventListener('load', () => {\n        clearTimeout(timer);\n        fired = true;\n        listener();\n    });\n}\nfunction serializeNode(n, options) {\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\n    const rootId = getRootId(doc, mirror);\n    switch (n.nodeType) {\n        case n.DOCUMENT_NODE:\n            if (n.compatMode !== 'CSS1Compat') {\n                return {\n                    type: NodeType$1.Document,\n                    childNodes: [],\n                    compatMode: n.compatMode,\n                };\n            }\n            else {\n                return {\n                    type: NodeType$1.Document,\n                    childNodes: [],\n                };\n            }\n        case n.DOCUMENT_TYPE_NODE:\n            return {\n                type: NodeType$1.DocumentType,\n                name: n.name,\n                publicId: n.publicId,\n                systemId: n.systemId,\n                rootId,\n            };\n        case n.ELEMENT_NODE:\n            return serializeElementNode(n, {\n                doc,\n                blockClass,\n                blockSelector,\n                unblockSelector,\n                inlineStylesheet,\n                maskAttributeFn,\n                maskInputOptions,\n                maskInputFn,\n                dataURLOptions,\n                inlineImages,\n                recordCanvas,\n                keepIframeSrcFn,\n                newlyAddedElement,\n                rootId,\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n            });\n        case n.TEXT_NODE:\n            return serializeTextNode(n, {\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n                maskTextFn,\n                maskInputOptions,\n                maskInputFn,\n                rootId,\n            });\n        case n.CDATA_SECTION_NODE:\n            return {\n                type: NodeType$1.CDATA,\n                textContent: '',\n                rootId,\n            };\n        case n.COMMENT_NODE:\n            return {\n                type: NodeType$1.Comment,\n                textContent: n.textContent || '',\n                rootId,\n            };\n        default:\n            return false;\n    }\n}\nfunction getRootId(doc, mirror) {\n    if (!mirror.hasNode(doc))\n        return undefined;\n    const docId = mirror.getId(doc);\n    return docId === 1 ? undefined : docId;\n}\nfunction serializeTextNode(n, options) {\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\n    const parentTagName = n.parentNode && n.parentNode.tagName;\n    let textContent = n.textContent;\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\n    if (isStyle && textContent) {\n        try {\n            if (n.nextSibling || n.previousSibling) {\n            }\n            else if (_optionalChain$5([n, 'access', _6 => _6.parentNode, 'access', _7 => _7.sheet, 'optionalAccess', _8 => _8.cssRules])) {\n                textContent = stringifyStylesheet(n.parentNode.sheet);\n            }\n        }\n        catch (err) {\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\n        }\n        textContent = absoluteToStylesheet(textContent, getHref());\n    }\n    if (isScript) {\n        textContent = 'SCRIPT_PLACEHOLDER';\n    }\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\n        textContent = maskTextFn\n            ? maskTextFn(textContent, n.parentElement)\n            : textContent.replace(/[\\S]/g, '*');\n    }\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\n        textContent = maskInputFn\n            ? maskInputFn(textContent, n.parentNode)\n            : textContent.replace(/[\\S]/g, '*');\n    }\n    if (parentTagName === 'OPTION' && textContent) {\n        const isInputMasked = shouldMaskInput({\n            type: null,\n            tagName: parentTagName,\n            maskInputOptions,\n        });\n        textContent = maskInputValue({\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\n            element: n,\n            value: textContent,\n            maskInputFn,\n        });\n    }\n    return {\n        type: NodeType$1.Text,\n        textContent: textContent || '',\n        isStyle,\n        rootId,\n    };\n}\nfunction serializeElementNode(n, options) {\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\n    const tagName = getValidTagName(n);\n    let attributes = {};\n    const len = n.attributes.length;\n    for (let i = 0; i < len; i++) {\n        const attr = n.attributes[i];\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\n        }\n    }\n    if (tagName === 'link' && inlineStylesheet) {\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\n            return s.href === n.href;\n        });\n        let cssText = null;\n        if (stylesheet) {\n            cssText = stringifyStylesheet(stylesheet);\n        }\n        if (cssText) {\n            delete attributes.rel;\n            delete attributes.href;\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\n        }\n    }\n    if (tagName === 'style' &&\n        n.sheet &&\n        !(n.innerText || n.textContent || '').trim().length) {\n        const cssText = stringifyStylesheet(n.sheet);\n        if (cssText) {\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\n        }\n    }\n    if (tagName === 'input' ||\n        tagName === 'textarea' ||\n        tagName === 'select' ||\n        tagName === 'option') {\n        const el = n;\n        const type = getInputType(el);\n        const value = getInputValue(el, toUpperCase(tagName), type);\n        const checked = el.checked;\n        if (type !== 'submit' && type !== 'button' && value) {\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\n                type,\n                tagName: toUpperCase(tagName),\n                maskInputOptions,\n            }));\n            attributes.value = maskInputValue({\n                isMasked: forceMask,\n                element: el,\n                value,\n                maskInputFn,\n            });\n        }\n        if (checked) {\n            attributes.checked = checked;\n        }\n    }\n    if (tagName === 'option') {\n        if (n.selected && !maskInputOptions['select']) {\n            attributes.selected = true;\n        }\n        else {\n            delete attributes.selected;\n        }\n    }\n    if (tagName === 'canvas' && recordCanvas) {\n        if (n.__context === '2d') {\n            if (!is2DCanvasBlank(n)) {\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            }\n        }\n        else if (!('__context' in n)) {\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            const blankCanvas = document.createElement('canvas');\n            blankCanvas.width = n.width;\n            blankCanvas.height = n.height;\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            if (canvasDataURL !== blankCanvasDataURL) {\n                attributes.rr_dataURL = canvasDataURL;\n            }\n        }\n    }\n    if (tagName === 'img' && inlineImages) {\n        if (!canvasService) {\n            canvasService = doc.createElement('canvas');\n            canvasCtx = canvasService.getContext('2d');\n        }\n        const image = n;\n        const oldValue = image.crossOrigin;\n        image.crossOrigin = 'anonymous';\n        const recordInlineImage = () => {\n            image.removeEventListener('load', recordInlineImage);\n            try {\n                canvasService.width = image.naturalWidth;\n                canvasService.height = image.naturalHeight;\n                canvasCtx.drawImage(image, 0, 0);\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            }\n            catch (err) {\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\n            }\n            oldValue\n                ? (attributes.crossOrigin = oldValue)\n                : image.removeAttribute('crossorigin');\n        };\n        if (image.complete && image.naturalWidth !== 0)\n            recordInlineImage();\n        else\n            image.addEventListener('load', recordInlineImage);\n    }\n    if (tagName === 'audio' || tagName === 'video') {\n        attributes.rr_mediaState = n.paused\n            ? 'paused'\n            : 'played';\n        attributes.rr_mediaCurrentTime = n.currentTime;\n    }\n    if (!newlyAddedElement) {\n        if (n.scrollLeft) {\n            attributes.rr_scrollLeft = n.scrollLeft;\n        }\n        if (n.scrollTop) {\n            attributes.rr_scrollTop = n.scrollTop;\n        }\n    }\n    if (needBlock) {\n        const { width, height } = n.getBoundingClientRect();\n        attributes = {\n            class: attributes.class,\n            rr_width: `${width}px`,\n            rr_height: `${height}px`,\n        };\n    }\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\n        if (!n.contentDocument) {\n            attributes.rr_src = attributes.src;\n        }\n        delete attributes.src;\n    }\n    let isCustomElement;\n    try {\n        if (customElements.get(tagName))\n            isCustomElement = true;\n    }\n    catch (e) {\n    }\n    return {\n        type: NodeType$1.Element,\n        tagName,\n        attributes,\n        childNodes: [],\n        isSVG: isSVGElement(n) || undefined,\n        needBlock,\n        rootId,\n        isCustom: isCustomElement,\n    };\n}\nfunction lowerIfExists(maybeAttr) {\n    if (maybeAttr === undefined || maybeAttr === null) {\n        return '';\n    }\n    else {\n        return maybeAttr.toLowerCase();\n    }\n}\nfunction slimDOMExcluded(sn, slimDOMOptions) {\n    if (slimDOMOptions.comment && sn.type === NodeType$1.Comment) {\n        return true;\n    }\n    else if (sn.type === NodeType$1.Element) {\n        if (slimDOMOptions.script &&\n            (sn.tagName === 'script' ||\n                (sn.tagName === 'link' &&\n                    (sn.attributes.rel === 'preload' ||\n                        sn.attributes.rel === 'modulepreload') &&\n                    sn.attributes.as === 'script') ||\n                (sn.tagName === 'link' &&\n                    sn.attributes.rel === 'prefetch' &&\n                    typeof sn.attributes.href === 'string' &&\n                    sn.attributes.href.endsWith('.js')))) {\n            return true;\n        }\n        else if (slimDOMOptions.headFavicon &&\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\n                (sn.tagName === 'meta' &&\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\n            return true;\n        }\n        else if (sn.tagName === 'meta') {\n            if (slimDOMOptions.headMetaDescKeywords &&\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaSocial &&\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaRobots &&\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaHttpEquiv &&\n                sn.attributes['http-equiv'] !== undefined) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaAuthorship &&\n                (lowerIfExists(sn.attributes.name) === 'author' ||\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaVerification &&\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction serializeNodeWithId(n, options) {\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\n    let { preserveWhiteSpace = true } = options;\n    const _serializedNode = serializeNode(n, {\n        doc,\n        mirror,\n        blockClass,\n        blockSelector,\n        maskAllText,\n        unblockSelector,\n        maskTextClass,\n        unmaskTextClass,\n        maskTextSelector,\n        unmaskTextSelector,\n        inlineStylesheet,\n        maskInputOptions,\n        maskAttributeFn,\n        maskTextFn,\n        maskInputFn,\n        dataURLOptions,\n        inlineImages,\n        recordCanvas,\n        keepIframeSrcFn,\n        newlyAddedElement,\n    });\n    if (!_serializedNode) {\n        console.warn(n, 'not serialized');\n        return null;\n    }\n    let id;\n    if (mirror.hasNode(n)) {\n        id = mirror.getId(n);\n    }\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\n        (!preserveWhiteSpace &&\n            _serializedNode.type === NodeType$1.Text &&\n            !_serializedNode.isStyle &&\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\n        id = IGNORED_NODE;\n    }\n    else {\n        id = genId();\n    }\n    const serializedNode = Object.assign(_serializedNode, { id });\n    mirror.add(n, serializedNode);\n    if (id === IGNORED_NODE) {\n        return null;\n    }\n    if (onSerialize) {\n        onSerialize(n);\n    }\n    let recordChild = !skipChild;\n    if (serializedNode.type === NodeType$1.Element) {\n        recordChild = recordChild && !serializedNode.needBlock;\n        delete serializedNode.needBlock;\n        const shadowRoot = n.shadowRoot;\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\n            serializedNode.isShadowHost = true;\n    }\n    if ((serializedNode.type === NodeType$1.Document ||\n        serializedNode.type === NodeType$1.Element) &&\n        recordChild) {\n        if (slimDOMOptions.headWhitespace &&\n            serializedNode.type === NodeType$1.Element &&\n            serializedNode.tagName === 'head') {\n            preserveWhiteSpace = false;\n        }\n        const bypassOptions = {\n            doc,\n            mirror,\n            blockClass,\n            blockSelector,\n            maskAllText,\n            unblockSelector,\n            maskTextClass,\n            unmaskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            skipChild,\n            inlineStylesheet,\n            maskInputOptions,\n            maskAttributeFn,\n            maskTextFn,\n            maskInputFn,\n            slimDOMOptions,\n            dataURLOptions,\n            inlineImages,\n            recordCanvas,\n            preserveWhiteSpace,\n            onSerialize,\n            onIframeLoad,\n            iframeLoadTimeout,\n            onStylesheetLoad,\n            stylesheetLoadTimeout,\n            keepIframeSrcFn,\n        };\n        for (const childN of Array.from(n.childNodes)) {\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n            if (serializedChildNode) {\n                serializedNode.childNodes.push(serializedChildNode);\n            }\n        }\n        if (isElement$1(n) && n.shadowRoot) {\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n                if (serializedChildNode) {\n                    isNativeShadowDom(n.shadowRoot) &&\n                        (serializedChildNode.isShadow = true);\n                    serializedNode.childNodes.push(serializedChildNode);\n                }\n            }\n        }\n    }\n    if (n.parentNode &&\n        isShadowRoot(n.parentNode) &&\n        isNativeShadowDom(n.parentNode)) {\n        serializedNode.isShadow = true;\n    }\n    if (serializedNode.type === NodeType$1.Element &&\n        serializedNode.tagName === 'iframe') {\n        onceIframeLoaded(n, () => {\n            const iframeDoc = n.contentDocument;\n            if (iframeDoc && onIframeLoad) {\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\n                    doc: iframeDoc,\n                    mirror,\n                    blockClass,\n                    blockSelector,\n                    unblockSelector,\n                    maskAllText,\n                    maskTextClass,\n                    unmaskTextClass,\n                    maskTextSelector,\n                    unmaskTextSelector,\n                    skipChild: false,\n                    inlineStylesheet,\n                    maskInputOptions,\n                    maskAttributeFn,\n                    maskTextFn,\n                    maskInputFn,\n                    slimDOMOptions,\n                    dataURLOptions,\n                    inlineImages,\n                    recordCanvas,\n                    preserveWhiteSpace,\n                    onSerialize,\n                    onIframeLoad,\n                    iframeLoadTimeout,\n                    onStylesheetLoad,\n                    stylesheetLoadTimeout,\n                    keepIframeSrcFn,\n                });\n                if (serializedIframeNode) {\n                    onIframeLoad(n, serializedIframeNode);\n                }\n            }\n        }, iframeLoadTimeout);\n    }\n    if (serializedNode.type === NodeType$1.Element &&\n        serializedNode.tagName === 'link' &&\n        serializedNode.attributes.rel === 'stylesheet') {\n        onceStylesheetLoaded(n, () => {\n            if (onStylesheetLoad) {\n                const serializedLinkNode = serializeNodeWithId(n, {\n                    doc,\n                    mirror,\n                    blockClass,\n                    blockSelector,\n                    unblockSelector,\n                    maskAllText,\n                    maskTextClass,\n                    unmaskTextClass,\n                    maskTextSelector,\n                    unmaskTextSelector,\n                    skipChild: false,\n                    inlineStylesheet,\n                    maskInputOptions,\n                    maskAttributeFn,\n                    maskTextFn,\n                    maskInputFn,\n                    slimDOMOptions,\n                    dataURLOptions,\n                    inlineImages,\n                    recordCanvas,\n                    preserveWhiteSpace,\n                    onSerialize,\n                    onIframeLoad,\n                    iframeLoadTimeout,\n                    onStylesheetLoad,\n                    stylesheetLoadTimeout,\n                    keepIframeSrcFn,\n                });\n                if (serializedLinkNode) {\n                    onStylesheetLoad(n, serializedLinkNode);\n                }\n            }\n        }, stylesheetLoadTimeout);\n    }\n    return serializedNode;\n}\nfunction snapshot(n, options) {\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\n    const maskInputOptions = maskAllInputs === true\n        ? {\n            color: true,\n            date: true,\n            'datetime-local': true,\n            email: true,\n            month: true,\n            number: true,\n            range: true,\n            search: true,\n            tel: true,\n            text: true,\n            time: true,\n            url: true,\n            week: true,\n            textarea: true,\n            select: true,\n        }\n        : maskAllInputs === false\n            ? {}\n            : maskAllInputs;\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\n        ?\n            {\n                script: true,\n                comment: true,\n                headFavicon: true,\n                headWhitespace: true,\n                headMetaDescKeywords: slimDOM === 'all',\n                headMetaSocial: true,\n                headMetaRobots: true,\n                headMetaHttpEquiv: true,\n                headMetaAuthorship: true,\n                headMetaVerification: true,\n            }\n        : slimDOM === false\n            ? {}\n            : slimDOM;\n    return serializeNodeWithId(n, {\n        doc: n,\n        mirror,\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        maskAllText,\n        maskTextClass,\n        unmaskTextClass,\n        maskTextSelector,\n        unmaskTextSelector,\n        skipChild: false,\n        inlineStylesheet,\n        maskInputOptions,\n        maskAttributeFn,\n        maskTextFn,\n        maskInputFn,\n        slimDOMOptions,\n        dataURLOptions,\n        inlineImages,\n        recordCanvas,\n        preserveWhiteSpace,\n        onSerialize,\n        onIframeLoad,\n        iframeLoadTimeout,\n        onStylesheetLoad,\n        stylesheetLoadTimeout,\n        keepIframeSrcFn,\n        newlyAddedElement: false,\n    });\n}\n\nfunction _optionalChain$4(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\nfunction on(type, fn, target = document) {\n    const options = { capture: true, passive: true };\n    target.addEventListener(type, fn, options);\n    return () => target.removeEventListener(type, fn, options);\n}\nconst DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\n    '\\r\\n' +\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\n    '\\r\\n' +\n    'or you can use record.mirror to access the mirror instance during recording.';\nlet _mirror = {\n    map: {},\n    getId() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return -1;\n    },\n    getNode() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return null;\n    },\n    removeNodeFromMap() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n    has() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return false;\n    },\n    reset() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n};\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\n    _mirror = new Proxy(_mirror, {\n        get(target, prop, receiver) {\n            if (prop === 'map') {\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n            }\n            return Reflect.get(target, prop, receiver);\n        },\n    });\n}\nfunction throttle$1(func, wait, options = {}) {\n    let timeout = null;\n    let previous = 0;\n    return function (...args) {\n        const now = Date.now();\n        if (!previous && options.leading === false) {\n            previous = now;\n        }\n        const remaining = wait - (now - previous);\n        const context = this;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout$1(timeout);\n                timeout = null;\n            }\n            previous = now;\n            func.apply(context, args);\n        }\n        else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout$1(() => {\n                previous = options.leading === false ? 0 : Date.now();\n                timeout = null;\n                func.apply(context, args);\n            }, remaining);\n        }\n    };\n}\nfunction hookSetter(target, key, d, isRevoked, win = window) {\n    const original = win.Object.getOwnPropertyDescriptor(target, key);\n    win.Object.defineProperty(target, key, isRevoked\n        ? d\n        : {\n            set(value) {\n                setTimeout$1(() => {\n                    d.set.call(this, value);\n                }, 0);\n                if (original && original.set) {\n                    original.set.call(this, value);\n                }\n            },\n        });\n    return () => hookSetter(target, key, original || {}, true);\n}\nfunction patch(source, name, replacement) {\n    try {\n        if (!(name in source)) {\n            return () => {\n            };\n        }\n        const original = source[name];\n        const wrapped = replacement(original);\n        if (typeof wrapped === 'function') {\n            wrapped.prototype = wrapped.prototype || {};\n            Object.defineProperties(wrapped, {\n                __rrweb_original__: {\n                    enumerable: false,\n                    value: original,\n                },\n            });\n        }\n        source[name] = wrapped;\n        return () => {\n            source[name] = original;\n        };\n    }\n    catch (e2) {\n        return () => {\n        };\n    }\n}\nlet nowTimestamp = Date.now;\nif (!(/[1-9][0-9]{12}/.test(Date.now().toString()))) {\n    nowTimestamp = () => new Date().getTime();\n}\nfunction getWindowScroll(win) {\n    const doc = win.document;\n    return {\n        left: doc.scrollingElement\n            ? doc.scrollingElement.scrollLeft\n            : win.pageXOffset !== undefined\n                ? win.pageXOffset\n                : _optionalChain$4([doc, 'optionalAccess', _ => _.documentElement, 'access', _2 => _2.scrollLeft]) ||\n                    _optionalChain$4([doc, 'optionalAccess', _3 => _3.body, 'optionalAccess', _4 => _4.parentElement, 'optionalAccess', _5 => _5.scrollLeft]) ||\n                    _optionalChain$4([doc, 'optionalAccess', _6 => _6.body, 'optionalAccess', _7 => _7.scrollLeft]) ||\n                    0,\n        top: doc.scrollingElement\n            ? doc.scrollingElement.scrollTop\n            : win.pageYOffset !== undefined\n                ? win.pageYOffset\n                : _optionalChain$4([doc, 'optionalAccess', _8 => _8.documentElement, 'access', _9 => _9.scrollTop]) ||\n                    _optionalChain$4([doc, 'optionalAccess', _10 => _10.body, 'optionalAccess', _11 => _11.parentElement, 'optionalAccess', _12 => _12.scrollTop]) ||\n                    _optionalChain$4([doc, 'optionalAccess', _13 => _13.body, 'optionalAccess', _14 => _14.scrollTop]) ||\n                    0,\n    };\n}\nfunction getWindowHeight() {\n    return (window.innerHeight ||\n        (document.documentElement && document.documentElement.clientHeight) ||\n        (document.body && document.body.clientHeight));\n}\nfunction getWindowWidth() {\n    return (window.innerWidth ||\n        (document.documentElement && document.documentElement.clientWidth) ||\n        (document.body && document.body.clientWidth));\n}\nfunction closestElementOfNode(node) {\n    if (!node) {\n        return null;\n    }\n    const el = node.nodeType === node.ELEMENT_NODE\n        ? node\n        : node.parentElement;\n    return el;\n}\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector, checkAncestors) {\n    if (!node) {\n        return false;\n    }\n    const el = closestElementOfNode(node);\n    if (!el) {\n        return false;\n    }\n    const blockedPredicate = createMatchPredicate(blockClass, blockSelector);\n    if (!checkAncestors) {\n        const isUnblocked = unblockSelector && el.matches(unblockSelector);\n        return blockedPredicate(el) && !isUnblocked;\n    }\n    const blockDistance = distanceToMatch(el, blockedPredicate);\n    let unblockDistance = -1;\n    if (blockDistance < 0) {\n        return false;\n    }\n    if (unblockSelector) {\n        unblockDistance = distanceToMatch(el, createMatchPredicate(null, unblockSelector));\n    }\n    if (blockDistance > -1 && unblockDistance < 0) {\n        return true;\n    }\n    return blockDistance < unblockDistance;\n}\nfunction isSerialized(n, mirror) {\n    return mirror.getId(n) !== -1;\n}\nfunction isIgnored(n, mirror) {\n    return mirror.getId(n) === IGNORED_NODE;\n}\nfunction isAncestorRemoved(target, mirror) {\n    if (isShadowRoot(target)) {\n        return false;\n    }\n    const id = mirror.getId(target);\n    if (!mirror.has(id)) {\n        return true;\n    }\n    if (target.parentNode &&\n        target.parentNode.nodeType === target.DOCUMENT_NODE) {\n        return false;\n    }\n    if (!target.parentNode) {\n        return true;\n    }\n    return isAncestorRemoved(target.parentNode, mirror);\n}\nfunction legacy_isTouchEvent(event) {\n    return Boolean(event.changedTouches);\n}\nfunction polyfill(win = window) {\n    if ('NodeList' in win && !win.NodeList.prototype.forEach) {\n        win.NodeList.prototype.forEach = Array.prototype\n            .forEach;\n    }\n    if ('DOMTokenList' in win && !win.DOMTokenList.prototype.forEach) {\n        win.DOMTokenList.prototype.forEach = Array.prototype\n            .forEach;\n    }\n    if (!Node.prototype.contains) {\n        Node.prototype.contains = (...args) => {\n            let node = args[0];\n            if (!(0 in args)) {\n                throw new TypeError('1 argument is required');\n            }\n            do {\n                if (this === node) {\n                    return true;\n                }\n            } while ((node = node && node.parentNode));\n            return false;\n        };\n    }\n}\nfunction isSerializedIframe(n, mirror) {\n    return Boolean(n.nodeName === 'IFRAME' && mirror.getMeta(n));\n}\nfunction isSerializedStylesheet(n, mirror) {\n    return Boolean(n.nodeName === 'LINK' &&\n        n.nodeType === n.ELEMENT_NODE &&\n        n.getAttribute &&\n        n.getAttribute('rel') === 'stylesheet' &&\n        mirror.getMeta(n));\n}\nfunction hasShadowRoot(n) {\n    return Boolean(_optionalChain$4([n, 'optionalAccess', _18 => _18.shadowRoot]));\n}\nclass StyleSheetMirror {\n    constructor() {\n        this.id = 1;\n        this.styleIDMap = new WeakMap();\n        this.idStyleMap = new Map();\n    }\n    getId(stylesheet) {\n        return _nullishCoalesce(this.styleIDMap.get(stylesheet), () => ( -1));\n    }\n    has(stylesheet) {\n        return this.styleIDMap.has(stylesheet);\n    }\n    add(stylesheet, id) {\n        if (this.has(stylesheet))\n            return this.getId(stylesheet);\n        let newId;\n        if (id === undefined) {\n            newId = this.id++;\n        }\n        else\n            newId = id;\n        this.styleIDMap.set(stylesheet, newId);\n        this.idStyleMap.set(newId, stylesheet);\n        return newId;\n    }\n    getStyle(id) {\n        return this.idStyleMap.get(id) || null;\n    }\n    reset() {\n        this.styleIDMap = new WeakMap();\n        this.idStyleMap = new Map();\n        this.id = 1;\n    }\n    generateId() {\n        return this.id++;\n    }\n}\nfunction getShadowHost(n) {\n    let shadowHost = null;\n    if (_optionalChain$4([n, 'access', _19 => _19.getRootNode, 'optionalCall', _20 => _20(), 'optionalAccess', _21 => _21.nodeType]) === Node.DOCUMENT_FRAGMENT_NODE &&\n        n.getRootNode().host)\n        shadowHost = n.getRootNode().host;\n    return shadowHost;\n}\nfunction getRootShadowHost(n) {\n    let rootShadowHost = n;\n    let shadowHost;\n    while ((shadowHost = getShadowHost(rootShadowHost)))\n        rootShadowHost = shadowHost;\n    return rootShadowHost;\n}\nfunction shadowHostInDom(n) {\n    const doc = n.ownerDocument;\n    if (!doc)\n        return false;\n    const shadowHost = getRootShadowHost(n);\n    return doc.contains(shadowHost);\n}\nfunction inDom(n) {\n    const doc = n.ownerDocument;\n    if (!doc)\n        return false;\n    return doc.contains(n) || shadowHostInDom(n);\n}\nconst cachedImplementations = {};\nfunction getImplementation(name) {\n    const cached = cachedImplementations[name];\n    if (cached) {\n        return cached;\n    }\n    const document = window.document;\n    let impl = window[name];\n    if (document && typeof document.createElement === 'function') {\n        try {\n            const sandbox = document.createElement('iframe');\n            sandbox.hidden = true;\n            document.head.appendChild(sandbox);\n            const contentWindow = sandbox.contentWindow;\n            if (contentWindow && contentWindow[name]) {\n                impl =\n                    contentWindow[name];\n            }\n            document.head.removeChild(sandbox);\n        }\n        catch (e) {\n        }\n    }\n    return (cachedImplementations[name] = impl.bind(window));\n}\nfunction onRequestAnimationFrame(...rest) {\n    return getImplementation('requestAnimationFrame')(...rest);\n}\nfunction setTimeout$1(...rest) {\n    return getImplementation('setTimeout')(...rest);\n}\nfunction clearTimeout$1(...rest) {\n    return getImplementation('clearTimeout')(...rest);\n}\n\nvar EventType = /* @__PURE__ */ ((EventType2) => {\n  EventType2[EventType2[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n  EventType2[EventType2[\"Load\"] = 1] = \"Load\";\n  EventType2[EventType2[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n  EventType2[EventType2[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n  EventType2[EventType2[\"Meta\"] = 4] = \"Meta\";\n  EventType2[EventType2[\"Custom\"] = 5] = \"Custom\";\n  EventType2[EventType2[\"Plugin\"] = 6] = \"Plugin\";\n  return EventType2;\n})(EventType || {});\nvar IncrementalSource = /* @__PURE__ */ ((IncrementalSource2) => {\n  IncrementalSource2[IncrementalSource2[\"Mutation\"] = 0] = \"Mutation\";\n  IncrementalSource2[IncrementalSource2[\"MouseMove\"] = 1] = \"MouseMove\";\n  IncrementalSource2[IncrementalSource2[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n  IncrementalSource2[IncrementalSource2[\"Scroll\"] = 3] = \"Scroll\";\n  IncrementalSource2[IncrementalSource2[\"ViewportResize\"] = 4] = \"ViewportResize\";\n  IncrementalSource2[IncrementalSource2[\"Input\"] = 5] = \"Input\";\n  IncrementalSource2[IncrementalSource2[\"TouchMove\"] = 6] = \"TouchMove\";\n  IncrementalSource2[IncrementalSource2[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n  IncrementalSource2[IncrementalSource2[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n  IncrementalSource2[IncrementalSource2[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n  IncrementalSource2[IncrementalSource2[\"Font\"] = 10] = \"Font\";\n  IncrementalSource2[IncrementalSource2[\"Log\"] = 11] = \"Log\";\n  IncrementalSource2[IncrementalSource2[\"Drag\"] = 12] = \"Drag\";\n  IncrementalSource2[IncrementalSource2[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n  IncrementalSource2[IncrementalSource2[\"Selection\"] = 14] = \"Selection\";\n  IncrementalSource2[IncrementalSource2[\"AdoptedStyleSheet\"] = 15] = \"AdoptedStyleSheet\";\n  IncrementalSource2[IncrementalSource2[\"CustomElement\"] = 16] = \"CustomElement\";\n  return IncrementalSource2;\n})(IncrementalSource || {});\nvar MouseInteractions = /* @__PURE__ */ ((MouseInteractions2) => {\n  MouseInteractions2[MouseInteractions2[\"MouseUp\"] = 0] = \"MouseUp\";\n  MouseInteractions2[MouseInteractions2[\"MouseDown\"] = 1] = \"MouseDown\";\n  MouseInteractions2[MouseInteractions2[\"Click\"] = 2] = \"Click\";\n  MouseInteractions2[MouseInteractions2[\"ContextMenu\"] = 3] = \"ContextMenu\";\n  MouseInteractions2[MouseInteractions2[\"DblClick\"] = 4] = \"DblClick\";\n  MouseInteractions2[MouseInteractions2[\"Focus\"] = 5] = \"Focus\";\n  MouseInteractions2[MouseInteractions2[\"Blur\"] = 6] = \"Blur\";\n  MouseInteractions2[MouseInteractions2[\"TouchStart\"] = 7] = \"TouchStart\";\n  MouseInteractions2[MouseInteractions2[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n  MouseInteractions2[MouseInteractions2[\"TouchEnd\"] = 9] = \"TouchEnd\";\n  MouseInteractions2[MouseInteractions2[\"TouchCancel\"] = 10] = \"TouchCancel\";\n  return MouseInteractions2;\n})(MouseInteractions || {});\nvar PointerTypes = /* @__PURE__ */ ((PointerTypes2) => {\n  PointerTypes2[PointerTypes2[\"Mouse\"] = 0] = \"Mouse\";\n  PointerTypes2[PointerTypes2[\"Pen\"] = 1] = \"Pen\";\n  PointerTypes2[PointerTypes2[\"Touch\"] = 2] = \"Touch\";\n  return PointerTypes2;\n})(PointerTypes || {});\n\nfunction _optionalChain$3(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\nfunction isNodeInLinkedList(n) {\n    return '__ln' in n;\n}\nclass DoubleLinkedList {\n    constructor() {\n        this.length = 0;\n        this.head = null;\n        this.tail = null;\n    }\n    get(position) {\n        if (position >= this.length) {\n            throw new Error('Position outside of list range');\n        }\n        let current = this.head;\n        for (let index = 0; index < position; index++) {\n            current = _optionalChain$3([current, 'optionalAccess', _ => _.next]) || null;\n        }\n        return current;\n    }\n    addNode(n) {\n        const node = {\n            value: n,\n            previous: null,\n            next: null,\n        };\n        n.__ln = node;\n        if (n.previousSibling && isNodeInLinkedList(n.previousSibling)) {\n            const current = n.previousSibling.__ln.next;\n            node.next = current;\n            node.previous = n.previousSibling.__ln;\n            n.previousSibling.__ln.next = node;\n            if (current) {\n                current.previous = node;\n            }\n        }\n        else if (n.nextSibling &&\n            isNodeInLinkedList(n.nextSibling) &&\n            n.nextSibling.__ln.previous) {\n            const current = n.nextSibling.__ln.previous;\n            node.previous = current;\n            node.next = n.nextSibling.__ln;\n            n.nextSibling.__ln.previous = node;\n            if (current) {\n                current.next = node;\n            }\n        }\n        else {\n            if (this.head) {\n                this.head.previous = node;\n            }\n            node.next = this.head;\n            this.head = node;\n        }\n        if (node.next === null) {\n            this.tail = node;\n        }\n        this.length++;\n    }\n    removeNode(n) {\n        const current = n.__ln;\n        if (!this.head) {\n            return;\n        }\n        if (!current.previous) {\n            this.head = current.next;\n            if (this.head) {\n                this.head.previous = null;\n            }\n            else {\n                this.tail = null;\n            }\n        }\n        else {\n            current.previous.next = current.next;\n            if (current.next) {\n                current.next.previous = current.previous;\n            }\n            else {\n                this.tail = current.previous;\n            }\n        }\n        if (n.__ln) {\n            delete n.__ln;\n        }\n        this.length--;\n    }\n}\nconst moveKey = (id, parentId) => `${id}@${parentId}`;\nclass MutationBuffer {\n    constructor() {\n        this.frozen = false;\n        this.locked = false;\n        this.texts = [];\n        this.attributes = [];\n        this.attributeMap = new WeakMap();\n        this.removes = [];\n        this.mapRemoves = [];\n        this.movedMap = {};\n        this.addedSet = new Set();\n        this.movedSet = new Set();\n        this.droppedSet = new Set();\n        this.processMutations = (mutations) => {\n            mutations.forEach(this.processMutation);\n            this.emit();\n        };\n        this.emit = () => {\n            if (this.frozen || this.locked) {\n                return;\n            }\n            const adds = [];\n            const addedIds = new Set();\n            const addList = new DoubleLinkedList();\n            const getNextId = (n) => {\n                let ns = n;\n                let nextId = IGNORED_NODE;\n                while (nextId === IGNORED_NODE) {\n                    ns = ns && ns.nextSibling;\n                    nextId = ns && this.mirror.getId(ns);\n                }\n                return nextId;\n            };\n            const pushAdd = (n) => {\n                if (!n.parentNode || !inDom(n)) {\n                    return;\n                }\n                const parentId = isShadowRoot(n.parentNode)\n                    ? this.mirror.getId(getShadowHost(n))\n                    : this.mirror.getId(n.parentNode);\n                const nextId = getNextId(n);\n                if (parentId === -1 || nextId === -1) {\n                    return addList.addNode(n);\n                }\n                const sn = serializeNodeWithId(n, {\n                    doc: this.doc,\n                    mirror: this.mirror,\n                    blockClass: this.blockClass,\n                    blockSelector: this.blockSelector,\n                    maskAllText: this.maskAllText,\n                    unblockSelector: this.unblockSelector,\n                    maskTextClass: this.maskTextClass,\n                    unmaskTextClass: this.unmaskTextClass,\n                    maskTextSelector: this.maskTextSelector,\n                    unmaskTextSelector: this.unmaskTextSelector,\n                    skipChild: true,\n                    newlyAddedElement: true,\n                    inlineStylesheet: this.inlineStylesheet,\n                    maskInputOptions: this.maskInputOptions,\n                    maskAttributeFn: this.maskAttributeFn,\n                    maskTextFn: this.maskTextFn,\n                    maskInputFn: this.maskInputFn,\n                    slimDOMOptions: this.slimDOMOptions,\n                    dataURLOptions: this.dataURLOptions,\n                    recordCanvas: this.recordCanvas,\n                    inlineImages: this.inlineImages,\n                    onSerialize: (currentN) => {\n                        if (isSerializedIframe(currentN, this.mirror)) {\n                            this.iframeManager.addIframe(currentN);\n                        }\n                        if (isSerializedStylesheet(currentN, this.mirror)) {\n                            this.stylesheetManager.trackLinkElement(currentN);\n                        }\n                        if (hasShadowRoot(n)) {\n                            this.shadowDomManager.addShadowRoot(n.shadowRoot, this.doc);\n                        }\n                    },\n                    onIframeLoad: (iframe, childSn) => {\n                        this.iframeManager.attachIframe(iframe, childSn);\n                        this.shadowDomManager.observeAttachShadow(iframe);\n                    },\n                    onStylesheetLoad: (link, childSn) => {\n                        this.stylesheetManager.attachLinkElement(link, childSn);\n                    },\n                });\n                if (sn) {\n                    adds.push({\n                        parentId,\n                        nextId,\n                        node: sn,\n                    });\n                    addedIds.add(sn.id);\n                }\n            };\n            while (this.mapRemoves.length) {\n                this.mirror.removeNodeFromMap(this.mapRemoves.shift());\n            }\n            for (const n of this.movedSet) {\n                if (isParentRemoved(this.removes, n, this.mirror) &&\n                    !this.movedSet.has(n.parentNode)) {\n                    continue;\n                }\n                pushAdd(n);\n            }\n            for (const n of this.addedSet) {\n                if (!isAncestorInSet(this.droppedSet, n) &&\n                    !isParentRemoved(this.removes, n, this.mirror)) {\n                    pushAdd(n);\n                }\n                else if (isAncestorInSet(this.movedSet, n)) {\n                    pushAdd(n);\n                }\n                else {\n                    this.droppedSet.add(n);\n                }\n            }\n            let candidate = null;\n            while (addList.length) {\n                let node = null;\n                if (candidate) {\n                    const parentId = this.mirror.getId(candidate.value.parentNode);\n                    const nextId = getNextId(candidate.value);\n                    if (parentId !== -1 && nextId !== -1) {\n                        node = candidate;\n                    }\n                }\n                if (!node) {\n                    let tailNode = addList.tail;\n                    while (tailNode) {\n                        const _node = tailNode;\n                        tailNode = tailNode.previous;\n                        if (_node) {\n                            const parentId = this.mirror.getId(_node.value.parentNode);\n                            const nextId = getNextId(_node.value);\n                            if (nextId === -1)\n                                continue;\n                            else if (parentId !== -1) {\n                                node = _node;\n                                break;\n                            }\n                            else {\n                                const unhandledNode = _node.value;\n                                if (unhandledNode.parentNode &&\n                                    unhandledNode.parentNode.nodeType ===\n                                        Node.DOCUMENT_FRAGMENT_NODE) {\n                                    const shadowHost = unhandledNode.parentNode\n                                        .host;\n                                    const parentId = this.mirror.getId(shadowHost);\n                                    if (parentId !== -1) {\n                                        node = _node;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (!node) {\n                    while (addList.head) {\n                        addList.removeNode(addList.head.value);\n                    }\n                    break;\n                }\n                candidate = node.previous;\n                addList.removeNode(node.value);\n                pushAdd(node.value);\n            }\n            const payload = {\n                texts: this.texts\n                    .map((text) => ({\n                    id: this.mirror.getId(text.node),\n                    value: text.value,\n                }))\n                    .filter((text) => !addedIds.has(text.id))\n                    .filter((text) => this.mirror.has(text.id)),\n                attributes: this.attributes\n                    .map((attribute) => {\n                    const { attributes } = attribute;\n                    if (typeof attributes.style === 'string') {\n                        const diffAsStr = JSON.stringify(attribute.styleDiff);\n                        const unchangedAsStr = JSON.stringify(attribute._unchangedStyles);\n                        if (diffAsStr.length < attributes.style.length) {\n                            if ((diffAsStr + unchangedAsStr).split('var(').length ===\n                                attributes.style.split('var(').length) {\n                                attributes.style = attribute.styleDiff;\n                            }\n                        }\n                    }\n                    return {\n                        id: this.mirror.getId(attribute.node),\n                        attributes: attributes,\n                    };\n                })\n                    .filter((attribute) => !addedIds.has(attribute.id))\n                    .filter((attribute) => this.mirror.has(attribute.id)),\n                removes: this.removes,\n                adds,\n            };\n            if (!payload.texts.length &&\n                !payload.attributes.length &&\n                !payload.removes.length &&\n                !payload.adds.length) {\n                return;\n            }\n            this.texts = [];\n            this.attributes = [];\n            this.attributeMap = new WeakMap();\n            this.removes = [];\n            this.addedSet = new Set();\n            this.movedSet = new Set();\n            this.droppedSet = new Set();\n            this.movedMap = {};\n            this.mutationCb(payload);\n        };\n        this.processMutation = (m) => {\n            if (isIgnored(m.target, this.mirror)) {\n                return;\n            }\n            switch (m.type) {\n                case 'characterData': {\n                    const value = m.target.textContent;\n                    if (!isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) &&\n                        value !== m.oldValue) {\n                        this.texts.push({\n                            value: needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, this.maskAllText) && value\n                                ? this.maskTextFn\n                                    ? this.maskTextFn(value, closestElementOfNode(m.target))\n                                    : value.replace(/[\\S]/g, '*')\n                                : value,\n                            node: m.target,\n                        });\n                    }\n                    break;\n                }\n                case 'attributes': {\n                    const target = m.target;\n                    let attributeName = m.attributeName;\n                    let value = m.target.getAttribute(attributeName);\n                    if (attributeName === 'value') {\n                        const type = getInputType(target);\n                        const tagName = target.tagName;\n                        value = getInputValue(target, tagName, type);\n                        const isInputMasked = shouldMaskInput({\n                            maskInputOptions: this.maskInputOptions,\n                            tagName,\n                            type,\n                        });\n                        const forceMask = needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, isInputMasked);\n                        value = maskInputValue({\n                            isMasked: forceMask,\n                            element: target,\n                            value,\n                            maskInputFn: this.maskInputFn,\n                        });\n                    }\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\n                        value === m.oldValue) {\n                        return;\n                    }\n                    let item = this.attributeMap.get(m.target);\n                    if (target.tagName === 'IFRAME' &&\n                        attributeName === 'src' &&\n                        !this.keepIframeSrcFn(value)) {\n                        if (!target.contentDocument) {\n                            attributeName = 'rr_src';\n                        }\n                        else {\n                            return;\n                        }\n                    }\n                    if (!item) {\n                        item = {\n                            node: m.target,\n                            attributes: {},\n                            styleDiff: {},\n                            _unchangedStyles: {},\n                        };\n                        this.attributes.push(item);\n                        this.attributeMap.set(m.target, item);\n                    }\n                    if (attributeName === 'type' &&\n                        target.tagName === 'INPUT' &&\n                        (m.oldValue || '').toLowerCase() === 'password') {\n                        target.setAttribute('data-rr-is-password', 'true');\n                    }\n                    if (!ignoreAttribute(target.tagName, attributeName)) {\n                        item.attributes[attributeName] = transformAttribute(this.doc, toLowerCase(target.tagName), toLowerCase(attributeName), value, target, this.maskAttributeFn);\n                        if (attributeName === 'style') {\n                            if (!this.unattachedDoc) {\n                                try {\n                                    this.unattachedDoc =\n                                        document.implementation.createHTMLDocument();\n                                }\n                                catch (e) {\n                                    this.unattachedDoc = this.doc;\n                                }\n                            }\n                            const old = this.unattachedDoc.createElement('span');\n                            if (m.oldValue) {\n                                old.setAttribute('style', m.oldValue);\n                            }\n                            for (const pname of Array.from(target.style)) {\n                                const newValue = target.style.getPropertyValue(pname);\n                                const newPriority = target.style.getPropertyPriority(pname);\n                                if (newValue !== old.style.getPropertyValue(pname) ||\n                                    newPriority !== old.style.getPropertyPriority(pname)) {\n                                    if (newPriority === '') {\n                                        item.styleDiff[pname] = newValue;\n                                    }\n                                    else {\n                                        item.styleDiff[pname] = [newValue, newPriority];\n                                    }\n                                }\n                                else {\n                                    item._unchangedStyles[pname] = [newValue, newPriority];\n                                }\n                            }\n                            for (const pname of Array.from(old.style)) {\n                                if (target.style.getPropertyValue(pname) === '') {\n                                    item.styleDiff[pname] = false;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                }\n                case 'childList': {\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, true)) {\n                        return;\n                    }\n                    m.addedNodes.forEach((n) => this.genAdds(n, m.target));\n                    m.removedNodes.forEach((n) => {\n                        const nodeId = this.mirror.getId(n);\n                        const parentId = isShadowRoot(m.target)\n                            ? this.mirror.getId(m.target.host)\n                            : this.mirror.getId(m.target);\n                        if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\n                            isIgnored(n, this.mirror) ||\n                            !isSerialized(n, this.mirror)) {\n                            return;\n                        }\n                        if (this.addedSet.has(n)) {\n                            deepDelete(this.addedSet, n);\n                            this.droppedSet.add(n);\n                        }\n                        else if (this.addedSet.has(m.target) && nodeId === -1) ;\n                        else if (isAncestorRemoved(m.target, this.mirror)) ;\n                        else if (this.movedSet.has(n) &&\n                            this.movedMap[moveKey(nodeId, parentId)]) {\n                            deepDelete(this.movedSet, n);\n                        }\n                        else {\n                            this.removes.push({\n                                parentId,\n                                id: nodeId,\n                                isShadow: isShadowRoot(m.target) && isNativeShadowDom(m.target)\n                                    ? true\n                                    : undefined,\n                            });\n                        }\n                        this.mapRemoves.push(n);\n                    });\n                    break;\n                }\n            }\n        };\n        this.genAdds = (n, target) => {\n            if (this.processedNodeManager.inOtherBuffer(n, this))\n                return;\n            if (this.addedSet.has(n) || this.movedSet.has(n))\n                return;\n            if (this.mirror.hasNode(n)) {\n                if (isIgnored(n, this.mirror)) {\n                    return;\n                }\n                this.movedSet.add(n);\n                let targetId = null;\n                if (target && this.mirror.hasNode(target)) {\n                    targetId = this.mirror.getId(target);\n                }\n                if (targetId && targetId !== -1) {\n                    this.movedMap[moveKey(this.mirror.getId(n), targetId)] = true;\n                }\n            }\n            else {\n                this.addedSet.add(n);\n                this.droppedSet.delete(n);\n            }\n            if (!isBlocked(n, this.blockClass, this.blockSelector, this.unblockSelector, false)) {\n                n.childNodes.forEach((childN) => this.genAdds(childN));\n                if (hasShadowRoot(n)) {\n                    n.shadowRoot.childNodes.forEach((childN) => {\n                        this.processedNodeManager.add(childN, this);\n                        this.genAdds(childN, n);\n                    });\n                }\n            }\n        };\n    }\n    init(options) {\n        [\n            'mutationCb',\n            'blockClass',\n            'blockSelector',\n            'unblockSelector',\n            'maskAllText',\n            'maskTextClass',\n            'unmaskTextClass',\n            'maskTextSelector',\n            'unmaskTextSelector',\n            'inlineStylesheet',\n            'maskInputOptions',\n            'maskAttributeFn',\n            'maskTextFn',\n            'maskInputFn',\n            'keepIframeSrcFn',\n            'recordCanvas',\n            'inlineImages',\n            'slimDOMOptions',\n            'dataURLOptions',\n            'doc',\n            'mirror',\n            'iframeManager',\n            'stylesheetManager',\n            'shadowDomManager',\n            'canvasManager',\n            'processedNodeManager',\n        ].forEach((key) => {\n            this[key] = options[key];\n        });\n    }\n    freeze() {\n        this.frozen = true;\n        this.canvasManager.freeze();\n    }\n    unfreeze() {\n        this.frozen = false;\n        this.canvasManager.unfreeze();\n        this.emit();\n    }\n    isFrozen() {\n        return this.frozen;\n    }\n    lock() {\n        this.locked = true;\n        this.canvasManager.lock();\n    }\n    unlock() {\n        this.locked = false;\n        this.canvasManager.unlock();\n        this.emit();\n    }\n    reset() {\n        this.shadowDomManager.reset();\n        this.canvasManager.reset();\n    }\n}\nfunction deepDelete(addsSet, n) {\n    addsSet.delete(n);\n    n.childNodes.forEach((childN) => deepDelete(addsSet, childN));\n}\nfunction isParentRemoved(removes, n, mirror) {\n    if (removes.length === 0)\n        return false;\n    return _isParentRemoved(removes, n, mirror);\n}\nfunction _isParentRemoved(removes, n, mirror) {\n    const { parentNode } = n;\n    if (!parentNode) {\n        return false;\n    }\n    const parentId = mirror.getId(parentNode);\n    if (removes.some((r) => r.id === parentId)) {\n        return true;\n    }\n    return _isParentRemoved(removes, parentNode, mirror);\n}\nfunction isAncestorInSet(set, n) {\n    if (set.size === 0)\n        return false;\n    return _isAncestorInSet(set, n);\n}\nfunction _isAncestorInSet(set, n) {\n    const { parentNode } = n;\n    if (!parentNode) {\n        return false;\n    }\n    if (set.has(parentNode)) {\n        return true;\n    }\n    return _isAncestorInSet(set, parentNode);\n}\n\nlet errorHandler;\nfunction registerErrorHandler(handler) {\n    errorHandler = handler;\n}\nfunction unregisterErrorHandler() {\n    errorHandler = undefined;\n}\nconst callbackWrapper = (cb) => {\n    if (!errorHandler) {\n        return cb;\n    }\n    const rrwebWrapped = ((...rest) => {\n        try {\n            return cb(...rest);\n        }\n        catch (error) {\n            if (errorHandler && errorHandler(error) === true) {\n                return () => {\n                };\n            }\n            throw error;\n        }\n    });\n    return rrwebWrapped;\n};\n\nfunction _optionalChain$2(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\nconst mutationBuffers = [];\nfunction getEventTarget(event) {\n    try {\n        if ('composedPath' in event) {\n            const path = event.composedPath();\n            if (path.length) {\n                return path[0];\n            }\n        }\n        else if ('path' in event && event.path.length) {\n            return event.path[0];\n        }\n    }\n    catch (e2) {\n    }\n    return event && event.target;\n}\nfunction initMutationObserver(options, rootEl) {\n    const mutationBuffer = new MutationBuffer();\n    mutationBuffers.push(mutationBuffer);\n    mutationBuffer.init(options);\n    let mutationObserverCtor = window.MutationObserver ||\n        window.__rrMutationObserver;\n    const angularZoneSymbol = _optionalChain$2([window, 'optionalAccess', _ => _.Zone, 'optionalAccess', _2 => _2.__symbol__, 'optionalCall', _3 => _3('MutationObserver')]);\n    if (angularZoneSymbol &&\n        window[angularZoneSymbol]) {\n        mutationObserverCtor = window[angularZoneSymbol];\n    }\n    const observer = new mutationObserverCtor(callbackWrapper((mutations) => {\n        if (options.onMutation && options.onMutation(mutations) === false) {\n            return;\n        }\n        mutationBuffer.processMutations.bind(mutationBuffer)(mutations);\n    }));\n    observer.observe(rootEl, {\n        attributes: true,\n        attributeOldValue: true,\n        characterData: true,\n        characterDataOldValue: true,\n        childList: true,\n        subtree: true,\n    });\n    return observer;\n}\nfunction initMoveObserver({ mousemoveCb, sampling, doc, mirror, }) {\n    if (sampling.mousemove === false) {\n        return () => {\n        };\n    }\n    const threshold = typeof sampling.mousemove === 'number' ? sampling.mousemove : 50;\n    const callbackThreshold = typeof sampling.mousemoveCallback === 'number'\n        ? sampling.mousemoveCallback\n        : 500;\n    let positions = [];\n    let timeBaseline;\n    const wrappedCb = throttle$1(callbackWrapper((source) => {\n        const totalOffset = Date.now() - timeBaseline;\n        mousemoveCb(positions.map((p) => {\n            p.timeOffset -= totalOffset;\n            return p;\n        }), source);\n        positions = [];\n        timeBaseline = null;\n    }), callbackThreshold);\n    const updatePosition = callbackWrapper(throttle$1(callbackWrapper((evt) => {\n        const target = getEventTarget(evt);\n        const { clientX, clientY } = legacy_isTouchEvent(evt)\n            ? evt.changedTouches[0]\n            : evt;\n        if (!timeBaseline) {\n            timeBaseline = nowTimestamp();\n        }\n        positions.push({\n            x: clientX,\n            y: clientY,\n            id: mirror.getId(target),\n            timeOffset: nowTimestamp() - timeBaseline,\n        });\n        wrappedCb(typeof DragEvent !== 'undefined' && evt instanceof DragEvent\n            ? IncrementalSource.Drag\n            : evt instanceof MouseEvent\n                ? IncrementalSource.MouseMove\n                : IncrementalSource.TouchMove);\n    }), threshold, {\n        trailing: false,\n    }));\n    const handlers = [\n        on('mousemove', updatePosition, doc),\n        on('touchmove', updatePosition, doc),\n        on('drag', updatePosition, doc),\n    ];\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initMouseInteractionObserver({ mouseInteractionCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\n    if (sampling.mouseInteraction === false) {\n        return () => {\n        };\n    }\n    const disableMap = sampling.mouseInteraction === true ||\n        sampling.mouseInteraction === undefined\n        ? {}\n        : sampling.mouseInteraction;\n    const handlers = [];\n    let currentPointerType = null;\n    const getHandler = (eventKey) => {\n        return (event) => {\n            const target = getEventTarget(event);\n            if (isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n                return;\n            }\n            let pointerType = null;\n            let thisEventKey = eventKey;\n            if ('pointerType' in event) {\n                switch (event.pointerType) {\n                    case 'mouse':\n                        pointerType = PointerTypes.Mouse;\n                        break;\n                    case 'touch':\n                        pointerType = PointerTypes.Touch;\n                        break;\n                    case 'pen':\n                        pointerType = PointerTypes.Pen;\n                        break;\n                }\n                if (pointerType === PointerTypes.Touch) {\n                    if (MouseInteractions[eventKey] === MouseInteractions.MouseDown) {\n                        thisEventKey = 'TouchStart';\n                    }\n                    else if (MouseInteractions[eventKey] === MouseInteractions.MouseUp) {\n                        thisEventKey = 'TouchEnd';\n                    }\n                }\n                else if (pointerType === PointerTypes.Pen) ;\n            }\n            else if (legacy_isTouchEvent(event)) {\n                pointerType = PointerTypes.Touch;\n            }\n            if (pointerType !== null) {\n                currentPointerType = pointerType;\n                if ((thisEventKey.startsWith('Touch') &&\n                    pointerType === PointerTypes.Touch) ||\n                    (thisEventKey.startsWith('Mouse') &&\n                        pointerType === PointerTypes.Mouse)) {\n                    pointerType = null;\n                }\n            }\n            else if (MouseInteractions[eventKey] === MouseInteractions.Click) {\n                pointerType = currentPointerType;\n                currentPointerType = null;\n            }\n            const e = legacy_isTouchEvent(event) ? event.changedTouches[0] : event;\n            if (!e) {\n                return;\n            }\n            const id = mirror.getId(target);\n            const { clientX, clientY } = e;\n            callbackWrapper(mouseInteractionCb)({\n                type: MouseInteractions[thisEventKey],\n                id,\n                x: clientX,\n                y: clientY,\n                ...(pointerType !== null && { pointerType }),\n            });\n        };\n    };\n    Object.keys(MouseInteractions)\n        .filter((key) => Number.isNaN(Number(key)) &&\n        !key.endsWith('_Departed') &&\n        disableMap[key] !== false)\n        .forEach((eventKey) => {\n        let eventName = toLowerCase(eventKey);\n        const handler = getHandler(eventKey);\n        if (window.PointerEvent) {\n            switch (MouseInteractions[eventKey]) {\n                case MouseInteractions.MouseDown:\n                case MouseInteractions.MouseUp:\n                    eventName = eventName.replace('mouse', 'pointer');\n                    break;\n                case MouseInteractions.TouchStart:\n                case MouseInteractions.TouchEnd:\n                    return;\n            }\n        }\n        handlers.push(on(eventName, handler, doc));\n    });\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initScrollObserver({ scrollCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\n    const updatePosition = callbackWrapper(throttle$1(callbackWrapper((evt) => {\n        const target = getEventTarget(evt);\n        if (!target ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n            return;\n        }\n        const id = mirror.getId(target);\n        if (target === doc && doc.defaultView) {\n            const scrollLeftTop = getWindowScroll(doc.defaultView);\n            scrollCb({\n                id,\n                x: scrollLeftTop.left,\n                y: scrollLeftTop.top,\n            });\n        }\n        else {\n            scrollCb({\n                id,\n                x: target.scrollLeft,\n                y: target.scrollTop,\n            });\n        }\n    }), sampling.scroll || 100));\n    return on('scroll', updatePosition, doc);\n}\nfunction initViewportResizeObserver({ viewportResizeCb }, { win }) {\n    let lastH = -1;\n    let lastW = -1;\n    const updateDimension = callbackWrapper(throttle$1(callbackWrapper(() => {\n        const height = getWindowHeight();\n        const width = getWindowWidth();\n        if (lastH !== height || lastW !== width) {\n            viewportResizeCb({\n                width: Number(width),\n                height: Number(height),\n            });\n            lastH = height;\n            lastW = width;\n        }\n    }), 200));\n    return on('resize', updateDimension, win);\n}\nconst INPUT_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\nconst lastInputValueMap = new WeakMap();\nfunction initInputObserver({ inputCb, doc, mirror, blockClass, blockSelector, unblockSelector, ignoreClass, ignoreSelector, maskInputOptions, maskInputFn, sampling, userTriggeredOnInput, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, }) {\n    function eventHandler(event) {\n        let target = getEventTarget(event);\n        const userTriggered = event.isTrusted;\n        const tagName = target && toUpperCase(target.tagName);\n        if (tagName === 'OPTION')\n            target = target.parentElement;\n        if (!target ||\n            !tagName ||\n            INPUT_TAGS.indexOf(tagName) < 0 ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n            return;\n        }\n        const el = target;\n        if (el.classList.contains(ignoreClass) ||\n            (ignoreSelector && el.matches(ignoreSelector))) {\n            return;\n        }\n        const type = getInputType(target);\n        let text = getInputValue(el, tagName, type);\n        let isChecked = false;\n        const isInputMasked = shouldMaskInput({\n            maskInputOptions,\n            tagName,\n            type,\n        });\n        const forceMask = needMaskingText(target, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked);\n        if (type === 'radio' || type === 'checkbox') {\n            isChecked = target.checked;\n        }\n        text = maskInputValue({\n            isMasked: forceMask,\n            element: target,\n            value: text,\n            maskInputFn,\n        });\n        cbWithDedup(target, userTriggeredOnInput\n            ? { text, isChecked, userTriggered }\n            : { text, isChecked });\n        const name = target.name;\n        if (type === 'radio' && name && isChecked) {\n            doc\n                .querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`)\n                .forEach((el) => {\n                if (el !== target) {\n                    const text = maskInputValue({\n                        isMasked: forceMask,\n                        element: el,\n                        value: getInputValue(el, tagName, type),\n                        maskInputFn,\n                    });\n                    cbWithDedup(el, userTriggeredOnInput\n                        ? { text, isChecked: !isChecked, userTriggered: false }\n                        : { text, isChecked: !isChecked });\n                }\n            });\n        }\n    }\n    function cbWithDedup(target, v) {\n        const lastInputValue = lastInputValueMap.get(target);\n        if (!lastInputValue ||\n            lastInputValue.text !== v.text ||\n            lastInputValue.isChecked !== v.isChecked) {\n            lastInputValueMap.set(target, v);\n            const id = mirror.getId(target);\n            callbackWrapper(inputCb)({\n                ...v,\n                id,\n            });\n        }\n    }\n    const events = sampling.input === 'last' ? ['change'] : ['input', 'change'];\n    const handlers = events.map((eventName) => on(eventName, callbackWrapper(eventHandler), doc));\n    const currentWindow = doc.defaultView;\n    if (!currentWindow) {\n        return () => {\n            handlers.forEach((h) => h());\n        };\n    }\n    const propertyDescriptor = currentWindow.Object.getOwnPropertyDescriptor(currentWindow.HTMLInputElement.prototype, 'value');\n    const hookProperties = [\n        [currentWindow.HTMLInputElement.prototype, 'value'],\n        [currentWindow.HTMLInputElement.prototype, 'checked'],\n        [currentWindow.HTMLSelectElement.prototype, 'value'],\n        [currentWindow.HTMLTextAreaElement.prototype, 'value'],\n        [currentWindow.HTMLSelectElement.prototype, 'selectedIndex'],\n        [currentWindow.HTMLOptionElement.prototype, 'selected'],\n    ];\n    if (propertyDescriptor && propertyDescriptor.set) {\n        handlers.push(...hookProperties.map((p) => hookSetter(p[0], p[1], {\n            set() {\n                callbackWrapper(eventHandler)({\n                    target: this,\n                    isTrusted: false,\n                });\n            },\n        }, false, currentWindow)));\n    }\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction getNestedCSSRulePositions(rule) {\n    const positions = [];\n    function recurse(childRule, pos) {\n        if ((hasNestedCSSRule('CSSGroupingRule') &&\n            childRule.parentRule instanceof CSSGroupingRule) ||\n            (hasNestedCSSRule('CSSMediaRule') &&\n                childRule.parentRule instanceof CSSMediaRule) ||\n            (hasNestedCSSRule('CSSSupportsRule') &&\n                childRule.parentRule instanceof CSSSupportsRule) ||\n            (hasNestedCSSRule('CSSConditionRule') &&\n                childRule.parentRule instanceof CSSConditionRule)) {\n            const rules = Array.from(childRule.parentRule.cssRules);\n            const index = rules.indexOf(childRule);\n            pos.unshift(index);\n        }\n        else if (childRule.parentStyleSheet) {\n            const rules = Array.from(childRule.parentStyleSheet.cssRules);\n            const index = rules.indexOf(childRule);\n            pos.unshift(index);\n        }\n        return pos;\n    }\n    return recurse(rule, positions);\n}\nfunction getIdAndStyleId(sheet, mirror, styleMirror) {\n    let id, styleId;\n    if (!sheet)\n        return {};\n    if (sheet.ownerNode)\n        id = mirror.getId(sheet.ownerNode);\n    else\n        styleId = styleMirror.getId(sheet);\n    return {\n        styleId,\n        id,\n    };\n}\nfunction initStyleSheetObserver({ styleSheetRuleCb, mirror, stylesheetManager }, { win }) {\n    if (!win.CSSStyleSheet || !win.CSSStyleSheet.prototype) {\n        return () => {\n        };\n    }\n    const insertRule = win.CSSStyleSheet.prototype.insertRule;\n    win.CSSStyleSheet.prototype.insertRule = new Proxy(insertRule, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [rule, index] = argumentsList;\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleSheetRuleCb({\n                    id,\n                    styleId,\n                    adds: [{ rule, index }],\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    const deleteRule = win.CSSStyleSheet.prototype.deleteRule;\n    win.CSSStyleSheet.prototype.deleteRule = new Proxy(deleteRule, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [index] = argumentsList;\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleSheetRuleCb({\n                    id,\n                    styleId,\n                    removes: [{ index }],\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    let replace;\n    if (win.CSSStyleSheet.prototype.replace) {\n        replace = win.CSSStyleSheet.prototype.replace;\n        win.CSSStyleSheet.prototype.replace = new Proxy(replace, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [text] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        replace: text,\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n    }\n    let replaceSync;\n    if (win.CSSStyleSheet.prototype.replaceSync) {\n        replaceSync = win.CSSStyleSheet.prototype.replaceSync;\n        win.CSSStyleSheet.prototype.replaceSync = new Proxy(replaceSync, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [text] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        replaceSync: text,\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n    }\n    const supportedNestedCSSRuleTypes = {};\n    if (canMonkeyPatchNestedCSSRule('CSSGroupingRule')) {\n        supportedNestedCSSRuleTypes.CSSGroupingRule = win.CSSGroupingRule;\n    }\n    else {\n        if (canMonkeyPatchNestedCSSRule('CSSMediaRule')) {\n            supportedNestedCSSRuleTypes.CSSMediaRule = win.CSSMediaRule;\n        }\n        if (canMonkeyPatchNestedCSSRule('CSSConditionRule')) {\n            supportedNestedCSSRuleTypes.CSSConditionRule = win.CSSConditionRule;\n        }\n        if (canMonkeyPatchNestedCSSRule('CSSSupportsRule')) {\n            supportedNestedCSSRuleTypes.CSSSupportsRule = win.CSSSupportsRule;\n        }\n    }\n    const unmodifiedFunctions = {};\n    Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\n        unmodifiedFunctions[typeKey] = {\n            insertRule: type.prototype.insertRule,\n            deleteRule: type.prototype.deleteRule,\n        };\n        type.prototype.insertRule = new Proxy(unmodifiedFunctions[typeKey].insertRule, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [rule, index] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        adds: [\n                            {\n                                rule,\n                                index: [\n                                    ...getNestedCSSRulePositions(thisArg),\n                                    index || 0,\n                                ],\n                            },\n                        ],\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n        type.prototype.deleteRule = new Proxy(unmodifiedFunctions[typeKey].deleteRule, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [index] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        removes: [\n                            { index: [...getNestedCSSRulePositions(thisArg), index] },\n                        ],\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n    });\n    return callbackWrapper(() => {\n        win.CSSStyleSheet.prototype.insertRule = insertRule;\n        win.CSSStyleSheet.prototype.deleteRule = deleteRule;\n        replace && (win.CSSStyleSheet.prototype.replace = replace);\n        replaceSync && (win.CSSStyleSheet.prototype.replaceSync = replaceSync);\n        Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\n            type.prototype.insertRule = unmodifiedFunctions[typeKey].insertRule;\n            type.prototype.deleteRule = unmodifiedFunctions[typeKey].deleteRule;\n        });\n    });\n}\nfunction initAdoptedStyleSheetObserver({ mirror, stylesheetManager, }, host) {\n    let hostId = null;\n    if (host.nodeName === '#document')\n        hostId = mirror.getId(host);\n    else\n        hostId = mirror.getId(host.host);\n    const patchTarget = host.nodeName === '#document'\n        ? _optionalChain$2([host, 'access', _4 => _4.defaultView, 'optionalAccess', _5 => _5.Document])\n        : _optionalChain$2([host, 'access', _6 => _6.ownerDocument, 'optionalAccess', _7 => _7.defaultView, 'optionalAccess', _8 => _8.ShadowRoot]);\n    const originalPropertyDescriptor = _optionalChain$2([patchTarget, 'optionalAccess', _9 => _9.prototype])\n        ? Object.getOwnPropertyDescriptor(_optionalChain$2([patchTarget, 'optionalAccess', _10 => _10.prototype]), 'adoptedStyleSheets')\n        : undefined;\n    if (hostId === null ||\n        hostId === -1 ||\n        !patchTarget ||\n        !originalPropertyDescriptor)\n        return () => {\n        };\n    Object.defineProperty(host, 'adoptedStyleSheets', {\n        configurable: originalPropertyDescriptor.configurable,\n        enumerable: originalPropertyDescriptor.enumerable,\n        get() {\n            return _optionalChain$2([originalPropertyDescriptor, 'access', _11 => _11.get, 'optionalAccess', _12 => _12.call, 'call', _13 => _13(this)]);\n        },\n        set(sheets) {\n            const result = _optionalChain$2([originalPropertyDescriptor, 'access', _14 => _14.set, 'optionalAccess', _15 => _15.call, 'call', _16 => _16(this, sheets)]);\n            if (hostId !== null && hostId !== -1) {\n                try {\n                    stylesheetManager.adoptStyleSheets(sheets, hostId);\n                }\n                catch (e) {\n                }\n            }\n            return result;\n        },\n    });\n    return callbackWrapper(() => {\n        Object.defineProperty(host, 'adoptedStyleSheets', {\n            configurable: originalPropertyDescriptor.configurable,\n            enumerable: originalPropertyDescriptor.enumerable,\n            get: originalPropertyDescriptor.get,\n            set: originalPropertyDescriptor.set,\n        });\n    });\n}\nfunction initStyleDeclarationObserver({ styleDeclarationCb, mirror, ignoreCSSAttributes, stylesheetManager, }, { win }) {\n    const setProperty = win.CSSStyleDeclaration.prototype.setProperty;\n    win.CSSStyleDeclaration.prototype.setProperty = new Proxy(setProperty, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [property, value, priority] = argumentsList;\n            if (ignoreCSSAttributes.has(property)) {\n                return setProperty.apply(thisArg, [property, value, priority]);\n            }\n            const { id, styleId } = getIdAndStyleId(_optionalChain$2([thisArg, 'access', _17 => _17.parentRule, 'optionalAccess', _18 => _18.parentStyleSheet]), mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleDeclarationCb({\n                    id,\n                    styleId,\n                    set: {\n                        property,\n                        value,\n                        priority,\n                    },\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    const removeProperty = win.CSSStyleDeclaration.prototype.removeProperty;\n    win.CSSStyleDeclaration.prototype.removeProperty = new Proxy(removeProperty, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [property] = argumentsList;\n            if (ignoreCSSAttributes.has(property)) {\n                return removeProperty.apply(thisArg, [property]);\n            }\n            const { id, styleId } = getIdAndStyleId(_optionalChain$2([thisArg, 'access', _19 => _19.parentRule, 'optionalAccess', _20 => _20.parentStyleSheet]), mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleDeclarationCb({\n                    id,\n                    styleId,\n                    remove: {\n                        property,\n                    },\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    return callbackWrapper(() => {\n        win.CSSStyleDeclaration.prototype.setProperty = setProperty;\n        win.CSSStyleDeclaration.prototype.removeProperty = removeProperty;\n    });\n}\nfunction initMediaInteractionObserver({ mediaInteractionCb, blockClass, blockSelector, unblockSelector, mirror, sampling, doc, }) {\n    const handler = callbackWrapper((type) => throttle$1(callbackWrapper((event) => {\n        const target = getEventTarget(event);\n        if (!target ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n            return;\n        }\n        const { currentTime, volume, muted, playbackRate } = target;\n        mediaInteractionCb({\n            type,\n            id: mirror.getId(target),\n            currentTime,\n            volume,\n            muted,\n            playbackRate,\n        });\n    }), sampling.media || 500));\n    const handlers = [\n        on('play', handler(0), doc),\n        on('pause', handler(1), doc),\n        on('seeked', handler(2), doc),\n        on('volumechange', handler(3), doc),\n        on('ratechange', handler(4), doc),\n    ];\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initFontObserver({ fontCb, doc }) {\n    const win = doc.defaultView;\n    if (!win) {\n        return () => {\n        };\n    }\n    const handlers = [];\n    const fontMap = new WeakMap();\n    const originalFontFace = win.FontFace;\n    win.FontFace = function FontFace(family, source, descriptors) {\n        const fontFace = new originalFontFace(family, source, descriptors);\n        fontMap.set(fontFace, {\n            family,\n            buffer: typeof source !== 'string',\n            descriptors,\n            fontSource: typeof source === 'string'\n                ? source\n                : JSON.stringify(Array.from(new Uint8Array(source))),\n        });\n        return fontFace;\n    };\n    const restoreHandler = patch(doc.fonts, 'add', function (original) {\n        return function (fontFace) {\n            setTimeout$1(callbackWrapper(() => {\n                const p = fontMap.get(fontFace);\n                if (p) {\n                    fontCb(p);\n                    fontMap.delete(fontFace);\n                }\n            }), 0);\n            return original.apply(this, [fontFace]);\n        };\n    });\n    handlers.push(() => {\n        win.FontFace = originalFontFace;\n    });\n    handlers.push(restoreHandler);\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initSelectionObserver(param) {\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, selectionCb, } = param;\n    let collapsed = true;\n    const updateSelection = callbackWrapper(() => {\n        const selection = doc.getSelection();\n        if (!selection || (collapsed && _optionalChain$2([selection, 'optionalAccess', _21 => _21.isCollapsed])))\n            return;\n        collapsed = selection.isCollapsed || false;\n        const ranges = [];\n        const count = selection.rangeCount || 0;\n        for (let i = 0; i < count; i++) {\n            const range = selection.getRangeAt(i);\n            const { startContainer, startOffset, endContainer, endOffset } = range;\n            const blocked = isBlocked(startContainer, blockClass, blockSelector, unblockSelector, true) ||\n                isBlocked(endContainer, blockClass, blockSelector, unblockSelector, true);\n            if (blocked)\n                continue;\n            ranges.push({\n                start: mirror.getId(startContainer),\n                startOffset,\n                end: mirror.getId(endContainer),\n                endOffset,\n            });\n        }\n        selectionCb({ ranges });\n    });\n    updateSelection();\n    return on('selectionchange', updateSelection);\n}\nfunction initCustomElementObserver({ doc, customElementCb, }) {\n    const win = doc.defaultView;\n    if (!win || !win.customElements)\n        return () => { };\n    const restoreHandler = patch(win.customElements, 'define', function (original) {\n        return function (name, constructor, options) {\n            try {\n                customElementCb({\n                    define: {\n                        name,\n                    },\n                });\n            }\n            catch (e) {\n            }\n            return original.apply(this, [name, constructor, options]);\n        };\n    });\n    return restoreHandler;\n}\nfunction initObservers(o, _hooks = {}) {\n    const currentWindow = o.doc.defaultView;\n    if (!currentWindow) {\n        return () => {\n        };\n    }\n    const mutationObserver = initMutationObserver(o, o.doc);\n    const mousemoveHandler = initMoveObserver(o);\n    const mouseInteractionHandler = initMouseInteractionObserver(o);\n    const scrollHandler = initScrollObserver(o);\n    const viewportResizeHandler = initViewportResizeObserver(o, {\n        win: currentWindow,\n    });\n    const inputHandler = initInputObserver(o);\n    const mediaInteractionHandler = initMediaInteractionObserver(o);\n    const styleSheetObserver = initStyleSheetObserver(o, { win: currentWindow });\n    const adoptedStyleSheetObserver = initAdoptedStyleSheetObserver(o, o.doc);\n    const styleDeclarationObserver = initStyleDeclarationObserver(o, {\n        win: currentWindow,\n    });\n    const fontObserver = o.collectFonts\n        ? initFontObserver(o)\n        : () => {\n        };\n    const selectionObserver = initSelectionObserver(o);\n    const customElementObserver = initCustomElementObserver(o);\n    const pluginHandlers = [];\n    for (const plugin of o.plugins) {\n        pluginHandlers.push(plugin.observer(plugin.callback, currentWindow, plugin.options));\n    }\n    return callbackWrapper(() => {\n        mutationBuffers.forEach((b) => b.reset());\n        mutationObserver.disconnect();\n        mousemoveHandler();\n        mouseInteractionHandler();\n        scrollHandler();\n        viewportResizeHandler();\n        inputHandler();\n        mediaInteractionHandler();\n        styleSheetObserver();\n        adoptedStyleSheetObserver();\n        styleDeclarationObserver();\n        fontObserver();\n        selectionObserver();\n        customElementObserver();\n        pluginHandlers.forEach((h) => h());\n    });\n}\nfunction hasNestedCSSRule(prop) {\n    return typeof window[prop] !== 'undefined';\n}\nfunction canMonkeyPatchNestedCSSRule(prop) {\n    return Boolean(typeof window[prop] !== 'undefined' &&\n        window[prop].prototype &&\n        'insertRule' in window[prop].prototype &&\n        'deleteRule' in window[prop].prototype);\n}\n\nclass CrossOriginIframeMirror {\n    constructor(generateIdFn) {\n        this.generateIdFn = generateIdFn;\n        this.iframeIdToRemoteIdMap = new WeakMap();\n        this.iframeRemoteIdToIdMap = new WeakMap();\n    }\n    getId(iframe, remoteId, idToRemoteMap, remoteToIdMap) {\n        const idToRemoteIdMap = idToRemoteMap || this.getIdToRemoteIdMap(iframe);\n        const remoteIdToIdMap = remoteToIdMap || this.getRemoteIdToIdMap(iframe);\n        let id = idToRemoteIdMap.get(remoteId);\n        if (!id) {\n            id = this.generateIdFn();\n            idToRemoteIdMap.set(remoteId, id);\n            remoteIdToIdMap.set(id, remoteId);\n        }\n        return id;\n    }\n    getIds(iframe, remoteId) {\n        const idToRemoteIdMap = this.getIdToRemoteIdMap(iframe);\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\n        return remoteId.map((id) => this.getId(iframe, id, idToRemoteIdMap, remoteIdToIdMap));\n    }\n    getRemoteId(iframe, id, map) {\n        const remoteIdToIdMap = map || this.getRemoteIdToIdMap(iframe);\n        if (typeof id !== 'number')\n            return id;\n        const remoteId = remoteIdToIdMap.get(id);\n        if (!remoteId)\n            return -1;\n        return remoteId;\n    }\n    getRemoteIds(iframe, ids) {\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\n        return ids.map((id) => this.getRemoteId(iframe, id, remoteIdToIdMap));\n    }\n    reset(iframe) {\n        if (!iframe) {\n            this.iframeIdToRemoteIdMap = new WeakMap();\n            this.iframeRemoteIdToIdMap = new WeakMap();\n            return;\n        }\n        this.iframeIdToRemoteIdMap.delete(iframe);\n        this.iframeRemoteIdToIdMap.delete(iframe);\n    }\n    getIdToRemoteIdMap(iframe) {\n        let idToRemoteIdMap = this.iframeIdToRemoteIdMap.get(iframe);\n        if (!idToRemoteIdMap) {\n            idToRemoteIdMap = new Map();\n            this.iframeIdToRemoteIdMap.set(iframe, idToRemoteIdMap);\n        }\n        return idToRemoteIdMap;\n    }\n    getRemoteIdToIdMap(iframe) {\n        let remoteIdToIdMap = this.iframeRemoteIdToIdMap.get(iframe);\n        if (!remoteIdToIdMap) {\n            remoteIdToIdMap = new Map();\n            this.iframeRemoteIdToIdMap.set(iframe, remoteIdToIdMap);\n        }\n        return remoteIdToIdMap;\n    }\n}\n\nfunction _optionalChain$1(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\nclass IframeManagerNoop {\n    constructor() {\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\n        this.crossOriginIframeRootIdMap = new WeakMap();\n    }\n    addIframe() {\n    }\n    addLoadListener() {\n    }\n    attachIframe() {\n    }\n}\nclass IframeManager {\n    constructor(options) {\n        this.iframes = new WeakMap();\n        this.crossOriginIframeMap = new WeakMap();\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\n        this.crossOriginIframeRootIdMap = new WeakMap();\n        this.mutationCb = options.mutationCb;\n        this.wrappedEmit = options.wrappedEmit;\n        this.stylesheetManager = options.stylesheetManager;\n        this.recordCrossOriginIframes = options.recordCrossOriginIframes;\n        this.crossOriginIframeStyleMirror = new CrossOriginIframeMirror(this.stylesheetManager.styleMirror.generateId.bind(this.stylesheetManager.styleMirror));\n        this.mirror = options.mirror;\n        if (this.recordCrossOriginIframes) {\n            window.addEventListener('message', this.handleMessage.bind(this));\n        }\n    }\n    addIframe(iframeEl) {\n        this.iframes.set(iframeEl, true);\n        if (iframeEl.contentWindow)\n            this.crossOriginIframeMap.set(iframeEl.contentWindow, iframeEl);\n    }\n    addLoadListener(cb) {\n        this.loadListener = cb;\n    }\n    attachIframe(iframeEl, childSn) {\n        this.mutationCb({\n            adds: [\n                {\n                    parentId: this.mirror.getId(iframeEl),\n                    nextId: null,\n                    node: childSn,\n                },\n            ],\n            removes: [],\n            texts: [],\n            attributes: [],\n            isAttachIframe: true,\n        });\n        _optionalChain$1([this, 'access', _ => _.loadListener, 'optionalCall', _2 => _2(iframeEl)]);\n        if (iframeEl.contentDocument &&\n            iframeEl.contentDocument.adoptedStyleSheets &&\n            iframeEl.contentDocument.adoptedStyleSheets.length > 0)\n            this.stylesheetManager.adoptStyleSheets(iframeEl.contentDocument.adoptedStyleSheets, this.mirror.getId(iframeEl.contentDocument));\n    }\n    handleMessage(message) {\n        const crossOriginMessageEvent = message;\n        if (crossOriginMessageEvent.data.type !== 'rrweb' ||\n            crossOriginMessageEvent.origin !== crossOriginMessageEvent.data.origin)\n            return;\n        const iframeSourceWindow = message.source;\n        if (!iframeSourceWindow)\n            return;\n        const iframeEl = this.crossOriginIframeMap.get(message.source);\n        if (!iframeEl)\n            return;\n        const transformedEvent = this.transformCrossOriginEvent(iframeEl, crossOriginMessageEvent.data.event);\n        if (transformedEvent)\n            this.wrappedEmit(transformedEvent, crossOriginMessageEvent.data.isCheckout);\n    }\n    transformCrossOriginEvent(iframeEl, e) {\n        switch (e.type) {\n            case EventType.FullSnapshot: {\n                this.crossOriginIframeMirror.reset(iframeEl);\n                this.crossOriginIframeStyleMirror.reset(iframeEl);\n                this.replaceIdOnNode(e.data.node, iframeEl);\n                const rootId = e.data.node.id;\n                this.crossOriginIframeRootIdMap.set(iframeEl, rootId);\n                this.patchRootIdOnNode(e.data.node, rootId);\n                return {\n                    timestamp: e.timestamp,\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.Mutation,\n                        adds: [\n                            {\n                                parentId: this.mirror.getId(iframeEl),\n                                nextId: null,\n                                node: e.data.node,\n                            },\n                        ],\n                        removes: [],\n                        texts: [],\n                        attributes: [],\n                        isAttachIframe: true,\n                    },\n                };\n            }\n            case EventType.Meta:\n            case EventType.Load:\n            case EventType.DomContentLoaded: {\n                return false;\n            }\n            case EventType.Plugin: {\n                return e;\n            }\n            case EventType.Custom: {\n                this.replaceIds(e.data.payload, iframeEl, ['id', 'parentId', 'previousId', 'nextId']);\n                return e;\n            }\n            case EventType.IncrementalSnapshot: {\n                switch (e.data.source) {\n                    case IncrementalSource.Mutation: {\n                        e.data.adds.forEach((n) => {\n                            this.replaceIds(n, iframeEl, [\n                                'parentId',\n                                'nextId',\n                                'previousId',\n                            ]);\n                            this.replaceIdOnNode(n.node, iframeEl);\n                            const rootId = this.crossOriginIframeRootIdMap.get(iframeEl);\n                            rootId && this.patchRootIdOnNode(n.node, rootId);\n                        });\n                        e.data.removes.forEach((n) => {\n                            this.replaceIds(n, iframeEl, ['parentId', 'id']);\n                        });\n                        e.data.attributes.forEach((n) => {\n                            this.replaceIds(n, iframeEl, ['id']);\n                        });\n                        e.data.texts.forEach((n) => {\n                            this.replaceIds(n, iframeEl, ['id']);\n                        });\n                        return e;\n                    }\n                    case IncrementalSource.Drag:\n                    case IncrementalSource.TouchMove:\n                    case IncrementalSource.MouseMove: {\n                        e.data.positions.forEach((p) => {\n                            this.replaceIds(p, iframeEl, ['id']);\n                        });\n                        return e;\n                    }\n                    case IncrementalSource.ViewportResize: {\n                        return false;\n                    }\n                    case IncrementalSource.MediaInteraction:\n                    case IncrementalSource.MouseInteraction:\n                    case IncrementalSource.Scroll:\n                    case IncrementalSource.CanvasMutation:\n                    case IncrementalSource.Input: {\n                        this.replaceIds(e.data, iframeEl, ['id']);\n                        return e;\n                    }\n                    case IncrementalSource.StyleSheetRule:\n                    case IncrementalSource.StyleDeclaration: {\n                        this.replaceIds(e.data, iframeEl, ['id']);\n                        this.replaceStyleIds(e.data, iframeEl, ['styleId']);\n                        return e;\n                    }\n                    case IncrementalSource.Font: {\n                        return e;\n                    }\n                    case IncrementalSource.Selection: {\n                        e.data.ranges.forEach((range) => {\n                            this.replaceIds(range, iframeEl, ['start', 'end']);\n                        });\n                        return e;\n                    }\n                    case IncrementalSource.AdoptedStyleSheet: {\n                        this.replaceIds(e.data, iframeEl, ['id']);\n                        this.replaceStyleIds(e.data, iframeEl, ['styleIds']);\n                        _optionalChain$1([e, 'access', _3 => _3.data, 'access', _4 => _4.styles, 'optionalAccess', _5 => _5.forEach, 'call', _6 => _6((style) => {\n                            this.replaceStyleIds(style, iframeEl, ['styleId']);\n                        })]);\n                        return e;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n    replace(iframeMirror, obj, iframeEl, keys) {\n        for (const key of keys) {\n            if (!Array.isArray(obj[key]) && typeof obj[key] !== 'number')\n                continue;\n            if (Array.isArray(obj[key])) {\n                obj[key] = iframeMirror.getIds(iframeEl, obj[key]);\n            }\n            else {\n                obj[key] = iframeMirror.getId(iframeEl, obj[key]);\n            }\n        }\n        return obj;\n    }\n    replaceIds(obj, iframeEl, keys) {\n        return this.replace(this.crossOriginIframeMirror, obj, iframeEl, keys);\n    }\n    replaceStyleIds(obj, iframeEl, keys) {\n        return this.replace(this.crossOriginIframeStyleMirror, obj, iframeEl, keys);\n    }\n    replaceIdOnNode(node, iframeEl) {\n        this.replaceIds(node, iframeEl, ['id', 'rootId']);\n        if ('childNodes' in node) {\n            node.childNodes.forEach((child) => {\n                this.replaceIdOnNode(child, iframeEl);\n            });\n        }\n    }\n    patchRootIdOnNode(node, rootId) {\n        if (node.type !== NodeType$1.Document && !node.rootId)\n            node.rootId = rootId;\n        if ('childNodes' in node) {\n            node.childNodes.forEach((child) => {\n                this.patchRootIdOnNode(child, rootId);\n            });\n        }\n    }\n}\n\nclass ShadowDomManagerNoop {\n    init() {\n    }\n    addShadowRoot() {\n    }\n    observeAttachShadow() {\n    }\n    reset() {\n    }\n}\nclass ShadowDomManager {\n    constructor(options) {\n        this.shadowDoms = new WeakSet();\n        this.restoreHandlers = [];\n        this.mutationCb = options.mutationCb;\n        this.scrollCb = options.scrollCb;\n        this.bypassOptions = options.bypassOptions;\n        this.mirror = options.mirror;\n        this.init();\n    }\n    init() {\n        this.reset();\n        this.patchAttachShadow(Element, document);\n    }\n    addShadowRoot(shadowRoot, doc) {\n        if (!isNativeShadowDom(shadowRoot))\n            return;\n        if (this.shadowDoms.has(shadowRoot))\n            return;\n        this.shadowDoms.add(shadowRoot);\n        const observer = initMutationObserver({\n            ...this.bypassOptions,\n            doc,\n            mutationCb: this.mutationCb,\n            mirror: this.mirror,\n            shadowDomManager: this,\n        }, shadowRoot);\n        this.restoreHandlers.push(() => observer.disconnect());\n        this.restoreHandlers.push(initScrollObserver({\n            ...this.bypassOptions,\n            scrollCb: this.scrollCb,\n            doc: shadowRoot,\n            mirror: this.mirror,\n        }));\n        setTimeout$1(() => {\n            if (shadowRoot.adoptedStyleSheets &&\n                shadowRoot.adoptedStyleSheets.length > 0)\n                this.bypassOptions.stylesheetManager.adoptStyleSheets(shadowRoot.adoptedStyleSheets, this.mirror.getId(shadowRoot.host));\n            this.restoreHandlers.push(initAdoptedStyleSheetObserver({\n                mirror: this.mirror,\n                stylesheetManager: this.bypassOptions.stylesheetManager,\n            }, shadowRoot));\n        }, 0);\n    }\n    observeAttachShadow(iframeElement) {\n        if (!iframeElement.contentWindow || !iframeElement.contentDocument)\n            return;\n        this.patchAttachShadow(iframeElement.contentWindow.Element, iframeElement.contentDocument);\n    }\n    patchAttachShadow(element, doc) {\n        const manager = this;\n        this.restoreHandlers.push(patch(element.prototype, 'attachShadow', function (original) {\n            return function (option) {\n                const shadowRoot = original.call(this, option);\n                if (this.shadowRoot && inDom(this))\n                    manager.addShadowRoot(this.shadowRoot, doc);\n                return shadowRoot;\n            };\n        }));\n    }\n    reset() {\n        this.restoreHandlers.forEach((handler) => {\n            try {\n                handler();\n            }\n            catch (e) {\n            }\n        });\n        this.restoreHandlers = [];\n        this.shadowDoms = new WeakSet();\n    }\n}\n\nclass CanvasManagerNoop {\n    reset() {\n    }\n    freeze() {\n    }\n    unfreeze() {\n    }\n    lock() {\n    }\n    unlock() {\n    }\n    snapshot() {\n    }\n}\n\nclass StylesheetManager {\n    constructor(options) {\n        this.trackedLinkElements = new WeakSet();\n        this.styleMirror = new StyleSheetMirror();\n        this.mutationCb = options.mutationCb;\n        this.adoptedStyleSheetCb = options.adoptedStyleSheetCb;\n    }\n    attachLinkElement(linkEl, childSn) {\n        if ('_cssText' in childSn.attributes)\n            this.mutationCb({\n                adds: [],\n                removes: [],\n                texts: [],\n                attributes: [\n                    {\n                        id: childSn.id,\n                        attributes: childSn\n                            .attributes,\n                    },\n                ],\n            });\n        this.trackLinkElement(linkEl);\n    }\n    trackLinkElement(linkEl) {\n        if (this.trackedLinkElements.has(linkEl))\n            return;\n        this.trackedLinkElements.add(linkEl);\n        this.trackStylesheetInLinkElement(linkEl);\n    }\n    adoptStyleSheets(sheets, hostId) {\n        if (sheets.length === 0)\n            return;\n        const adoptedStyleSheetData = {\n            id: hostId,\n            styleIds: [],\n        };\n        const styles = [];\n        for (const sheet of sheets) {\n            let styleId;\n            if (!this.styleMirror.has(sheet)) {\n                styleId = this.styleMirror.add(sheet);\n                styles.push({\n                    styleId,\n                    rules: Array.from(sheet.rules || CSSRule, (r, index) => ({\n                        rule: stringifyRule(r),\n                        index,\n                    })),\n                });\n            }\n            else\n                styleId = this.styleMirror.getId(sheet);\n            adoptedStyleSheetData.styleIds.push(styleId);\n        }\n        if (styles.length > 0)\n            adoptedStyleSheetData.styles = styles;\n        this.adoptedStyleSheetCb(adoptedStyleSheetData);\n    }\n    reset() {\n        this.styleMirror.reset();\n        this.trackedLinkElements = new WeakSet();\n    }\n    trackStylesheetInLinkElement(linkEl) {\n    }\n}\n\nclass ProcessedNodeManager {\n    constructor() {\n        this.nodeMap = new WeakMap();\n        this.loop = true;\n        this.periodicallyClear();\n    }\n    periodicallyClear() {\n        onRequestAnimationFrame(() => {\n            this.clear();\n            if (this.loop)\n                this.periodicallyClear();\n        });\n    }\n    inOtherBuffer(node, thisBuffer) {\n        const buffers = this.nodeMap.get(node);\n        return (buffers && Array.from(buffers).some((buffer) => buffer !== thisBuffer));\n    }\n    add(node, buffer) {\n        this.nodeMap.set(node, (this.nodeMap.get(node) || new Set()).add(buffer));\n    }\n    clear() {\n        this.nodeMap = new WeakMap();\n    }\n    destroy() {\n        this.loop = false;\n    }\n}\n\nlet wrappedEmit;\nlet _takeFullSnapshot;\nconst mirror = createMirror();\nfunction record(options = {}) {\n    const { emit, checkoutEveryNms, checkoutEveryNth, blockClass = 'rr-block', blockSelector = null, unblockSelector = null, ignoreClass = 'rr-ignore', ignoreSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, maskAllInputs, maskInputOptions: _maskInputOptions, slimDOMOptions: _slimDOMOptions, maskAttributeFn, maskInputFn, maskTextFn, maxCanvasSize = null, packFn, sampling = {}, dataURLOptions = {}, mousemoveWait, recordCanvas = false, recordCrossOriginIframes = false, recordAfter = options.recordAfter === 'DOMContentLoaded'\n        ? options.recordAfter\n        : 'load', userTriggeredOnInput = false, collectFonts = false, inlineImages = false, plugins, keepIframeSrcFn = () => false, ignoreCSSAttributes = new Set([]), errorHandler, onMutation, getCanvasManager, } = options;\n    registerErrorHandler(errorHandler);\n    const inEmittingFrame = recordCrossOriginIframes\n        ? window.parent === window\n        : true;\n    let passEmitsToParent = false;\n    if (!inEmittingFrame) {\n        try {\n            if (window.parent.document) {\n                passEmitsToParent = false;\n            }\n        }\n        catch (e) {\n            passEmitsToParent = true;\n        }\n    }\n    if (inEmittingFrame && !emit) {\n        throw new Error('emit function is required');\n    }\n    if (mousemoveWait !== undefined && sampling.mousemove === undefined) {\n        sampling.mousemove = mousemoveWait;\n    }\n    mirror.reset();\n    const maskInputOptions = maskAllInputs === true\n        ? {\n            color: true,\n            date: true,\n            'datetime-local': true,\n            email: true,\n            month: true,\n            number: true,\n            range: true,\n            search: true,\n            tel: true,\n            text: true,\n            time: true,\n            url: true,\n            week: true,\n            textarea: true,\n            select: true,\n            radio: true,\n            checkbox: true,\n        }\n        : _maskInputOptions !== undefined\n            ? _maskInputOptions\n            : {};\n    const slimDOMOptions = _slimDOMOptions === true || _slimDOMOptions === 'all'\n        ? {\n            script: true,\n            comment: true,\n            headFavicon: true,\n            headWhitespace: true,\n            headMetaSocial: true,\n            headMetaRobots: true,\n            headMetaHttpEquiv: true,\n            headMetaVerification: true,\n            headMetaAuthorship: _slimDOMOptions === 'all',\n            headMetaDescKeywords: _slimDOMOptions === 'all',\n        }\n        : _slimDOMOptions\n            ? _slimDOMOptions\n            : {};\n    polyfill();\n    let lastFullSnapshotEvent;\n    let incrementalSnapshotCount = 0;\n    const eventProcessor = (e) => {\n        for (const plugin of plugins || []) {\n            if (plugin.eventProcessor) {\n                e = plugin.eventProcessor(e);\n            }\n        }\n        if (packFn &&\n            !passEmitsToParent) {\n            e = packFn(e);\n        }\n        return e;\n    };\n    wrappedEmit = (r, isCheckout) => {\n        const e = r;\n        e.timestamp = nowTimestamp();\n        if (_optionalChain([mutationBuffers, 'access', _ => _[0], 'optionalAccess', _2 => _2.isFrozen, 'call', _3 => _3()]) &&\n            e.type !== EventType.FullSnapshot &&\n            !(e.type === EventType.IncrementalSnapshot &&\n                e.data.source === IncrementalSource.Mutation)) {\n            mutationBuffers.forEach((buf) => buf.unfreeze());\n        }\n        if (inEmittingFrame) {\n            _optionalChain([emit, 'optionalCall', _4 => _4(eventProcessor(e), isCheckout)]);\n        }\n        else if (passEmitsToParent) {\n            const message = {\n                type: 'rrweb',\n                event: eventProcessor(e),\n                origin: window.location.origin,\n                isCheckout,\n            };\n            window.parent.postMessage(message, '*');\n        }\n        if (e.type === EventType.FullSnapshot) {\n            lastFullSnapshotEvent = e;\n            incrementalSnapshotCount = 0;\n        }\n        else if (e.type === EventType.IncrementalSnapshot) {\n            if (e.data.source === IncrementalSource.Mutation &&\n                e.data.isAttachIframe) {\n                return;\n            }\n            incrementalSnapshotCount++;\n            const exceedCount = checkoutEveryNth && incrementalSnapshotCount >= checkoutEveryNth;\n            const exceedTime = checkoutEveryNms &&\n                lastFullSnapshotEvent &&\n                e.timestamp - lastFullSnapshotEvent.timestamp > checkoutEveryNms;\n            if (exceedCount || exceedTime) {\n                takeFullSnapshot(true);\n            }\n        }\n    };\n    const wrappedMutationEmit = (m) => {\n        wrappedEmit({\n            type: EventType.IncrementalSnapshot,\n            data: {\n                source: IncrementalSource.Mutation,\n                ...m,\n            },\n        });\n    };\n    const wrappedScrollEmit = (p) => wrappedEmit({\n        type: EventType.IncrementalSnapshot,\n        data: {\n            source: IncrementalSource.Scroll,\n            ...p,\n        },\n    });\n    const wrappedCanvasMutationEmit = (p) => wrappedEmit({\n        type: EventType.IncrementalSnapshot,\n        data: {\n            source: IncrementalSource.CanvasMutation,\n            ...p,\n        },\n    });\n    const wrappedAdoptedStyleSheetEmit = (a) => wrappedEmit({\n        type: EventType.IncrementalSnapshot,\n        data: {\n            source: IncrementalSource.AdoptedStyleSheet,\n            ...a,\n        },\n    });\n    const stylesheetManager = new StylesheetManager({\n        mutationCb: wrappedMutationEmit,\n        adoptedStyleSheetCb: wrappedAdoptedStyleSheetEmit,\n    });\n    const iframeManager = typeof __RRWEB_EXCLUDE_IFRAME__ === 'boolean' && __RRWEB_EXCLUDE_IFRAME__\n        ? new IframeManagerNoop()\n        : new IframeManager({\n            mirror,\n            mutationCb: wrappedMutationEmit,\n            stylesheetManager: stylesheetManager,\n            recordCrossOriginIframes,\n            wrappedEmit,\n        });\n    for (const plugin of plugins || []) {\n        if (plugin.getMirror)\n            plugin.getMirror({\n                nodeMirror: mirror,\n                crossOriginIframeMirror: iframeManager.crossOriginIframeMirror,\n                crossOriginIframeStyleMirror: iframeManager.crossOriginIframeStyleMirror,\n            });\n    }\n    const processedNodeManager = new ProcessedNodeManager();\n    const canvasManager = _getCanvasManager(getCanvasManager, {\n        mirror,\n        win: window,\n        mutationCb: (p) => wrappedEmit({\n            type: EventType.IncrementalSnapshot,\n            data: {\n                source: IncrementalSource.CanvasMutation,\n                ...p,\n            },\n        }),\n        recordCanvas,\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        maxCanvasSize,\n        sampling: sampling['canvas'],\n        dataURLOptions,\n        errorHandler,\n    });\n    const shadowDomManager = typeof __RRWEB_EXCLUDE_SHADOW_DOM__ === 'boolean' &&\n        __RRWEB_EXCLUDE_SHADOW_DOM__\n        ? new ShadowDomManagerNoop()\n        : new ShadowDomManager({\n            mutationCb: wrappedMutationEmit,\n            scrollCb: wrappedScrollEmit,\n            bypassOptions: {\n                onMutation,\n                blockClass,\n                blockSelector,\n                unblockSelector,\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n                inlineStylesheet,\n                maskInputOptions,\n                dataURLOptions,\n                maskAttributeFn,\n                maskTextFn,\n                maskInputFn,\n                recordCanvas,\n                inlineImages,\n                sampling,\n                slimDOMOptions,\n                iframeManager,\n                stylesheetManager,\n                canvasManager,\n                keepIframeSrcFn,\n                processedNodeManager,\n            },\n            mirror,\n        });\n    const takeFullSnapshot = (isCheckout = false) => {\n        wrappedEmit({\n            type: EventType.Meta,\n            data: {\n                href: window.location.href,\n                width: getWindowWidth(),\n                height: getWindowHeight(),\n            },\n        }, isCheckout);\n        stylesheetManager.reset();\n        shadowDomManager.init();\n        mutationBuffers.forEach((buf) => buf.lock());\n        const node = snapshot(document, {\n            mirror,\n            blockClass,\n            blockSelector,\n            unblockSelector,\n            maskAllText,\n            maskTextClass,\n            unmaskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            inlineStylesheet,\n            maskAllInputs: maskInputOptions,\n            maskAttributeFn,\n            maskInputFn,\n            maskTextFn,\n            slimDOM: slimDOMOptions,\n            dataURLOptions,\n            recordCanvas,\n            inlineImages,\n            onSerialize: (n) => {\n                if (isSerializedIframe(n, mirror)) {\n                    iframeManager.addIframe(n);\n                }\n                if (isSerializedStylesheet(n, mirror)) {\n                    stylesheetManager.trackLinkElement(n);\n                }\n                if (hasShadowRoot(n)) {\n                    shadowDomManager.addShadowRoot(n.shadowRoot, document);\n                }\n            },\n            onIframeLoad: (iframe, childSn) => {\n                iframeManager.attachIframe(iframe, childSn);\n                shadowDomManager.observeAttachShadow(iframe);\n            },\n            onStylesheetLoad: (linkEl, childSn) => {\n                stylesheetManager.attachLinkElement(linkEl, childSn);\n            },\n            keepIframeSrcFn,\n        });\n        if (!node) {\n            return console.warn('Failed to snapshot the document');\n        }\n        wrappedEmit({\n            type: EventType.FullSnapshot,\n            data: {\n                node,\n                initialOffset: getWindowScroll(window),\n            },\n        });\n        mutationBuffers.forEach((buf) => buf.unlock());\n        if (document.adoptedStyleSheets && document.adoptedStyleSheets.length > 0)\n            stylesheetManager.adoptStyleSheets(document.adoptedStyleSheets, mirror.getId(document));\n    };\n    _takeFullSnapshot = takeFullSnapshot;\n    try {\n        const handlers = [];\n        const observe = (doc) => {\n            return callbackWrapper(initObservers)({\n                onMutation,\n                mutationCb: wrappedMutationEmit,\n                mousemoveCb: (positions, source) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source,\n                        positions,\n                    },\n                }),\n                mouseInteractionCb: (d) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.MouseInteraction,\n                        ...d,\n                    },\n                }),\n                scrollCb: wrappedScrollEmit,\n                viewportResizeCb: (d) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.ViewportResize,\n                        ...d,\n                    },\n                }),\n                inputCb: (v) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.Input,\n                        ...v,\n                    },\n                }),\n                mediaInteractionCb: (p) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.MediaInteraction,\n                        ...p,\n                    },\n                }),\n                styleSheetRuleCb: (r) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.StyleSheetRule,\n                        ...r,\n                    },\n                }),\n                styleDeclarationCb: (r) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.StyleDeclaration,\n                        ...r,\n                    },\n                }),\n                canvasMutationCb: wrappedCanvasMutationEmit,\n                fontCb: (p) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.Font,\n                        ...p,\n                    },\n                }),\n                selectionCb: (p) => {\n                    wrappedEmit({\n                        type: EventType.IncrementalSnapshot,\n                        data: {\n                            source: IncrementalSource.Selection,\n                            ...p,\n                        },\n                    });\n                },\n                customElementCb: (c) => {\n                    wrappedEmit({\n                        type: EventType.IncrementalSnapshot,\n                        data: {\n                            source: IncrementalSource.CustomElement,\n                            ...c,\n                        },\n                    });\n                },\n                blockClass,\n                ignoreClass,\n                ignoreSelector,\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n                maskInputOptions,\n                inlineStylesheet,\n                sampling,\n                recordCanvas,\n                inlineImages,\n                userTriggeredOnInput,\n                collectFonts,\n                doc,\n                maskAttributeFn,\n                maskInputFn,\n                maskTextFn,\n                keepIframeSrcFn,\n                blockSelector,\n                unblockSelector,\n                slimDOMOptions,\n                dataURLOptions,\n                mirror,\n                iframeManager,\n                stylesheetManager,\n                shadowDomManager,\n                processedNodeManager,\n                canvasManager,\n                ignoreCSSAttributes,\n                plugins: _optionalChain([plugins\n, 'optionalAccess', _5 => _5.filter, 'call', _6 => _6((p) => p.observer)\n, 'optionalAccess', _7 => _7.map, 'call', _8 => _8((p) => ({\n                    observer: p.observer,\n                    options: p.options,\n                    callback: (payload) => wrappedEmit({\n                        type: EventType.Plugin,\n                        data: {\n                            plugin: p.name,\n                            payload,\n                        },\n                    }),\n                }))]) || [],\n            }, {});\n        };\n        iframeManager.addLoadListener((iframeEl) => {\n            try {\n                handlers.push(observe(iframeEl.contentDocument));\n            }\n            catch (error) {\n                console.warn(error);\n            }\n        });\n        const init = () => {\n            takeFullSnapshot();\n            handlers.push(observe(document));\n        };\n        if (document.readyState === 'interactive' ||\n            document.readyState === 'complete') {\n            init();\n        }\n        else {\n            handlers.push(on('DOMContentLoaded', () => {\n                wrappedEmit({\n                    type: EventType.DomContentLoaded,\n                    data: {},\n                });\n                if (recordAfter === 'DOMContentLoaded')\n                    init();\n            }));\n            handlers.push(on('load', () => {\n                wrappedEmit({\n                    type: EventType.Load,\n                    data: {},\n                });\n                if (recordAfter === 'load')\n                    init();\n            }, window));\n        }\n        return () => {\n            handlers.forEach((h) => h());\n            processedNodeManager.destroy();\n            _takeFullSnapshot = undefined;\n            unregisterErrorHandler();\n        };\n    }\n    catch (error) {\n        console.warn(error);\n    }\n}\nfunction takeFullSnapshot(isCheckout) {\n    if (!_takeFullSnapshot) {\n        throw new Error('please take full snapshot after start recording');\n    }\n    _takeFullSnapshot(isCheckout);\n}\nrecord.mirror = mirror;\nrecord.takeFullSnapshot = takeFullSnapshot;\nfunction _getCanvasManager(getCanvasManagerFn, options) {\n    try {\n        return getCanvasManagerFn\n            ? getCanvasManagerFn(options)\n            : new CanvasManagerNoop();\n    }\n    catch (e2) {\n        console.warn('Unable to initialize CanvasManager');\n        return new CanvasManagerNoop();\n    }\n}\n\nconst ReplayEventTypeIncrementalSnapshot = 3;\nconst ReplayEventTypeCustom = 5;\n\n/**\n * Converts a timestamp to ms, if it was in s, or keeps it as ms.\n */\nfunction timestampToMs(timestamp) {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp : timestamp * 1000;\n}\n\n/**\n * Converts a timestamp to s, if it was in ms, or keeps it as s.\n */\nfunction timestampToS(timestamp) {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Add a breadcrumb event to replay.\n */\nfunction addBreadcrumbEvent(replay, breadcrumb) {\n  if (breadcrumb.category === 'sentry.transaction') {\n    return;\n  }\n\n  if (['ui.click', 'ui.input'].includes(breadcrumb.category )) {\n    replay.triggerUserActivity();\n  } else {\n    replay.checkAndHandleExpiredSession();\n  }\n\n  replay.addUpdate(() => {\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      // TODO: We were converting from ms to seconds for breadcrumbs, spans,\n      // but maybe we should just keep them as milliseconds\n      timestamp: (breadcrumb.timestamp || 0) * 1000,\n      data: {\n        tag: 'breadcrumb',\n        // normalize to max. 10 depth and 1_000 properties per object\n        payload: normalize(breadcrumb, 10, 1000),\n      },\n    });\n\n    // Do not flush after console log messages\n    return breadcrumb.category === 'console';\n  });\n}\n\nconst INTERACTIVE_SELECTOR = 'button,a';\n\n/** Get the closest interactive parent element, or else return the given element. */\nfunction getClosestInteractive(element) {\n  const closestInteractive = element.closest(INTERACTIVE_SELECTOR);\n  return closestInteractive || element;\n}\n\n/**\n * For clicks, we check if the target is inside of a button or link\n * If so, we use this as the target instead\n * This is useful because if you click on the image in <button><img></button>,\n * The target will be the image, not the button, which we don't want here\n */\nfunction getClickTargetNode(event) {\n  const target = getTargetNode(event);\n\n  if (!target || !(target instanceof Element)) {\n    return target;\n  }\n\n  return getClosestInteractive(target);\n}\n\n/** Get the event target node. */\nfunction getTargetNode(event) {\n  if (isEventWithTarget(event)) {\n    return event.target ;\n  }\n\n  return event;\n}\n\nfunction isEventWithTarget(event) {\n  return typeof event === 'object' && !!event && 'target' in event;\n}\n\nlet handlers;\n\n/**\n * Register a handler to be called when `window.open()` is called.\n * Returns a cleanup function.\n */\nfunction onWindowOpen(cb) {\n  // Ensure to only register this once\n  if (!handlers) {\n    handlers = [];\n    monkeyPatchWindowOpen();\n  }\n\n  handlers.push(cb);\n\n  return () => {\n    const pos = handlers ? handlers.indexOf(cb) : -1;\n    if (pos > -1) {\n      (handlers ).splice(pos, 1);\n    }\n  };\n}\n\nfunction monkeyPatchWindowOpen() {\n  fill(WINDOW, 'open', function (originalWindowOpen) {\n    return function (...args) {\n      if (handlers) {\n        try {\n          handlers.forEach(handler => handler());\n        } catch (e) {\n          // ignore errors in here\n        }\n      }\n\n      return originalWindowOpen.apply(WINDOW, args);\n    };\n  });\n}\n\n/** Handle a click. */\nfunction handleClick(clickDetector, clickBreadcrumb, node) {\n  clickDetector.handleClick(clickBreadcrumb, node);\n}\n\n/** A click detector class that can be used to detect slow or rage clicks on elements. */\nclass ClickDetector  {\n  // protected for testing\n\n   constructor(\n    replay,\n    slowClickConfig,\n    // Just for easier testing\n    _addBreadcrumbEvent = addBreadcrumbEvent,\n  ) {\n    this._lastMutation = 0;\n    this._lastScroll = 0;\n    this._clicks = [];\n\n    // We want everything in s, but options are in ms\n    this._timeout = slowClickConfig.timeout / 1000;\n    this._threshold = slowClickConfig.threshold / 1000;\n    this._scollTimeout = slowClickConfig.scrollTimeout / 1000;\n    this._replay = replay;\n    this._ignoreSelector = slowClickConfig.ignoreSelector;\n    this._addBreadcrumbEvent = _addBreadcrumbEvent;\n  }\n\n  /** Register click detection handlers on mutation or scroll. */\n   addListeners() {\n    const cleanupWindowOpen = onWindowOpen(() => {\n      // Treat window.open as mutation\n      this._lastMutation = nowInSeconds();\n    });\n\n    this._teardown = () => {\n      cleanupWindowOpen();\n\n      this._clicks = [];\n      this._lastMutation = 0;\n      this._lastScroll = 0;\n    };\n  }\n\n  /** Clean up listeners. */\n   removeListeners() {\n    if (this._teardown) {\n      this._teardown();\n    }\n\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n  }\n\n  /** @inheritDoc */\n   handleClick(breadcrumb, node) {\n    if (ignoreElement(node, this._ignoreSelector) || !isClickBreadcrumb(breadcrumb)) {\n      return;\n    }\n\n    const newClick = {\n      timestamp: timestampToS(breadcrumb.timestamp),\n      clickBreadcrumb: breadcrumb,\n      // Set this to 0 so we know it originates from the click breadcrumb\n      clickCount: 0,\n      node,\n    };\n\n    // If there was a click in the last 1s on the same element, ignore it - only keep a single reference per second\n    if (\n      this._clicks.some(click => click.node === newClick.node && Math.abs(click.timestamp - newClick.timestamp) < 1)\n    ) {\n      return;\n    }\n\n    this._clicks.push(newClick);\n\n    // If this is the first new click, set a timeout to check for multi clicks\n    if (this._clicks.length === 1) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** @inheritDoc */\n   registerMutation(timestamp = Date.now()) {\n    this._lastMutation = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n   registerScroll(timestamp = Date.now()) {\n    this._lastScroll = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n   registerClick(element) {\n    const node = getClosestInteractive(element);\n    this._handleMultiClick(node );\n  }\n\n  /** Count multiple clicks on elements. */\n   _handleMultiClick(node) {\n    this._getClicks(node).forEach(click => {\n      click.clickCount++;\n    });\n  }\n\n  /** Get all pending clicks for a given node. */\n   _getClicks(node) {\n    return this._clicks.filter(click => click.node === node);\n  }\n\n  /** Check the clicks that happened. */\n   _checkClicks() {\n    const timedOutClicks = [];\n\n    const now = nowInSeconds();\n\n    this._clicks.forEach(click => {\n      if (!click.mutationAfter && this._lastMutation) {\n        click.mutationAfter = click.timestamp <= this._lastMutation ? this._lastMutation - click.timestamp : undefined;\n      }\n      if (!click.scrollAfter && this._lastScroll) {\n        click.scrollAfter = click.timestamp <= this._lastScroll ? this._lastScroll - click.timestamp : undefined;\n      }\n\n      // All of these are in seconds!\n      if (click.timestamp + this._timeout <= now) {\n        timedOutClicks.push(click);\n      }\n    });\n\n    // Remove \"old\" clicks\n    for (const click of timedOutClicks) {\n      const pos = this._clicks.indexOf(click);\n\n      if (pos > -1) {\n        this._generateBreadcrumbs(click);\n        this._clicks.splice(pos, 1);\n      }\n    }\n\n    // Trigger new check, unless no clicks left\n    if (this._clicks.length) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** Generate matching breadcrumb(s) for the click. */\n   _generateBreadcrumbs(click) {\n    const replay = this._replay;\n    const hadScroll = click.scrollAfter && click.scrollAfter <= this._scollTimeout;\n    const hadMutation = click.mutationAfter && click.mutationAfter <= this._threshold;\n\n    const isSlowClick = !hadScroll && !hadMutation;\n    const { clickCount, clickBreadcrumb } = click;\n\n    // Slow click\n    if (isSlowClick) {\n      // If `mutationAfter` is set, it means a mutation happened after the threshold, but before the timeout\n      // If not, it means we just timed out without scroll & mutation\n      const timeAfterClickMs = Math.min(click.mutationAfter || this._timeout, this._timeout) * 1000;\n      const endReason = timeAfterClickMs < this._timeout * 1000 ? 'mutation' : 'timeout';\n\n      const breadcrumb = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.slowClickDetected',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          timeAfterClickMs,\n          endReason,\n          // If clickCount === 0, it means multiClick was not correctly captured here\n          // - we still want to send 1 in this case\n          clickCount: clickCount || 1,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n      return;\n    }\n\n    // Multi click\n    if (clickCount > 1) {\n      const breadcrumb = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.multiClick',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          clickCount,\n          metric: true,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n    }\n  }\n\n  /** Schedule to check current clicks. */\n   _scheduleCheckClicks() {\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n\n    this._checkClickTimeout = setTimeout$2(() => this._checkClicks(), 1000);\n  }\n}\n\nconst SLOW_CLICK_TAGS = ['A', 'BUTTON', 'INPUT'];\n\n/** exported for tests only */\nfunction ignoreElement(node, ignoreSelector) {\n  if (!SLOW_CLICK_TAGS.includes(node.tagName)) {\n    return true;\n  }\n\n  // If <input> tag, we only want to consider input[type='submit'] & input[type='button']\n  if (node.tagName === 'INPUT' && !['submit', 'button'].includes(node.getAttribute('type') || '')) {\n    return true;\n  }\n\n  // If <a> tag, detect special variants that may not lead to an action\n  // If target !== _self, we may open the link somewhere else, which would lead to no action\n  // Also, when downloading a file, we may not leave the page, but still not trigger an action\n  if (\n    node.tagName === 'A' &&\n    (node.hasAttribute('download') || (node.hasAttribute('target') && node.getAttribute('target') !== '_self'))\n  ) {\n    return true;\n  }\n\n  if (ignoreSelector && node.matches(ignoreSelector)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isClickBreadcrumb(breadcrumb) {\n  return !!(breadcrumb.data && typeof breadcrumb.data.nodeId === 'number' && breadcrumb.timestamp);\n}\n\n// This is good enough for us, and is easier to test/mock than `timestampInSeconds`\nfunction nowInSeconds() {\n  return Date.now() / 1000;\n}\n\n/** Update the click detector based on a recording event of rrweb. */\nfunction updateClickDetectorForRecordingEvent(clickDetector, event) {\n  try {\n    // note: We only consider incremental snapshots here\n    // This means that any full snapshot is ignored for mutation detection - the reason is that we simply cannot know if a mutation happened here.\n    // E.g. think that we are buffering, an error happens and we take a full snapshot because we switched to session mode -\n    // in this scenario, we would not know if a dead click happened because of the error, which is a key dead click scenario.\n    // Instead, by ignoring full snapshots, we have the risk that we generate a false positive\n    // (if a mutation _did_ happen but was \"swallowed\" by the full snapshot)\n    // But this should be more unlikely as we'd generally capture the incremental snapshot right away\n\n    if (!isIncrementalEvent(event)) {\n      return;\n    }\n\n    const { source } = event.data;\n    if (source === IncrementalSource.Mutation) {\n      clickDetector.registerMutation(event.timestamp);\n    }\n\n    if (source === IncrementalSource.Scroll) {\n      clickDetector.registerScroll(event.timestamp);\n    }\n\n    if (isIncrementalMouseInteraction(event)) {\n      const { type, id } = event.data;\n      const node = record.mirror.getNode(id);\n\n      if (node instanceof HTMLElement && type === MouseInteractions.Click) {\n        clickDetector.registerClick(node);\n      }\n    }\n  } catch (e) {\n    // ignore errors here, e.g. if accessing something that does not exist\n  }\n}\n\nfunction isIncrementalEvent(event) {\n  return event.type === ReplayEventTypeIncrementalSnapshot;\n}\n\nfunction isIncrementalMouseInteraction(\n  event,\n) {\n  return event.data.source === IncrementalSource.MouseInteraction;\n}\n\n/**\n * Create a breadcrumb for a replay.\n */\nfunction createBreadcrumb(\n  breadcrumb,\n) {\n  return {\n    timestamp: Date.now() / 1000,\n    type: 'default',\n    ...breadcrumb,\n  };\n}\n\nvar NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\n})(NodeType || (NodeType = {}));\n\n// Note that these are the serialized attributes and not attributes directly on\n// the DOM Node. Attributes we are interested in:\nconst ATTRIBUTES_TO_RECORD = new Set([\n  'id',\n  'class',\n  'aria-label',\n  'role',\n  'name',\n  'alt',\n  'title',\n  'data-test-id',\n  'data-testid',\n  'disabled',\n  'aria-disabled',\n  'data-sentry-component',\n]);\n\n/**\n * Inclusion list of attributes that we want to record from the DOM element\n */\nfunction getAttributesToRecord(attributes) {\n  const obj = {};\n  if (!attributes['data-sentry-component'] && attributes['data-sentry-element']) {\n    attributes['data-sentry-component'] = attributes['data-sentry-element'];\n  }\n  for (const key in attributes) {\n    if (ATTRIBUTES_TO_RECORD.has(key)) {\n      let normalizedKey = key;\n\n      if (key === 'data-testid' || key === 'data-test-id') {\n        normalizedKey = 'testId';\n      }\n\n      obj[normalizedKey] = attributes[key];\n    }\n  }\n\n  return obj;\n}\n\nconst handleDomListener = (\n  replay,\n) => {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleDom(handlerData);\n\n    if (!result) {\n      return;\n    }\n\n    const isClick = handlerData.name === 'click';\n    const event = isClick ? (handlerData.event ) : undefined;\n    // Ignore clicks if ctrl/alt/meta/shift keys are held down as they alter behavior of clicks (e.g. open in new tab)\n    if (\n      isClick &&\n      replay.clickDetector &&\n      event &&\n      event.target &&\n      !event.altKey &&\n      !event.metaKey &&\n      !event.ctrlKey &&\n      !event.shiftKey\n    ) {\n      handleClick(\n        replay.clickDetector,\n        result ,\n        getClickTargetNode(handlerData.event ) ,\n      );\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n};\n\n/** Get the base DOM breadcrumb. */\nfunction getBaseDomBreadcrumb(target, message) {\n  const nodeId = record.mirror.getId(target);\n  const node = nodeId && record.mirror.getNode(nodeId);\n  const meta = node && record.mirror.getMeta(node);\n  const element = meta && isElement(meta) ? meta : null;\n\n  return {\n    message,\n    data: element\n      ? {\n          nodeId,\n          node: {\n            id: nodeId,\n            tagName: element.tagName,\n            textContent: Array.from(element.childNodes)\n              .map((node) => node.type === NodeType.Text && node.textContent)\n              .filter(Boolean) // filter out empty values\n              .map(text => (text ).trim())\n              .join(''),\n            attributes: getAttributesToRecord(element.attributes),\n          },\n        }\n      : {},\n  };\n}\n\n/**\n * An event handler to react to DOM events.\n * Exported for tests.\n */\nfunction handleDom(handlerData) {\n  const { target, message } = getDomTarget(handlerData);\n\n  return createBreadcrumb({\n    category: `ui.${handlerData.name}`,\n    ...getBaseDomBreadcrumb(target, message),\n  });\n}\n\nfunction getDomTarget(handlerData) {\n  const isClick = handlerData.name === 'click';\n\n  let message;\n  let target = null;\n\n  // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n  try {\n    target = isClick ? getClickTargetNode(handlerData.event ) : getTargetNode(handlerData.event );\n    message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  } catch (e) {\n    message = '<unknown>';\n  }\n\n  return { target, message };\n}\n\nfunction isElement(node) {\n  return node.type === NodeType.Element;\n}\n\n/** Handle keyboard events & create breadcrumbs. */\nfunction handleKeyboardEvent(replay, event) {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  // Update user activity, but do not restart recording as it can create\n  // noisy/low-value replays (e.g. user comes back from idle, hits alt-tab, new\n  // session with a single \"keydown\" breadcrumb is created)\n  replay.updateUserActivity();\n\n  const breadcrumb = getKeyboardBreadcrumb(event);\n\n  if (!breadcrumb) {\n    return;\n  }\n\n  addBreadcrumbEvent(replay, breadcrumb);\n}\n\n/** exported only for tests */\nfunction getKeyboardBreadcrumb(event) {\n  const { metaKey, shiftKey, ctrlKey, altKey, key, target } = event;\n\n  // never capture for input fields\n  if (!target || isInputElement(target ) || !key) {\n    return null;\n  }\n\n  // Note: We do not consider shift here, as that means \"uppercase\"\n  const hasModifierKey = metaKey || ctrlKey || altKey;\n  const isCharacterKey = key.length === 1; // other keys like Escape, Tab, etc have a longer length\n\n  // Do not capture breadcrumb if only a word key is pressed\n  // This could leak e.g. user input\n  if (!hasModifierKey && isCharacterKey) {\n    return null;\n  }\n\n  const message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  const baseBreadcrumb = getBaseDomBreadcrumb(target , message);\n\n  return createBreadcrumb({\n    category: 'ui.keyDown',\n    message,\n    data: {\n      ...baseBreadcrumb.data,\n      metaKey,\n      shiftKey,\n      ctrlKey,\n      altKey,\n      key,\n    },\n  });\n}\n\nfunction isInputElement(target) {\n  return target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable;\n}\n\n// Map entryType -> function to normalize data for event\nconst ENTRY_TYPES\n\n = {\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  resource: createResourceEntry,\n  paint: createPaintEntry,\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  navigation: createNavigationEntry,\n};\n\n/**\n * Handler creater for web vitals\n */\nfunction webVitalHandler(\n  getter,\n  replay,\n) {\n  return ({ metric }) => void replay.replayPerformanceEntries.push(getter(metric));\n}\n\n/**\n * Create replay performance entries from the browser performance entries.\n */\nfunction createPerformanceEntries(\n  entries,\n) {\n  return entries.map(createPerformanceEntry).filter(Boolean) ;\n}\n\nfunction createPerformanceEntry(entry) {\n  if (!ENTRY_TYPES[entry.entryType]) {\n    return null;\n  }\n\n  return ENTRY_TYPES[entry.entryType](entry);\n}\n\nfunction getAbsoluteTime(time) {\n  // browserPerformanceTimeOrigin can be undefined if `performance` or\n  // `performance.now` doesn't exist, but this is already checked by this integration\n  return ((browserPerformanceTimeOrigin || WINDOW.performance.timeOrigin) + time) / 1000;\n}\n\nfunction createPaintEntry(entry) {\n  const { duration, entryType, name, startTime } = entry;\n\n  const start = getAbsoluteTime(startTime);\n  return {\n    type: entryType,\n    name,\n    start,\n    end: start + duration,\n    data: undefined,\n  };\n}\n\nfunction createNavigationEntry(entry) {\n  const {\n    entryType,\n    name,\n    decodedBodySize,\n    duration,\n    domComplete,\n    encodedBodySize,\n    domContentLoadedEventStart,\n    domContentLoadedEventEnd,\n    domInteractive,\n    loadEventStart,\n    loadEventEnd,\n    redirectCount,\n    startTime,\n    transferSize,\n    type,\n  } = entry;\n\n  // Ignore entries with no duration, they do not seem to be useful and cause dupes\n  if (duration === 0) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${type}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(domComplete),\n    name,\n    data: {\n      size: transferSize,\n      decodedBodySize,\n      encodedBodySize,\n      duration,\n      domInteractive,\n      domContentLoadedEventStart,\n      domContentLoadedEventEnd,\n      loadEventStart,\n      loadEventEnd,\n      domComplete,\n      redirectCount,\n    },\n  };\n}\n\nfunction createResourceEntry(\n  entry,\n) {\n  const {\n    entryType,\n    initiatorType,\n    name,\n    responseEnd,\n    startTime,\n    decodedBodySize,\n    encodedBodySize,\n    responseStatus,\n    transferSize,\n  } = entry;\n\n  // Core SDK handles these\n  if (['fetch', 'xmlhttprequest'].includes(initiatorType)) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${initiatorType}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(responseEnd),\n    name,\n    data: {\n      size: transferSize,\n      statusCode: responseStatus,\n      decodedBodySize,\n      encodedBodySize,\n    },\n  };\n}\n\n/**\n * Add a LCP event to the replay based on a LCP metric.\n */\nfunction getLargestContentfulPaint(metric) {\n  const lastEntry = metric.entries[metric.entries.length - 1] ;\n  const node = lastEntry ? lastEntry.element : undefined;\n  return getWebVital(metric, 'largest-contentful-paint', node);\n}\n\n/**\n * Add a CLS event to the replay based on a CLS metric.\n */\nfunction getCumulativeLayoutShift(metric) {\n  // get first node that shifts\n  const firstEntry = metric.entries[0] ;\n  const node = firstEntry ? (firstEntry.sources ? firstEntry.sources[0].node : undefined) : undefined;\n  return getWebVital(metric, 'cumulative-layout-shift', node);\n}\n\n/**\n * Add a FID event to the replay based on a FID metric.\n */\nfunction getFirstInputDelay(metric) {\n  const lastEntry = metric.entries[metric.entries.length - 1] ;\n  const node = lastEntry ? lastEntry.target : undefined;\n  return getWebVital(metric, 'first-input-delay', node);\n}\n\n/**\n * Add an INP event to the replay based on an INP metric.\n */\nfunction getInteractionToNextPaint(metric) {\n  const lastEntry = metric.entries[metric.entries.length - 1] ;\n  const node = lastEntry ? lastEntry.target : undefined;\n  return getWebVital(metric, 'interaction-to-next-paint', node);\n}\n\n/**\n * Add an web vital event to the replay based on the web vital metric.\n */\nfunction getWebVital(\n  metric,\n  name,\n  node,\n) {\n  const value = metric.value;\n  const rating = metric.rating;\n\n  const end = getAbsoluteTime(value);\n\n  const data = {\n    type: 'web-vital',\n    name,\n    start: end,\n    end,\n    data: {\n      value,\n      size: value,\n      rating,\n      nodeId: node ? record.mirror.getId(node) : undefined,\n    },\n  };\n\n  return data;\n}\n\n/**\n * Sets up a PerformanceObserver to listen to all performance entry types.\n * Returns a callback to stop observing.\n */\nfunction setupPerformanceObserver(replay) {\n  function addPerformanceEntry(entry) {\n    // It is possible for entries to come up multiple times\n    if (!replay.performanceEntries.includes(entry)) {\n      replay.performanceEntries.push(entry);\n    }\n  }\n\n  function onEntries({ entries }) {\n    entries.forEach(addPerformanceEntry);\n  }\n\n  const clearCallbacks = [];\n\n  (['navigation', 'paint', 'resource'] ).forEach(type => {\n    clearCallbacks.push(addPerformanceInstrumentationHandler(type, onEntries));\n  });\n\n  clearCallbacks.push(\n    addLcpInstrumentationHandler(webVitalHandler(getLargestContentfulPaint, replay)),\n    addClsInstrumentationHandler(webVitalHandler(getCumulativeLayoutShift, replay)),\n    addFidInstrumentationHandler(webVitalHandler(getFirstInputDelay, replay)),\n    addInpInstrumentationHandler(webVitalHandler(getInteractionToNextPaint, replay)),\n  );\n\n  // A callback to cleanup all handlers\n  return () => {\n    clearCallbacks.forEach(clearCallback => clearCallback());\n  };\n}\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nconst r = `var t=Uint8Array,n=Uint16Array,r=Int32Array,e=new t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),a=new t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=function(t,e){for(var i=new n(31),a=0;a<31;++a)i[a]=e+=1<<t[a-1];var s=new r(i[30]);for(a=1;a<30;++a)for(var o=i[a];o<i[a+1];++o)s[o]=o-i[a]<<5|a;return{b:i,r:s}},o=s(e,2),f=o.b,h=o.r;f[28]=258,h[258]=28;for(var l=s(i,0).r,u=new n(32768),c=0;c<32768;++c){var v=(43690&c)>>1|(21845&c)<<1;v=(61680&(v=(52428&v)>>2|(13107&v)<<2))>>4|(3855&v)<<4,u[c]=((65280&v)>>8|(255&v)<<8)>>1}var d=function(t,r,e){for(var i=t.length,a=0,s=new n(r);a<i;++a)t[a]&&++s[t[a]-1];var o,f=new n(r);for(a=1;a<r;++a)f[a]=f[a-1]+s[a-1]<<1;if(e){o=new n(1<<r);var h=15-r;for(a=0;a<i;++a)if(t[a])for(var l=a<<4|t[a],c=r-t[a],v=f[t[a]-1]++<<c,d=v|(1<<c)-1;v<=d;++v)o[u[v]>>h]=l}else for(o=new n(i),a=0;a<i;++a)t[a]&&(o[a]=u[f[t[a]-1]++]>>15-t[a]);return o},g=new t(288);for(c=0;c<144;++c)g[c]=8;for(c=144;c<256;++c)g[c]=9;for(c=256;c<280;++c)g[c]=7;for(c=280;c<288;++c)g[c]=8;var w=new t(32);for(c=0;c<32;++c)w[c]=5;var p=d(g,9,0),y=d(w,5,0),m=function(t){return(t+7)/8|0},b=function(n,r,e){return(null==r||r<0)&&(r=0),(null==e||e>n.length)&&(e=n.length),new t(n.subarray(r,e))},M=[\"unexpected EOF\",\"invalid block type\",\"invalid length/literal\",\"invalid distance\",\"stream finished\",\"no stream handler\",,\"no callback\",\"invalid UTF-8 data\",\"extra field too long\",\"date not in range 1980-2099\",\"filename too long\",\"stream finishing\",\"invalid zip data\"],E=function(t,n,r){var e=new Error(n||M[t]);if(e.code=t,Error.captureStackTrace&&Error.captureStackTrace(e,E),!r)throw e;return e},z=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8},A=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8,t[e+2]|=r>>16},_=function(r,e){for(var i=[],a=0;a<r.length;++a)r[a]&&i.push({s:a,f:r[a]});var s=i.length,o=i.slice();if(!s)return{t:F,l:0};if(1==s){var f=new t(i[0].s+1);return f[i[0].s]=1,{t:f,l:1}}i.sort((function(t,n){return t.f-n.f})),i.push({s:-1,f:25001});var h=i[0],l=i[1],u=0,c=1,v=2;for(i[0]={s:-1,f:h.f+l.f,l:h,r:l};c!=s-1;)h=i[i[u].f<i[v].f?u++:v++],l=i[u!=c&&i[u].f<i[v].f?u++:v++],i[c++]={s:-1,f:h.f+l.f,l:h,r:l};var d=o[0].s;for(a=1;a<s;++a)o[a].s>d&&(d=o[a].s);var g=new n(d+1),w=x(i[c-1],g,0);if(w>e){a=0;var p=0,y=w-e,m=1<<y;for(o.sort((function(t,n){return g[n.s]-g[t.s]||t.f-n.f}));a<s;++a){var b=o[a].s;if(!(g[b]>e))break;p+=m-(1<<w-g[b]),g[b]=e}for(p>>=y;p>0;){var M=o[a].s;g[M]<e?p-=1<<e-g[M]++-1:++a}for(;a>=0&&p;--a){var E=o[a].s;g[E]==e&&(--g[E],++p)}w=e}return{t:new t(g),l:w}},x=function(t,n,r){return-1==t.s?Math.max(x(t.l,n,r+1),x(t.r,n,r+1)):n[t.s]=r},D=function(t){for(var r=t.length;r&&!t[--r];);for(var e=new n(++r),i=0,a=t[0],s=1,o=function(t){e[i++]=t},f=1;f<=r;++f)if(t[f]==a&&f!=r)++s;else{if(!a&&s>2){for(;s>138;s-=138)o(32754);s>2&&(o(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(o(a),--s;s>6;s-=6)o(8304);s>2&&(o(s-3<<5|8208),s=0)}for(;s--;)o(a);s=1,a=t[f]}return{c:e.subarray(0,i),n:r}},T=function(t,n){for(var r=0,e=0;e<n.length;++e)r+=t[e]*n[e];return r},k=function(t,n,r){var e=r.length,i=m(n+2);t[i]=255&e,t[i+1]=e>>8,t[i+2]=255^t[i],t[i+3]=255^t[i+1];for(var a=0;a<e;++a)t[i+a+4]=r[a];return 8*(i+4+e)},C=function(t,r,s,o,f,h,l,u,c,v,m){z(r,m++,s),++f[256];for(var b=_(f,15),M=b.t,E=b.l,x=_(h,15),C=x.t,U=x.l,F=D(M),I=F.c,S=F.n,L=D(C),O=L.c,j=L.n,q=new n(19),B=0;B<I.length;++B)++q[31&I[B]];for(B=0;B<O.length;++B)++q[31&O[B]];for(var G=_(q,7),H=G.t,J=G.l,K=19;K>4&&!H[a[K-1]];--K);var N,P,Q,R,V=v+5<<3,W=T(f,g)+T(h,w)+l,X=T(f,M)+T(h,C)+l+14+3*K+T(q,H)+2*q[16]+3*q[17]+7*q[18];if(c>=0&&V<=W&&V<=X)return k(r,m,t.subarray(c,c+v));if(z(r,m,1+(X<W)),m+=2,X<W){N=d(M,E,0),P=M,Q=d(C,U,0),R=C;var Y=d(H,J,0);z(r,m,S-257),z(r,m+5,j-1),z(r,m+10,K-4),m+=14;for(B=0;B<K;++B)z(r,m+3*B,H[a[B]]);m+=3*K;for(var Z=[I,O],$=0;$<2;++$){var tt=Z[$];for(B=0;B<tt.length;++B){var nt=31&tt[B];z(r,m,Y[nt]),m+=H[nt],nt>15&&(z(r,m,tt[B]>>5&127),m+=tt[B]>>12)}}}else N=p,P=g,Q=y,R=w;for(B=0;B<u;++B){var rt=o[B];if(rt>255){A(r,m,N[(nt=rt>>18&31)+257]),m+=P[nt+257],nt>7&&(z(r,m,rt>>23&31),m+=e[nt]);var et=31&rt;A(r,m,Q[et]),m+=R[et],et>3&&(A(r,m,rt>>5&8191),m+=i[et])}else A(r,m,N[rt]),m+=P[rt]}return A(r,m,N[256]),m+P[256]},U=new r([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),F=new t(0),I=function(){for(var t=new Int32Array(256),n=0;n<256;++n){for(var r=n,e=9;--e;)r=(1&r&&-306674912)^r>>>1;t[n]=r}return t}(),S=function(){var t=-1;return{p:function(n){for(var r=t,e=0;e<n.length;++e)r=I[255&r^n[e]]^r>>>8;t=r},d:function(){return~t}}},L=function(){var t=1,n=0;return{p:function(r){for(var e=t,i=n,a=0|r.length,s=0;s!=a;){for(var o=Math.min(s+2655,a);s<o;++s)i+=e+=r[s];e=(65535&e)+15*(e>>16),i=(65535&i)+15*(i>>16)}t=e,n=i},d:function(){return(255&(t%=65521))<<24|(65280&t)<<8|(255&(n%=65521))<<8|n>>8}}},O=function(a,s,o,f,u){if(!u&&(u={l:1},s.dictionary)){var c=s.dictionary.subarray(-32768),v=new t(c.length+a.length);v.set(c),v.set(a,c.length),a=v,u.w=c.length}return function(a,s,o,f,u,c){var v=c.z||a.length,d=new t(f+v+5*(1+Math.ceil(v/7e3))+u),g=d.subarray(f,d.length-u),w=c.l,p=7&(c.r||0);if(s){p&&(g[0]=c.r>>3);for(var y=U[s-1],M=y>>13,E=8191&y,z=(1<<o)-1,A=c.p||new n(32768),_=c.h||new n(z+1),x=Math.ceil(o/3),D=2*x,T=function(t){return(a[t]^a[t+1]<<x^a[t+2]<<D)&z},F=new r(25e3),I=new n(288),S=new n(32),L=0,O=0,j=c.i||0,q=0,B=c.w||0,G=0;j+2<v;++j){var H=T(j),J=32767&j,K=_[H];if(A[J]=K,_[H]=J,B<=j){var N=v-j;if((L>7e3||q>24576)&&(N>423||!w)){p=C(a,g,0,F,I,S,O,q,G,j-G,p),q=L=O=0,G=j;for(var P=0;P<286;++P)I[P]=0;for(P=0;P<30;++P)S[P]=0}var Q=2,R=0,V=E,W=J-K&32767;if(N>2&&H==T(j-W))for(var X=Math.min(M,N)-1,Y=Math.min(32767,j),Z=Math.min(258,N);W<=Y&&--V&&J!=K;){if(a[j+Q]==a[j+Q-W]){for(var $=0;$<Z&&a[j+$]==a[j+$-W];++$);if($>Q){if(Q=$,R=W,$>X)break;var tt=Math.min(W,$-2),nt=0;for(P=0;P<tt;++P){var rt=j-W+P&32767,et=rt-A[rt]&32767;et>nt&&(nt=et,K=rt)}}}W+=(J=K)-(K=A[J])&32767}if(R){F[q++]=268435456|h[Q]<<18|l[R];var it=31&h[Q],at=31&l[R];O+=e[it]+i[at],++I[257+it],++S[at],B=j+Q,++L}else F[q++]=a[j],++I[a[j]]}}for(j=Math.max(j,B);j<v;++j)F[q++]=a[j],++I[a[j]];p=C(a,g,w,F,I,S,O,q,G,j-G,p),w||(c.r=7&p|g[p/8|0]<<3,p-=7,c.h=_,c.p=A,c.i=j,c.w=B)}else{for(j=c.w||0;j<v+w;j+=65535){var st=j+65535;st>=v&&(g[p/8|0]=w,st=v),p=k(g,p+1,a.subarray(j,st))}c.i=v}return b(d,0,f+m(p)+u)}(a,null==s.level?6:s.level,null==s.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(a.length)))):12+s.mem,o,f,u)},j=function(t,n,r){for(;r;++n)t[n]=r,r>>>=8},q=function(t,n){var r=n.filename;if(t[0]=31,t[1]=139,t[2]=8,t[8]=n.level<2?4:9==n.level?2:0,t[9]=3,0!=n.mtime&&j(t,4,Math.floor(new Date(n.mtime||Date.now())/1e3)),r){t[3]=8;for(var e=0;e<=r.length;++e)t[e+10]=r.charCodeAt(e)}},B=function(t){return 10+(t.filename?t.filename.length+1:0)},G=function(){function n(n,r){if(\"function\"==typeof n&&(r=n,n={}),this.ondata=r,this.o=n||{},this.s={l:0,i:32768,w:32768,z:32768},this.b=new t(98304),this.o.dictionary){var e=this.o.dictionary.subarray(-32768);this.b.set(e,32768-e.length),this.s.i=32768-e.length}}return n.prototype.p=function(t,n){this.ondata(O(t,this.o,0,0,this.s),n)},n.prototype.push=function(n,r){this.ondata||E(5),this.s.l&&E(4);var e=n.length+this.s.z;if(e>this.b.length){if(e>2*this.b.length-32768){var i=new t(-32768&e);i.set(this.b.subarray(0,this.s.z)),this.b=i}var a=this.b.length-this.s.z;a&&(this.b.set(n.subarray(0,a),this.s.z),this.s.z=this.b.length,this.p(this.b,!1)),this.b.set(this.b.subarray(-32768)),this.b.set(n.subarray(a),32768),this.s.z=n.length-a+32768,this.s.i=32766,this.s.w=32768}else this.b.set(n,this.s.z),this.s.z+=n.length;this.s.l=1&r,(this.s.z>this.s.w+8191||r)&&(this.p(this.b,r||!1),this.s.w=this.s.i,this.s.i-=2)},n}();var H=function(){function t(t,n){this.c=L(),this.v=1,G.call(this,t,n)}return t.prototype.push=function(t,n){this.c.p(t),G.prototype.push.call(this,t,n)},t.prototype.p=function(t,n){var r=O(t,this.o,this.v&&(this.o.dictionary?6:2),n&&4,this.s);this.v&&(function(t,n){var r=n.level,e=0==r?0:r<6?1:9==r?3:2;if(t[0]=120,t[1]=e<<6|(n.dictionary&&32),t[1]|=31-(t[0]<<8|t[1])%31,n.dictionary){var i=L();i.p(n.dictionary),j(t,2,i.d())}}(r,this.o),this.v=0),n&&j(r,r.length-4,this.c.d()),this.ondata(r,n)},t}(),J=\"undefined\"!=typeof TextEncoder&&new TextEncoder,K=\"undefined\"!=typeof TextDecoder&&new TextDecoder;try{K.decode(F,{stream:!0})}catch(t){}var N=function(){function t(t){this.ondata=t}return t.prototype.push=function(t,n){this.ondata||E(5),this.d&&E(4),this.ondata(P(t),this.d=n||!1)},t}();function P(n,r){if(r){for(var e=new t(n.length),i=0;i<n.length;++i)e[i]=n.charCodeAt(i);return e}if(J)return J.encode(n);var a=n.length,s=new t(n.length+(n.length>>1)),o=0,f=function(t){s[o++]=t};for(i=0;i<a;++i){if(o+5>s.length){var h=new t(o+8+(a-i<<1));h.set(s),s=h}var l=n.charCodeAt(i);l<128||r?f(l):l<2048?(f(192|l>>6),f(128|63&l)):l>55295&&l<57344?(f(240|(l=65536+(1047552&l)|1023&n.charCodeAt(++i))>>18),f(128|l>>12&63),f(128|l>>6&63),f(128|63&l)):(f(224|l>>12),f(128|l>>6&63),f(128|63&l))}return b(s,0,o)}function Q(t){return function(t,n){n||(n={});var r=S(),e=t.length;r.p(t);var i=O(t,n,B(n),8),a=i.length;return q(i,n),j(i,a-8,r.d()),j(i,a-4,e),i}(P(t))}const R=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error(\"Adding invalid event\");const n=this._hasEvents?\",\":\"\";this.stream.push(n+t),this._hasEvents=!0}finish(){this.stream.push(\"]\",!0);const t=function(t){let n=0;for(let r=0,e=t.length;r<e;r++)n+=t[r].length;const r=new Uint8Array(n);for(let n=0,e=0,i=t.length;n<i;n++){const i=t[n];r.set(i,e),e+=i.length}return r}(this._deflatedData);return this._init(),t}_init(){this._hasEvents=!1,this._deflatedData=[],this.deflate=new H,this.deflate.ondata=(t,n)=>{this._deflatedData.push(t)},this.stream=new N(((t,n)=>{this.deflate.push(t,n)})),this.stream.push(\"[\")}},V={clear:()=>{R.clear()},addEvent:t=>R.addEvent(t),finish:()=>R.finish(),compress:t=>Q(t)};addEventListener(\"message\",(function(t){const n=t.data.method,r=t.data.id,e=t.data.arg;if(n in V&&\"function\"==typeof V[n])try{const t=V[n](e);postMessage({id:r,method:n,success:!0,response:t})}catch(t){postMessage({id:r,method:n,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:\"init\",success:!0,response:void 0});`;\n\nfunction e(){const e=new Blob([r]);return URL.createObjectURL(e)}\n\n/**\n * Log a message in debug mode, and add a breadcrumb when _experiment.traceInternals is enabled.\n */\nfunction logInfo(message, shouldAddBreadcrumb) {\n  if (!DEBUG_BUILD) {\n    return;\n  }\n\n  logger.info(message);\n\n  if (shouldAddBreadcrumb) {\n    addLogBreadcrumb(message);\n  }\n}\n\n/**\n * Log a message, and add a breadcrumb in the next tick.\n * This is necessary when the breadcrumb may be added before the replay is initialized.\n */\nfunction logInfoNextTick(message, shouldAddBreadcrumb) {\n  if (!DEBUG_BUILD) {\n    return;\n  }\n\n  logger.info(message);\n\n  if (shouldAddBreadcrumb) {\n    // Wait a tick here to avoid race conditions for some initial logs\n    // which may be added before replay is initialized\n    setTimeout$2(() => {\n      addLogBreadcrumb(message);\n    }, 0);\n  }\n}\n\nfunction addLogBreadcrumb(message) {\n  addBreadcrumb(\n    {\n      category: 'console',\n      data: {\n        logger: 'replay',\n      },\n      level: 'info',\n      message,\n    },\n    { level: 'info' },\n  );\n}\n\n/** This error indicates that the event buffer size exceeded the limit.. */\nclass EventBufferSizeExceededError extends Error {\n   constructor() {\n    super(`Event buffer exceeded maximum size of ${REPLAY_MAX_EVENT_BUFFER_SIZE}.`);\n  }\n}\n\n/**\n * A basic event buffer that does not do any compression.\n * Used as fallback if the compression worker cannot be loaded or is disabled.\n */\nclass EventBufferArray  {\n  /** All the events that are buffered to be sent. */\n\n  /** @inheritdoc */\n\n   constructor() {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n   get hasEvents() {\n    return this.events.length > 0;\n  }\n\n  /** @inheritdoc */\n   get type() {\n    return 'sync';\n  }\n\n  /** @inheritdoc */\n   destroy() {\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n   async addEvent(event) {\n    const eventSize = JSON.stringify(event).length;\n    this._totalSize += eventSize;\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      throw new EventBufferSizeExceededError();\n    }\n\n    this.events.push(event);\n  }\n\n  /** @inheritdoc */\n   finish() {\n    return new Promise(resolve => {\n      // Make a copy of the events array reference and immediately clear the\n      // events member so that we do not lose new events while uploading\n      // attachment.\n      const eventsRet = this.events;\n      this.clear();\n      resolve(JSON.stringify(eventsRet));\n    });\n  }\n\n  /** @inheritdoc */\n   clear() {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n   getEarliestTimestamp() {\n    const timestamp = this.events.map(event => event.timestamp).sort()[0];\n\n    if (!timestamp) {\n      return null;\n    }\n\n    return timestampToMs(timestamp);\n  }\n}\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nclass WorkerHandler {\n\n   constructor(worker) {\n    this._worker = worker;\n    this._id = 0;\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n   ensureReady() {\n    // Ensure we only check once\n    if (this._ensureReadyPromise) {\n      return this._ensureReadyPromise;\n    }\n\n    this._ensureReadyPromise = new Promise((resolve, reject) => {\n      this._worker.addEventListener(\n        'message',\n        ({ data }) => {\n          if ((data ).success) {\n            resolve();\n          } else {\n            reject();\n          }\n        },\n        { once: true },\n      );\n\n      this._worker.addEventListener(\n        'error',\n        error => {\n          reject(error);\n        },\n        { once: true },\n      );\n    });\n\n    return this._ensureReadyPromise;\n  }\n\n  /**\n   * Destroy the worker.\n   */\n   destroy() {\n    logInfo('[Replay] Destroying compression worker');\n    this._worker.terminate();\n  }\n\n  /**\n   * Post message to worker and wait for response before resolving promise.\n   */\n   postMessage(method, arg) {\n    const id = this._getAndIncrementId();\n\n    return new Promise((resolve, reject) => {\n      const listener = ({ data }) => {\n        const response = data ;\n        if (response.method !== method) {\n          return;\n        }\n\n        // There can be multiple listeners for a single method, the id ensures\n        // that the response matches the caller.\n        if (response.id !== id) {\n          return;\n        }\n\n        // At this point, we'll always want to remove listener regardless of result status\n        this._worker.removeEventListener('message', listener);\n\n        if (!response.success) {\n          // TODO: Do some error handling, not sure what\n          DEBUG_BUILD && logger.error('[Replay]', response.response);\n\n          reject(new Error('Error in compression worker'));\n          return;\n        }\n\n        resolve(response.response );\n      };\n\n      // Note: we can't use `once` option because it's possible it needs to\n      // listen to multiple messages\n      this._worker.addEventListener('message', listener);\n      this._worker.postMessage({ id, method, arg });\n    });\n  }\n\n  /** Get the current ID and increment it for the next call. */\n   _getAndIncrementId() {\n    return this._id++;\n  }\n}\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nclass EventBufferCompressionWorker  {\n  /** @inheritdoc */\n\n   constructor(worker) {\n    this._worker = new WorkerHandler(worker);\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n   get hasEvents() {\n    return !!this._earliestTimestamp;\n  }\n\n  /** @inheritdoc */\n   get type() {\n    return 'worker';\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n   ensureReady() {\n    return this._worker.ensureReady();\n  }\n\n  /**\n   * Destroy the event buffer.\n   */\n   destroy() {\n    this._worker.destroy();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfuly received and processed by worker.\n   */\n   addEvent(event) {\n    const timestamp = timestampToMs(event.timestamp);\n    if (!this._earliestTimestamp || timestamp < this._earliestTimestamp) {\n      this._earliestTimestamp = timestamp;\n    }\n\n    const data = JSON.stringify(event);\n    this._totalSize += data.length;\n\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      return Promise.reject(new EventBufferSizeExceededError());\n    }\n\n    return this._sendEventToWorker(data);\n  }\n\n  /**\n   * Finish the event buffer and return the compressed data.\n   */\n   finish() {\n    return this._finishRequest();\n  }\n\n  /** @inheritdoc */\n   clear() {\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n\n    // We do not wait on this, as we assume the order of messages is consistent for the worker\n    this._worker.postMessage('clear').then(null, e => {\n      DEBUG_BUILD && logger.warn('[Replay] Sending \"clear\" message to worker failed', e);\n    });\n  }\n\n  /** @inheritdoc */\n   getEarliestTimestamp() {\n    return this._earliestTimestamp;\n  }\n\n  /**\n   * Send the event to the worker.\n   */\n   _sendEventToWorker(data) {\n    return this._worker.postMessage('addEvent', data);\n  }\n\n  /**\n   * Finish the request and return the compressed data from the worker.\n   */\n   async _finishRequest() {\n    const response = await this._worker.postMessage('finish');\n\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n\n    return response;\n  }\n}\n\n/**\n * This proxy will try to use the compression worker, and fall back to use the simple buffer if an error occurs there.\n * This can happen e.g. if the worker cannot be loaded.\n * Exported only for testing.\n */\nclass EventBufferProxy  {\n\n   constructor(worker) {\n    this._fallback = new EventBufferArray();\n    this._compression = new EventBufferCompressionWorker(worker);\n    this._used = this._fallback;\n\n    this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded();\n  }\n\n  /** @inheritdoc */\n   get type() {\n    return this._used.type;\n  }\n\n  /** @inheritDoc */\n   get hasEvents() {\n    return this._used.hasEvents;\n  }\n\n  /** @inheritdoc */\n   get hasCheckout() {\n    return this._used.hasCheckout;\n  }\n  /** @inheritdoc */\n   set hasCheckout(value) {\n    this._used.hasCheckout = value;\n  }\n\n  /** @inheritDoc */\n   destroy() {\n    this._fallback.destroy();\n    this._compression.destroy();\n  }\n\n  /** @inheritdoc */\n   clear() {\n    return this._used.clear();\n  }\n\n  /** @inheritdoc */\n   getEarliestTimestamp() {\n    return this._used.getEarliestTimestamp();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfully added.\n   */\n   addEvent(event) {\n    return this._used.addEvent(event);\n  }\n\n  /** @inheritDoc */\n   async finish() {\n    // Ensure the worker is loaded, so the sent event is compressed\n    await this.ensureWorkerIsLoaded();\n\n    return this._used.finish();\n  }\n\n  /** Ensure the worker has loaded. */\n   ensureWorkerIsLoaded() {\n    return this._ensureWorkerIsLoadedPromise;\n  }\n\n  /** Actually check if the worker has been loaded. */\n   async _ensureWorkerIsLoaded() {\n    try {\n      await this._compression.ensureReady();\n    } catch (error) {\n      // If the worker fails to load, we fall back to the simple buffer.\n      // Nothing more to do from our side here\n      logInfo('[Replay] Failed to load the compression worker, falling back to simple buffer');\n      return;\n    }\n\n    // Now we need to switch over the array buffer to the compression worker\n    await this._switchToCompressionWorker();\n  }\n\n  /** Switch the used buffer to the compression worker. */\n   async _switchToCompressionWorker() {\n    const { events, hasCheckout } = this._fallback;\n\n    const addEventPromises = [];\n    for (const event of events) {\n      addEventPromises.push(this._compression.addEvent(event));\n    }\n\n    this._compression.hasCheckout = hasCheckout;\n\n    // We switch over to the new buffer immediately - any further events will be added\n    // after the previously buffered ones\n    this._used = this._compression;\n\n    // Wait for original events to be re-added before resolving\n    try {\n      await Promise.all(addEventPromises);\n    } catch (error) {\n      DEBUG_BUILD && logger.warn('[Replay] Failed to add events when switching buffers.', error);\n    }\n  }\n}\n\n/**\n * Create an event buffer for replays.\n */\nfunction createEventBuffer({\n  useCompression,\n  workerUrl: customWorkerUrl,\n}) {\n  if (\n    useCompression &&\n    // eslint-disable-next-line no-restricted-globals\n    window.Worker\n  ) {\n    const worker = _loadWorker(customWorkerUrl);\n\n    if (worker) {\n      return worker;\n    }\n  }\n\n  logInfo('[Replay] Using simple buffer');\n  return new EventBufferArray();\n}\n\nfunction _loadWorker(customWorkerUrl) {\n  try {\n    const workerUrl = customWorkerUrl || _getWorkerUrl();\n\n    if (!workerUrl) {\n      return;\n    }\n\n    logInfo(`[Replay] Using compression worker${customWorkerUrl ? ` from ${customWorkerUrl}` : ''}`);\n    const worker = new Worker(workerUrl);\n    return new EventBufferProxy(worker);\n  } catch (error) {\n    logInfo('[Replay] Failed to create compression worker');\n    // Fall back to use simple event buffer array\n  }\n}\n\nfunction _getWorkerUrl() {\n  if (typeof __SENTRY_EXCLUDE_REPLAY_WORKER__ === 'undefined' || !__SENTRY_EXCLUDE_REPLAY_WORKER__) {\n    return e();\n  }\n\n  return '';\n}\n\n/** If sessionStorage is available. */\nfunction hasSessionStorage() {\n  try {\n    // This can throw, e.g. when being accessed in a sandboxed iframe\n    return 'sessionStorage' in WINDOW && !!WINDOW.sessionStorage;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Removes the session from Session Storage and unsets session in replay instance\n */\nfunction clearSession(replay) {\n  deleteSession();\n  replay.session = undefined;\n}\n\n/**\n * Deletes a session from storage\n */\nfunction deleteSession() {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.removeItem(REPLAY_SESSION_KEY);\n  } catch (e) {\n    // Ignore potential SecurityError exceptions\n  }\n}\n\n/**\n * Given a sample rate, returns true if replay should be sampled.\n *\n * 1.0 = 100% sampling\n * 0.0 = 0% sampling\n */\nfunction isSampled(sampleRate) {\n  if (sampleRate === undefined) {\n    return false;\n  }\n\n  // Math.random() returns a number in range of 0 to 1 (inclusive of 0, but not 1)\n  return Math.random() < sampleRate;\n}\n\n/**\n * Get a session with defaults & applied sampling.\n */\nfunction makeSession(session) {\n  const now = Date.now();\n  const id = session.id || uuid4();\n  // Note that this means we cannot set a started/lastActivity of `0`, but this should not be relevant outside of tests.\n  const started = session.started || now;\n  const lastActivity = session.lastActivity || now;\n  const segmentId = session.segmentId || 0;\n  const sampled = session.sampled;\n  const previousSessionId = session.previousSessionId;\n\n  return {\n    id,\n    started,\n    lastActivity,\n    segmentId,\n    sampled,\n    previousSessionId,\n  };\n}\n\n/**\n * Save a session to session storage.\n */\nfunction saveSession(session) {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.setItem(REPLAY_SESSION_KEY, JSON.stringify(session));\n  } catch (e) {\n    // Ignore potential SecurityError exceptions\n  }\n}\n\n/**\n * Get the sampled status for a session based on sample rates & current sampled status.\n */\nfunction getSessionSampleType(sessionSampleRate, allowBuffering) {\n  return isSampled(sessionSampleRate) ? 'session' : allowBuffering ? 'buffer' : false;\n}\n\n/**\n * Create a new session, which in its current implementation is a Sentry event\n * that all replays will be saved to as attachments. Currently, we only expect\n * one of these Sentry events per \"replay session\".\n */\nfunction createSession(\n  { sessionSampleRate, allowBuffering, stickySession = false },\n  { previousSessionId } = {},\n) {\n  const sampled = getSessionSampleType(sessionSampleRate, allowBuffering);\n  const session = makeSession({\n    sampled,\n    previousSessionId,\n  });\n\n  if (stickySession) {\n    saveSession(session);\n  }\n\n  return session;\n}\n\n/**\n * Fetches a session from storage\n */\nfunction fetchSession(traceInternals) {\n  if (!hasSessionStorage()) {\n    return null;\n  }\n\n  try {\n    // This can throw if cookies are disabled\n    const sessionStringFromStorage = WINDOW.sessionStorage.getItem(REPLAY_SESSION_KEY);\n\n    if (!sessionStringFromStorage) {\n      return null;\n    }\n\n    const sessionObj = JSON.parse(sessionStringFromStorage) ;\n\n    logInfoNextTick('[Replay] Loading existing session', traceInternals);\n\n    return makeSession(sessionObj);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Given an initial timestamp and an expiry duration, checks to see if current\n * time should be considered as expired.\n */\nfunction isExpired(\n  initialTime,\n  expiry,\n  targetTime = +new Date(),\n) {\n  // Always expired if < 0\n  if (initialTime === null || expiry === undefined || expiry < 0) {\n    return true;\n  }\n\n  // Never expires if == 0\n  if (expiry === 0) {\n    return false;\n  }\n\n  return initialTime + expiry <= targetTime;\n}\n\n/**\n * Checks to see if session is expired\n */\nfunction isSessionExpired(\n  session,\n  {\n    maxReplayDuration,\n    sessionIdleExpire,\n    targetTime = Date.now(),\n  },\n) {\n  return (\n    // First, check that maximum session length has not been exceeded\n    isExpired(session.started, maxReplayDuration, targetTime) ||\n    // check that the idle timeout has not been exceeded (i.e. user has\n    // performed an action within the last `sessionIdleExpire` ms)\n    isExpired(session.lastActivity, sessionIdleExpire, targetTime)\n  );\n}\n\n/** If the session should be refreshed or not. */\nfunction shouldRefreshSession(\n  session,\n  { sessionIdleExpire, maxReplayDuration },\n) {\n  // If not expired, all good, just keep the session\n  if (!isSessionExpired(session, { sessionIdleExpire, maxReplayDuration })) {\n    return false;\n  }\n\n  // If we are buffering & haven't ever flushed yet, always continue\n  if (session.sampled === 'buffer' && session.segmentId === 0) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Get or create a session, when initializing the replay.\n * Returns a session that may be unsampled.\n */\nfunction loadOrCreateSession(\n  {\n    traceInternals,\n    sessionIdleExpire,\n    maxReplayDuration,\n    previousSessionId,\n  }\n\n,\n  sessionOptions,\n) {\n  const existingSession = sessionOptions.stickySession && fetchSession(traceInternals);\n\n  // No session exists yet, just create a new one\n  if (!existingSession) {\n    logInfoNextTick('[Replay] Creating new session', traceInternals);\n    return createSession(sessionOptions, { previousSessionId });\n  }\n\n  if (!shouldRefreshSession(existingSession, { sessionIdleExpire, maxReplayDuration })) {\n    return existingSession;\n  }\n\n  logInfoNextTick('[Replay] Session in sessionStorage is expired, creating new one...');\n  return createSession(sessionOptions, { previousSessionId: existingSession.id });\n}\n\nfunction isCustomEvent(event) {\n  return event.type === EventType.Custom;\n}\n\n/**\n * Add an event to the event buffer.\n * In contrast to `addEvent`, this does not return a promise & does not wait for the adding of the event to succeed/fail.\n * Instead this returns `true` if we tried to add the event, else false.\n * It returns `false` e.g. if we are paused, disabled, or out of the max replay duration.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nfunction addEventSync(replay, event, isCheckout) {\n  if (!shouldAddEvent(replay, event)) {\n    return false;\n  }\n\n  // This should never reject\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  _addEvent(replay, event, isCheckout);\n\n  return true;\n}\n\n/**\n * Add an event to the event buffer.\n * Resolves to `null` if no event was added, else to `void`.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nfunction addEvent(\n  replay,\n  event,\n  isCheckout,\n) {\n  if (!shouldAddEvent(replay, event)) {\n    return Promise.resolve(null);\n  }\n\n  return _addEvent(replay, event, isCheckout);\n}\n\nasync function _addEvent(\n  replay,\n  event,\n  isCheckout,\n) {\n  if (!replay.eventBuffer) {\n    return null;\n  }\n\n  try {\n    if (isCheckout && replay.recordingMode === 'buffer') {\n      replay.eventBuffer.clear();\n    }\n\n    if (isCheckout) {\n      replay.eventBuffer.hasCheckout = true;\n    }\n\n    const replayOptions = replay.getOptions();\n\n    const eventAfterPossibleCallback = maybeApplyCallback(event, replayOptions.beforeAddRecordingEvent);\n\n    if (!eventAfterPossibleCallback) {\n      return;\n    }\n\n    return await replay.eventBuffer.addEvent(eventAfterPossibleCallback);\n  } catch (error) {\n    const reason = error && error instanceof EventBufferSizeExceededError ? 'addEventSizeExceeded' : 'addEvent';\n\n    DEBUG_BUILD && logger.error(error);\n    await replay.stop({ reason });\n\n    const client = getClient();\n\n    if (client) {\n      client.recordDroppedEvent('internal_sdk_error', 'replay');\n    }\n  }\n}\n\n/** Exported only for tests. */\nfunction shouldAddEvent(replay, event) {\n  if (!replay.eventBuffer || replay.isPaused() || !replay.isEnabled()) {\n    return false;\n  }\n\n  const timestampInMs = timestampToMs(event.timestamp);\n\n  // Throw out events that happen more than 5 minutes ago. This can happen if\n  // page has been left open and idle for a long period of time and user\n  // comes back to trigger a new session. The performance entries rely on\n  // `performance.timeOrigin`, which is when the page first opened.\n  if (timestampInMs + replay.timeouts.sessionIdlePause < Date.now()) {\n    return false;\n  }\n\n  // Throw out events that are +60min from the initial timestamp\n  if (timestampInMs > replay.getContext().initialTimestamp + replay.getOptions().maxReplayDuration) {\n    logInfoNextTick(\n      `[Replay] Skipping event with timestamp ${timestampInMs} because it is after maxReplayDuration`,\n      replay.getOptions()._experiments.traceInternals,\n    );\n    return false;\n  }\n\n  return true;\n}\n\nfunction maybeApplyCallback(\n  event,\n  callback,\n) {\n  try {\n    if (typeof callback === 'function' && isCustomEvent(event)) {\n      return callback(event);\n    }\n  } catch (error) {\n    DEBUG_BUILD &&\n      logger.error('[Replay] An error occured in the `beforeAddRecordingEvent` callback, skipping the event...', error);\n    return null;\n  }\n\n  return event;\n}\n\n/** If the event is an error event */\nfunction isErrorEvent(event) {\n  return !event.type;\n}\n\n/** If the event is a transaction event */\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\n/** If the event is an replay event */\nfunction isReplayEvent(event) {\n  return event.type === 'replay_event';\n}\n\n/** If the event is a feedback event */\nfunction isFeedbackEvent(event) {\n  return event.type === 'feedback';\n}\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nfunction handleAfterSendEvent(replay) {\n  return (event, sendResponse) => {\n    if (!replay.isEnabled() || (!isErrorEvent(event) && !isTransactionEvent(event))) {\n      return;\n    }\n\n    const statusCode = sendResponse && sendResponse.statusCode;\n\n    // We only want to do stuff on successful error sending, otherwise you get error replays without errors attached\n    // If not using the base transport, we allow `undefined` response (as a custom transport may not implement this correctly yet)\n    // If we do use the base transport, we skip if we encountered an non-OK status code\n    if (!statusCode || statusCode < 200 || statusCode >= 300) {\n      return;\n    }\n\n    if (isTransactionEvent(event)) {\n      handleTransactionEvent(replay, event);\n      return;\n    }\n\n    handleErrorEvent(replay, event);\n  };\n}\n\nfunction handleTransactionEvent(replay, event) {\n  const replayContext = replay.getContext();\n\n  // Collect traceIds in _context regardless of `recordingMode`\n  // In error mode, _context gets cleared on every checkout\n  // We limit to max. 100 transactions linked\n  if (event.contexts && event.contexts.trace && event.contexts.trace.trace_id && replayContext.traceIds.size < 100) {\n    replayContext.traceIds.add(event.contexts.trace.trace_id );\n  }\n}\n\nfunction handleErrorEvent(replay, event) {\n  const replayContext = replay.getContext();\n\n  // Add error to list of errorIds of replay. This is ok to do even if not\n  // sampled because context will get reset at next checkout.\n  // XXX: There is also a race condition where it's possible to capture an\n  // error to Sentry before Replay SDK has loaded, but response returns after\n  // it was loaded, and this gets called.\n  // We limit to max. 100 errors linked\n  if (event.event_id && replayContext.errorIds.size < 100) {\n    replayContext.errorIds.add(event.event_id);\n  }\n\n  // If error event is tagged with replay id it means it was sampled (when in buffer mode)\n  // Need to be very careful that this does not cause an infinite loop\n  if (replay.recordingMode !== 'buffer' || !event.tags || !event.tags.replayId) {\n    return;\n  }\n\n  const { beforeErrorSampling } = replay.getOptions();\n  if (typeof beforeErrorSampling === 'function' && !beforeErrorSampling(event)) {\n    return;\n  }\n\n  setTimeout$2(() => {\n    // Capture current event buffer as new replay\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.sendBufferedReplayOrFlush();\n  });\n}\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nfunction handleBeforeSendEvent(replay) {\n  return (event) => {\n    if (!replay.isEnabled() || !isErrorEvent(event)) {\n      return;\n    }\n\n    handleHydrationError(replay, event);\n  };\n}\n\nfunction handleHydrationError(replay, event) {\n  const exceptionValue =\n    event.exception && event.exception.values && event.exception.values[0] && event.exception.values[0].value;\n  if (typeof exceptionValue !== 'string') {\n    return;\n  }\n\n  if (\n    // Only matches errors in production builds of react-dom\n    // Example https://reactjs.org/docs/error-decoder.html?invariant=423\n    // With newer React versions, the messages changed to a different website https://react.dev/errors/418\n    exceptionValue.match(\n      /(reactjs\\.org\\/docs\\/error-decoder\\.html\\?invariant=|react\\.dev\\/errors\\/)(418|419|422|423|425)/,\n    ) ||\n    // Development builds of react-dom\n    // Error 1: Hydration failed because the initial UI does not match what was rendered on the server.\n    // Error 2: Text content does not match server-rendered HTML. Warning: Text content did not match.\n    exceptionValue.match(/(does not match server-rendered HTML|Hydration failed because)/i)\n  ) {\n    const breadcrumb = createBreadcrumb({\n      category: 'replay.hydrate-error',\n    });\n    addBreadcrumbEvent(replay, breadcrumb);\n  }\n}\n\n/**\n * Handle breadcrumbs that Sentry captures, and make sure to capture relevant breadcrumbs to Replay as well.\n */\nfunction handleBreadcrumbs(replay) {\n  const client = getClient();\n\n  if (!client) {\n    return;\n  }\n\n  client.on('beforeAddBreadcrumb', breadcrumb => beforeAddBreadcrumb(replay, breadcrumb));\n}\n\nfunction beforeAddBreadcrumb(replay, breadcrumb) {\n  if (!replay.isEnabled() || !isBreadcrumbWithCategory(breadcrumb)) {\n    return;\n  }\n\n  const result = normalizeBreadcrumb(breadcrumb);\n  if (result) {\n    addBreadcrumbEvent(replay, result);\n  }\n}\n\n/** Exported only for tests. */\nfunction normalizeBreadcrumb(breadcrumb) {\n  if (\n    !isBreadcrumbWithCategory(breadcrumb) ||\n    [\n      // fetch & xhr are handled separately,in handleNetworkBreadcrumbs\n      'fetch',\n      'xhr',\n      // These two are breadcrumbs for emitted sentry events, we don't care about them\n      'sentry.event',\n      'sentry.transaction',\n    ].includes(breadcrumb.category) ||\n    // We capture UI breadcrumbs separately\n    breadcrumb.category.startsWith('ui.')\n  ) {\n    return null;\n  }\n\n  if (breadcrumb.category === 'console') {\n    return normalizeConsoleBreadcrumb(breadcrumb);\n  }\n\n  return createBreadcrumb(breadcrumb);\n}\n\n/** exported for tests only */\nfunction normalizeConsoleBreadcrumb(\n  breadcrumb,\n) {\n  const args = breadcrumb.data && breadcrumb.data.arguments;\n\n  if (!Array.isArray(args) || args.length === 0) {\n    return createBreadcrumb(breadcrumb);\n  }\n\n  let isTruncated = false;\n\n  // Avoid giant args captures\n  const normalizedArgs = args.map(arg => {\n    if (!arg) {\n      return arg;\n    }\n    if (typeof arg === 'string') {\n      if (arg.length > CONSOLE_ARG_MAX_SIZE) {\n        isTruncated = true;\n        return `${arg.slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n      }\n\n      return arg;\n    }\n    if (typeof arg === 'object') {\n      try {\n        const normalizedArg = normalize(arg, 7);\n        const stringified = JSON.stringify(normalizedArg);\n        if (stringified.length > CONSOLE_ARG_MAX_SIZE) {\n          isTruncated = true;\n          // We use the pretty printed JSON string here as a base\n          return `${JSON.stringify(normalizedArg, null, 2).slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n        }\n        return normalizedArg;\n      } catch (e) {\n        // fall back to default\n      }\n    }\n\n    return arg;\n  });\n\n  return createBreadcrumb({\n    ...breadcrumb,\n    data: {\n      ...breadcrumb.data,\n      arguments: normalizedArgs,\n      ...(isTruncated ? { _meta: { warnings: ['CONSOLE_ARG_TRUNCATED'] } } : {}),\n    },\n  });\n}\n\nfunction isBreadcrumbWithCategory(breadcrumb) {\n  return !!breadcrumb.category;\n}\n\n/**\n * Returns true if we think the given event is an error originating inside of rrweb.\n */\nfunction isRrwebError(event, hint) {\n  if (event.type || !event.exception || !event.exception.values || !event.exception.values.length) {\n    return false;\n  }\n\n  // @ts-expect-error this may be set by rrweb when it finds errors\n  if (hint.originalException && hint.originalException.__rrweb__) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Add a feedback breadcrumb event to replay.\n */\nfunction addFeedbackBreadcrumb(replay, event) {\n  replay.triggerUserActivity();\n  replay.addUpdate(() => {\n    if (!event.timestamp) {\n      // Ignore events that don't have timestamps (this shouldn't happen, more of a typing issue)\n      // Return true here so that we don't flush\n      return true;\n    }\n\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: event.timestamp * 1000,\n      data: {\n        tag: 'breadcrumb',\n        payload: {\n          timestamp: event.timestamp,\n          type: 'default',\n          category: 'sentry.feedback',\n          data: {\n            feedbackId: event.event_id,\n          },\n        },\n      },\n    } );\n\n    return false;\n  });\n}\n\n/**\n * Determine if event should be sampled (only applies in buffer mode).\n * When an event is captured by `hanldleGlobalEvent`, when in buffer mode\n * we determine if we want to sample the error or not.\n */\nfunction shouldSampleForBufferEvent(replay, event) {\n  if (replay.recordingMode !== 'buffer') {\n    return false;\n  }\n\n  // ignore this error because otherwise we could loop indefinitely with\n  // trying to capture replay and failing\n  if (event.message === UNABLE_TO_SEND_REPLAY) {\n    return false;\n  }\n\n  // Require the event to be an error event & to have an exception\n  if (!event.exception || event.type) {\n    return false;\n  }\n\n  return isSampled(replay.getOptions().errorSampleRate);\n}\n\n/**\n * Returns a listener to be added to `addEventProcessor(listener)`.\n */\nfunction handleGlobalEventListener(replay) {\n  return Object.assign(\n    (event, hint) => {\n      // Do nothing if replay has been disabled\n      if (!replay.isEnabled()) {\n        return event;\n      }\n\n      if (isReplayEvent(event)) {\n        // Replays have separate set of breadcrumbs, do not include breadcrumbs\n        // from core SDK\n        delete event.breadcrumbs;\n        return event;\n      }\n\n      // We only want to handle errors, transactions, and feedbacks, nothing else\n      if (!isErrorEvent(event) && !isTransactionEvent(event) && !isFeedbackEvent(event)) {\n        return event;\n      }\n\n      // Ensure we do not add replay_id if the session is expired\n      const isSessionActive = replay.checkAndHandleExpiredSession();\n      if (!isSessionActive) {\n        return event;\n      }\n\n      if (isFeedbackEvent(event)) {\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        replay.flush();\n        event.contexts.feedback.replay_id = replay.getSessionId();\n        // Add a replay breadcrumb for this piece of feedback\n        addFeedbackBreadcrumb(replay, event);\n        return event;\n      }\n\n      // Unless `captureExceptions` is enabled, we want to ignore errors coming from rrweb\n      // As there can be a bunch of stuff going wrong in internals there, that we don't want to bubble up to users\n      if (isRrwebError(event, hint) && !replay.getOptions()._experiments.captureExceptions) {\n        DEBUG_BUILD && logger.log('[Replay] Ignoring error from rrweb internals', event);\n        return null;\n      }\n\n      // When in buffer mode, we decide to sample here.\n      // Later, in `handleAfterSendEvent`, if the replayId is set, we know that we sampled\n      // And convert the buffer session to a full session\n      const isErrorEventSampled = shouldSampleForBufferEvent(replay, event);\n\n      // Tag errors if it has been sampled in buffer mode, or if it is session mode\n      // Only tag transactions if in session mode\n      const shouldTagReplayId = isErrorEventSampled || replay.recordingMode === 'session';\n\n      if (shouldTagReplayId) {\n        event.tags = { ...event.tags, replayId: replay.getSessionId() };\n      }\n\n      return event;\n    },\n    { id: 'Replay' },\n  );\n}\n\n/**\n * Create a \"span\" for each performance entry.\n */\nfunction createPerformanceSpans(\n  replay,\n  entries,\n) {\n  return entries.map(({ type, start, end, name, data }) => {\n    const response = replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: start,\n      data: {\n        tag: 'performanceSpan',\n        payload: {\n          op: type,\n          description: name,\n          startTimestamp: start,\n          endTimestamp: end,\n          data,\n        },\n      },\n    });\n\n    // If response is a string, it means its either THROTTLED or SKIPPED\n    return typeof response === 'string' ? Promise.resolve(null) : response;\n  });\n}\n\nfunction handleHistory(handlerData) {\n  const { from, to } = handlerData;\n\n  const now = Date.now() / 1000;\n\n  return {\n    type: 'navigation.push',\n    start: now,\n    end: now,\n    name: to,\n    data: {\n      previous: from,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addHistoryInstrumentationHandler(listener)`.\n */\nfunction handleHistorySpanListener(replay) {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleHistory(handlerData);\n\n    if (result === null) {\n      return;\n    }\n\n    // Need to collect visited URLs\n    replay.getContext().urls.push(result.name);\n    replay.triggerUserActivity();\n\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning false to flush\n      return false;\n    });\n  };\n}\n\n/**\n * Check whether a given request URL should be filtered out. This is so we\n * don't log Sentry ingest requests.\n */\nfunction shouldFilterRequest(replay, url) {\n  // If we enabled the `traceInternals` experiment, we want to trace everything\n  if (DEBUG_BUILD && replay.getOptions()._experiments.traceInternals) {\n    return false;\n  }\n\n  return isSentryRequestUrl(url, getClient());\n}\n\n/** Add a performance entry breadcrumb */\nfunction addNetworkBreadcrumb(\n  replay,\n  result,\n) {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  if (result === null) {\n    return;\n  }\n\n  if (shouldFilterRequest(replay, result.name)) {\n    return;\n  }\n\n  replay.addUpdate(() => {\n    createPerformanceSpans(replay, [result]);\n    // Returning true will cause `addUpdate` to not flush\n    // We do not want network requests to cause a flush. This will prevent\n    // recurring/polling requests from keeping the replay session alive.\n    return true;\n  });\n}\n\n/** Get the size of a body. */\nfunction getBodySize(body) {\n  if (!body) {\n    return undefined;\n  }\n\n  const textEncoder = new TextEncoder();\n\n  try {\n    if (typeof body === 'string') {\n      return textEncoder.encode(body).length;\n    }\n\n    if (body instanceof URLSearchParams) {\n      return textEncoder.encode(body.toString()).length;\n    }\n\n    if (body instanceof FormData) {\n      const formDataStr = _serializeFormData(body);\n      return textEncoder.encode(formDataStr).length;\n    }\n\n    if (body instanceof Blob) {\n      return body.size;\n    }\n\n    if (body instanceof ArrayBuffer) {\n      return body.byteLength;\n    }\n\n    // Currently unhandled types: ArrayBufferView, ReadableStream\n  } catch (e) {\n    // just return undefined\n  }\n\n  return undefined;\n}\n\n/** Convert a Content-Length header to number/undefined.  */\nfunction parseContentLengthHeader(header) {\n  if (!header) {\n    return undefined;\n  }\n\n  const size = parseInt(header, 10);\n  return isNaN(size) ? undefined : size;\n}\n\n/** Get the string representation of a body. */\nfunction getBodyString(body) {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof URLSearchParams) {\n      return [body.toString()];\n    }\n\n    if (body instanceof FormData) {\n      return [_serializeFormData(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch (e2) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\n/** Merge a warning into an existing network request/response. */\nfunction mergeWarning(\n  info,\n  warning,\n) {\n  if (!info) {\n    return {\n      headers: {},\n      size: undefined,\n      _meta: {\n        warnings: [warning],\n      },\n    };\n  }\n\n  const newMeta = { ...info._meta };\n  const existingWarnings = newMeta.warnings || [];\n  newMeta.warnings = [...existingWarnings, warning];\n\n  info._meta = newMeta;\n  return info;\n}\n\n/** Convert ReplayNetworkRequestData to a PerformanceEntry. */\nfunction makeNetworkReplayBreadcrumb(\n  type,\n  data,\n) {\n  if (!data) {\n    return null;\n  }\n\n  const { startTimestamp, endTimestamp, url, method, statusCode, request, response } = data;\n\n  const result = {\n    type,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: dropUndefinedKeys({\n      method,\n      statusCode,\n      request,\n      response,\n    }),\n  };\n\n  return result;\n}\n\n/** Build the request or response part of a replay network breadcrumb that was skipped. */\nfunction buildSkippedNetworkRequestOrResponse(bodySize) {\n  return {\n    headers: {},\n    size: bodySize,\n    _meta: {\n      warnings: ['URL_SKIPPED'],\n    },\n  };\n}\n\n/** Build the request or response part of a replay network breadcrumb. */\nfunction buildNetworkRequestOrResponse(\n  headers,\n  bodySize,\n  body,\n) {\n  if (!bodySize && Object.keys(headers).length === 0) {\n    return undefined;\n  }\n\n  if (!bodySize) {\n    return {\n      headers,\n    };\n  }\n\n  if (!body) {\n    return {\n      headers,\n      size: bodySize,\n    };\n  }\n\n  const info = {\n    headers,\n    size: bodySize,\n  };\n\n  const { body: normalizedBody, warnings } = normalizeNetworkBody(body);\n  info.body = normalizedBody;\n  if (warnings && warnings.length > 0) {\n    info._meta = {\n      warnings,\n    };\n  }\n\n  return info;\n}\n\n/** Filter a set of headers */\nfunction getAllowedHeaders(headers, allowedHeaders) {\n  return Object.keys(headers).reduce((filteredHeaders, key) => {\n    const normalizedKey = key.toLowerCase();\n    // Avoid putting empty strings into the headers\n    if (allowedHeaders.includes(normalizedKey) && headers[key]) {\n      filteredHeaders[normalizedKey] = headers[key];\n    }\n    return filteredHeaders;\n  }, {});\n}\n\nfunction _serializeFormData(formData) {\n  // This is a bit simplified, but gives us a decent estimate\n  // This converts e.g. { name: 'Anne Smith', age: 13 } to 'name=Anne+Smith&age=13'\n  // @ts-expect-error passing FormData to URLSearchParams actually works\n  return new URLSearchParams(formData).toString();\n}\n\nfunction normalizeNetworkBody(body)\n\n {\n  if (!body || typeof body !== 'string') {\n    return {\n      body,\n    };\n  }\n\n  const exceedsSizeLimit = body.length > NETWORK_BODY_MAX_SIZE;\n  const isProbablyJson = _strIsProbablyJson(body);\n\n  if (exceedsSizeLimit) {\n    const truncatedBody = body.slice(0, NETWORK_BODY_MAX_SIZE);\n\n    if (isProbablyJson) {\n      return {\n        body: truncatedBody,\n        warnings: ['MAYBE_JSON_TRUNCATED'],\n      };\n    }\n\n    return {\n      body: `${truncatedBody}…`,\n      warnings: ['TEXT_TRUNCATED'],\n    };\n  }\n\n  if (isProbablyJson) {\n    try {\n      const jsonBody = JSON.parse(body);\n      return {\n        body: jsonBody,\n      };\n    } catch (e3) {\n      // fall back to just send the body as string\n    }\n  }\n\n  return {\n    body,\n  };\n}\n\nfunction _strIsProbablyJson(str) {\n  const first = str[0];\n  const last = str[str.length - 1];\n\n  // Simple check: If this does not start & end with {} or [], it's not JSON\n  return (first === '[' && last === ']') || (first === '{' && last === '}');\n}\n\n/** Match an URL against a list of strings/Regex. */\nfunction urlMatches(url, urls) {\n  const fullUrl = getFullUrl(url);\n\n  return stringMatchesSomePattern(fullUrl, urls);\n}\n\n/** exported for tests */\nfunction getFullUrl(url, baseURI = WINDOW.document.baseURI) {\n  // Short circuit for common cases:\n  if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith(WINDOW.location.origin)) {\n    return url;\n  }\n  const fixedUrl = new URL(url, baseURI);\n\n  // If these do not match, we are not dealing with a relative URL, so just return it\n  if (fixedUrl.origin !== new URL(baseURI).origin) {\n    return url;\n  }\n\n  const fullUrl = fixedUrl.href;\n\n  // Remove trailing slashes, if they don't match the original URL\n  if (!url.endsWith('/') && fullUrl.endsWith('/')) {\n    return fullUrl.slice(0, -1);\n  }\n\n  return fullUrl;\n}\n\n/**\n * Capture a fetch breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nasync function captureFetchBreadcrumbToReplay(\n  breadcrumb,\n  hint,\n  options\n\n,\n) {\n  try {\n    const data = await _prepareFetchData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.fetch', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture fetch breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nfunction enrichFetchBreadcrumb(\n  breadcrumb,\n  hint,\n) {\n  const { input, response } = hint;\n\n  const body = input ? _getFetchRequestArgBody(input) : undefined;\n  const reqSize = getBodySize(body);\n\n  const resSize = response ? parseContentLengthHeader(response.headers.get('content-length')) : undefined;\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nasync function _prepareFetchData(\n  breadcrumb,\n  hint,\n  options,\n) {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  const captureDetails =\n    urlMatches(url, options.networkDetailAllowUrls) && !urlMatches(url, options.networkDetailDenyUrls);\n\n  const request = captureDetails\n    ? _getRequestInfo(options, hint.input, requestBodySize)\n    : buildSkippedNetworkRequestOrResponse(requestBodySize);\n  const response = await _getResponseInfo(captureDetails, options, hint.response, responseBodySize);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request,\n    response,\n  };\n}\n\nfunction _getRequestInfo(\n  { networkCaptureBodies, networkRequestHeaders },\n  input,\n  requestBodySize,\n) {\n  const headers = input ? getRequestHeaders(input, networkRequestHeaders) : {};\n\n  if (!networkCaptureBodies) {\n    return buildNetworkRequestOrResponse(headers, requestBodySize, undefined);\n  }\n\n  // We only want to transmit string or string-like bodies\n  const requestBody = _getFetchRequestArgBody(input);\n  const [bodyStr, warning] = getBodyString(requestBody);\n  const data = buildNetworkRequestOrResponse(headers, requestBodySize, bodyStr);\n\n  if (warning) {\n    return mergeWarning(data, warning);\n  }\n\n  return data;\n}\n\n/** Exported only for tests. */\nasync function _getResponseInfo(\n  captureDetails,\n  {\n    networkCaptureBodies,\n    networkResponseHeaders,\n  },\n  response,\n  responseBodySize,\n) {\n  if (!captureDetails && responseBodySize !== undefined) {\n    return buildSkippedNetworkRequestOrResponse(responseBodySize);\n  }\n\n  const headers = response ? getAllHeaders(response.headers, networkResponseHeaders) : {};\n\n  if (!response || (!networkCaptureBodies && responseBodySize !== undefined)) {\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n\n  const [bodyText, warning] = await _parseFetchResponseBody(response);\n  const result = getResponseData(bodyText, {\n    networkCaptureBodies,\n\n    responseBodySize,\n    captureDetails,\n    headers,\n  });\n\n  if (warning) {\n    return mergeWarning(result, warning);\n  }\n\n  return result;\n}\n\nfunction getResponseData(\n  bodyText,\n  {\n    networkCaptureBodies,\n    responseBodySize,\n    captureDetails,\n    headers,\n  }\n\n,\n) {\n  try {\n    const size =\n      bodyText && bodyText.length && responseBodySize === undefined ? getBodySize(bodyText) : responseBodySize;\n\n    if (!captureDetails) {\n      return buildSkippedNetworkRequestOrResponse(size);\n    }\n\n    if (networkCaptureBodies) {\n      return buildNetworkRequestOrResponse(headers, size, bodyText);\n    }\n\n    return buildNetworkRequestOrResponse(headers, size, undefined);\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize response body', error);\n    // fallback\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n}\n\nasync function _parseFetchResponseBody(response) {\n  const res = _tryCloneResponse(response);\n\n  if (!res) {\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  try {\n    const text = await _tryGetResponseText(res);\n    return [text];\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to get text body from response', error);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n}\n\nfunction _getFetchRequestArgBody(fetchArgs = []) {\n  // We only support getting the body from the fetch options\n  if (fetchArgs.length !== 2 || typeof fetchArgs[1] !== 'object') {\n    return undefined;\n  }\n\n  return (fetchArgs[1] ).body;\n}\n\nfunction getAllHeaders(headers, allowedHeaders) {\n  const allHeaders = {};\n\n  allowedHeaders.forEach(header => {\n    if (headers.get(header)) {\n      allHeaders[header] = headers.get(header) ;\n    }\n  });\n\n  return allHeaders;\n}\n\nfunction getRequestHeaders(fetchArgs, allowedHeaders) {\n  if (fetchArgs.length === 1 && typeof fetchArgs[0] !== 'string') {\n    return getHeadersFromOptions(fetchArgs[0] , allowedHeaders);\n  }\n\n  if (fetchArgs.length === 2) {\n    return getHeadersFromOptions(fetchArgs[1] , allowedHeaders);\n  }\n\n  return {};\n}\n\nfunction getHeadersFromOptions(\n  input,\n  allowedHeaders,\n) {\n  if (!input) {\n    return {};\n  }\n\n  const headers = input.headers;\n\n  if (!headers) {\n    return {};\n  }\n\n  if (headers instanceof Headers) {\n    return getAllHeaders(headers, allowedHeaders);\n  }\n\n  // We do not support this, as it is not really documented (anymore?)\n  if (Array.isArray(headers)) {\n    return {};\n  }\n\n  return getAllowedHeaders(headers, allowedHeaders);\n}\n\nfunction _tryCloneResponse(response) {\n  try {\n    // We have to clone this, as the body can only be read once\n    return response.clone();\n  } catch (error) {\n    // this can throw if the response was already consumed before\n    DEBUG_BUILD && logger.warn('[Replay] Failed to clone response body', error);\n  }\n}\n\n/**\n * Get the response body of a fetch request, or timeout after 500ms.\n * Fetch can return a streaming body, that may not resolve (or not for a long time).\n * If that happens, we rather abort after a short time than keep waiting for this.\n */\nfunction _tryGetResponseText(response) {\n  return new Promise((resolve, reject) => {\n    const timeout = setTimeout$2(() => reject(new Error('Timeout while trying to read response body')), 500);\n\n    _getResponseText(response)\n      .then(\n        txt => resolve(txt),\n        reason => reject(reason),\n      )\n      .finally(() => clearTimeout(timeout));\n  });\n}\n\nasync function _getResponseText(response) {\n  // Force this to be a promise, just to be safe\n  // eslint-disable-next-line no-return-await\n  return await response.text();\n}\n\n/**\n * Capture an XHR breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nasync function captureXhrBreadcrumbToReplay(\n  breadcrumb,\n  hint,\n  options,\n) {\n  try {\n    const data = _prepareXhrData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.xhr', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture xhr breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nfunction enrichXhrBreadcrumb(\n  breadcrumb,\n  hint,\n) {\n  const { xhr, input } = hint;\n\n  if (!xhr) {\n    return;\n  }\n\n  const reqSize = getBodySize(input);\n  const resSize = xhr.getResponseHeader('content-length')\n    ? parseContentLengthHeader(xhr.getResponseHeader('content-length'))\n    : _getBodySize(xhr.response, xhr.responseType);\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nfunction _prepareXhrData(\n  breadcrumb,\n  hint,\n  options,\n) {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now, input, xhr } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  if (!url) {\n    return null;\n  }\n\n  if (!xhr || !urlMatches(url, options.networkDetailAllowUrls) || urlMatches(url, options.networkDetailDenyUrls)) {\n    const request = buildSkippedNetworkRequestOrResponse(requestBodySize);\n    const response = buildSkippedNetworkRequestOrResponse(responseBodySize);\n    return {\n      startTimestamp,\n      endTimestamp,\n      url,\n      method,\n      statusCode,\n      request,\n      response,\n    };\n  }\n\n  const xhrInfo = xhr[SENTRY_XHR_DATA_KEY];\n  const networkRequestHeaders = xhrInfo\n    ? getAllowedHeaders(xhrInfo.request_headers, options.networkRequestHeaders)\n    : {};\n  const networkResponseHeaders = getAllowedHeaders(getResponseHeaders(xhr), options.networkResponseHeaders);\n\n  const [requestBody, requestWarning] = options.networkCaptureBodies ? getBodyString(input) : [undefined];\n  const [responseBody, responseWarning] = options.networkCaptureBodies ? _getXhrResponseBody(xhr) : [undefined];\n\n  const request = buildNetworkRequestOrResponse(networkRequestHeaders, requestBodySize, requestBody);\n  const response = buildNetworkRequestOrResponse(networkResponseHeaders, responseBodySize, responseBody);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request: requestWarning ? mergeWarning(request, requestWarning) : request,\n    response: responseWarning ? mergeWarning(response, responseWarning) : response,\n  };\n}\n\nfunction getResponseHeaders(xhr) {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc, line) => {\n    const [key, value] = line.split(': ');\n    acc[key.toLowerCase()] = value;\n    return acc;\n  }, {});\n}\n\nfunction _getXhrResponseBody(xhr) {\n  // We collect errors that happen, but only log them if we can't get any response body\n  const errors = [];\n\n  try {\n    return [xhr.responseText];\n  } catch (e) {\n    errors.push(e);\n  }\n\n  // Try to manually parse the response body, if responseText fails\n  try {\n    return _parseXhrResponse(xhr.response, xhr.responseType);\n  } catch (e) {\n    errors.push(e);\n  }\n\n  DEBUG_BUILD && logger.warn('[Replay] Failed to get xhr response body', ...errors);\n\n  return [undefined];\n}\n\n/**\n * Get the string representation of the XHR response.\n * Based on MDN, these are the possible types of the response:\n * string\n * ArrayBuffer\n * Blob\n * Document\n * POJO\n *\n * Exported only for tests.\n */\nfunction _parseXhrResponse(\n  body,\n  responseType,\n) {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof Document) {\n      return [body.body.outerHTML];\n    }\n\n    if (responseType === 'json' && body && typeof body === 'object') {\n      return [JSON.stringify(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch (e2) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\nfunction _getBodySize(\n  body,\n  responseType,\n) {\n  try {\n    const bodyStr = responseType === 'json' && body && typeof body === 'object' ? JSON.stringify(body) : body;\n    return getBodySize(bodyStr);\n  } catch (e3) {\n    return undefined;\n  }\n}\n\n/**\n * This method does two things:\n * - It enriches the regular XHR/fetch breadcrumbs with request/response size data\n * - It captures the XHR/fetch breadcrumbs to the replay\n *   (enriching it with further data that is _not_ added to the regular breadcrumbs)\n */\nfunction handleNetworkBreadcrumbs(replay) {\n  const client = getClient();\n\n  try {\n    const {\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    } = replay.getOptions();\n\n    const options = {\n      replay,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    };\n\n    if (client) {\n      client.on('beforeAddBreadcrumb', (breadcrumb, hint) => beforeAddNetworkBreadcrumb(options, breadcrumb, hint));\n    }\n  } catch (e2) {\n    // Do nothing\n  }\n}\n\n/** just exported for tests */\nfunction beforeAddNetworkBreadcrumb(\n  options,\n  breadcrumb,\n  hint,\n) {\n  if (!breadcrumb.data) {\n    return;\n  }\n\n  try {\n    if (_isXhrBreadcrumb(breadcrumb) && _isXhrHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichXhrBreadcrumb(breadcrumb, hint);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureXhrBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n\n    if (_isFetchBreadcrumb(breadcrumb) && _isFetchHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichFetchBreadcrumb(breadcrumb, hint);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureFetchBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n  } catch (e) {\n    DEBUG_BUILD && logger.warn('Error when enriching network breadcrumb');\n  }\n}\n\nfunction _isXhrBreadcrumb(breadcrumb) {\n  return breadcrumb.category === 'xhr';\n}\n\nfunction _isFetchBreadcrumb(breadcrumb) {\n  return breadcrumb.category === 'fetch';\n}\n\nfunction _isXhrHint(hint) {\n  return hint && hint.xhr;\n}\n\nfunction _isFetchHint(hint) {\n  return hint && hint.response;\n}\n\n/**\n * Add global listeners that cannot be removed.\n */\nfunction addGlobalListeners(replay) {\n  // Listeners from core SDK //\n  const client = getClient();\n\n  addClickKeypressInstrumentationHandler(handleDomListener(replay));\n  addHistoryInstrumentationHandler(handleHistorySpanListener(replay));\n  handleBreadcrumbs(replay);\n  handleNetworkBreadcrumbs(replay);\n\n  // Tag all (non replay) events that get sent to Sentry with the current\n  // replay ID so that we can reference them later in the UI\n  const eventProcessor = handleGlobalEventListener(replay);\n  addEventProcessor(eventProcessor);\n\n  // If a custom client has no hooks yet, we continue to use the \"old\" implementation\n  if (client) {\n    client.on('beforeSendEvent', handleBeforeSendEvent(replay));\n    client.on('afterSendEvent', handleAfterSendEvent(replay));\n    client.on('createDsc', (dsc) => {\n      const replayId = replay.getSessionId();\n      // We do not want to set the DSC when in buffer mode, as that means the replay has not been sent (yet)\n      if (replayId && replay.isEnabled() && replay.recordingMode === 'session') {\n        // Ensure to check that the session is still active - it could have expired in the meanwhile\n        const isSessionActive = replay.checkAndHandleExpiredSession();\n        if (isSessionActive) {\n          dsc.replay_id = replayId;\n        }\n      }\n    });\n\n    client.on('spanStart', span => {\n      replay.lastActiveSpan = span;\n    });\n\n    // We may be missing the initial spanStart due to timing issues,\n    // so we capture it on finish again.\n    client.on('spanEnd', span => {\n      replay.lastActiveSpan = span;\n    });\n\n    // We want to flush replay\n    client.on('beforeSendFeedback', (feedbackEvent, options) => {\n      const replayId = replay.getSessionId();\n      if (options && options.includeReplay && replay.isEnabled() && replayId) {\n        // This should never reject\n        if (feedbackEvent.contexts && feedbackEvent.contexts.feedback) {\n          feedbackEvent.contexts.feedback.replay_id = replayId;\n        }\n      }\n    });\n  }\n}\n\n/**\n * Create a \"span\" for the total amount of memory being used by JS objects\n * (including v8 internal objects).\n */\nasync function addMemoryEntry(replay) {\n  // window.performance.memory is a non-standard API and doesn't work on all browsers, so we try-catch this\n  try {\n    return Promise.all(\n      createPerformanceSpans(replay, [\n        // @ts-expect-error memory doesn't exist on type Performance as the API is non-standard (we check that it exists above)\n        createMemoryEntry(WINDOW.performance.memory),\n      ]),\n    );\n  } catch (error) {\n    // Do nothing\n    return [];\n  }\n}\n\nfunction createMemoryEntry(memoryEntry) {\n  const { jsHeapSizeLimit, totalJSHeapSize, usedJSHeapSize } = memoryEntry;\n  // we don't want to use `getAbsoluteTime` because it adds the event time to the\n  // time origin, so we get the current timestamp instead\n  const time = Date.now() / 1000;\n  return {\n    type: 'memory',\n    name: 'memory',\n    start: time,\n    end: time,\n    data: {\n      memory: {\n        jsHeapSizeLimit,\n        totalJSHeapSize,\n        usedJSHeapSize,\n      },\n    },\n  };\n}\n\n/**\n * Heavily simplified debounce function based on lodash.debounce.\n *\n * This function takes a callback function (@param fun) and delays its invocation\n * by @param wait milliseconds. Optionally, a maxWait can be specified in @param options,\n * which ensures that the callback is invoked at least once after the specified max. wait time.\n *\n * @param func the function whose invocation is to be debounced\n * @param wait the minimum time until the function is invoked after it was called once\n * @param options the options object, which can contain the `maxWait` property\n *\n * @returns the debounced version of the function, which needs to be called at least once to start the\n *          debouncing process. Subsequent calls will reset the debouncing timer and, in case @paramfunc\n *          was already invoked in the meantime, return @param func's return value.\n *          The debounced function has two additional properties:\n *          - `flush`: Invokes the debounced function immediately and returns its return value\n *          - `cancel`: Cancels the debouncing process and resets the debouncing timer\n */\nfunction debounce(func, wait, options) {\n  let callbackReturnValue;\n\n  let timerId;\n  let maxTimerId;\n\n  const maxWait = options && options.maxWait ? Math.max(options.maxWait, wait) : 0;\n\n  function invokeFunc() {\n    cancelTimers();\n    callbackReturnValue = func();\n    return callbackReturnValue;\n  }\n\n  function cancelTimers() {\n    timerId !== undefined && clearTimeout(timerId);\n    maxTimerId !== undefined && clearTimeout(maxTimerId);\n    timerId = maxTimerId = undefined;\n  }\n\n  function flush() {\n    if (timerId !== undefined || maxTimerId !== undefined) {\n      return invokeFunc();\n    }\n    return callbackReturnValue;\n  }\n\n  function debounced() {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout$2(invokeFunc, wait);\n\n    if (maxWait && maxTimerId === undefined) {\n      maxTimerId = setTimeout$2(invokeFunc, maxWait);\n    }\n\n    return callbackReturnValue;\n  }\n\n  debounced.cancel = cancelTimers;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Handler for recording events.\n *\n * Adds to event buffer, and has varying flushing behaviors if the event was a checkout.\n */\nfunction getHandleRecordingEmit(replay) {\n  let hadFirstEvent = false;\n\n  return (event, _isCheckout) => {\n    // If this is false, it means session is expired, create and a new session and wait for checkout\n    if (!replay.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.warn('[Replay] Received replay event after session expired.');\n\n      return;\n    }\n\n    // `_isCheckout` is only set when the checkout is due to `checkoutEveryNms`\n    // We also want to treat the first event as a checkout, so we handle this specifically here\n    const isCheckout = _isCheckout || !hadFirstEvent;\n    hadFirstEvent = true;\n\n    if (replay.clickDetector) {\n      updateClickDetectorForRecordingEvent(replay.clickDetector, event);\n    }\n\n    // The handler returns `true` if we do not want to trigger debounced flush, `false` if we want to debounce flush.\n    replay.addUpdate(() => {\n      // The session is always started immediately on pageload/init, but for\n      // error-only replays, it should reflect the most recent checkout\n      // when an error occurs. Clear any state that happens before this current\n      // checkout. This needs to happen before `addEvent()` which updates state\n      // dependent on this reset.\n      if (replay.recordingMode === 'buffer' && isCheckout) {\n        replay.setInitialState();\n      }\n\n      // If the event is not added (e.g. due to being paused, disabled, or out of the max replay duration),\n      // Skip all further steps\n      if (!addEventSync(replay, event, isCheckout)) {\n        // Return true to skip scheduling a debounced flush\n        return true;\n      }\n\n      // Different behavior for full snapshots (type=2), ignore other event types\n      // See https://github.com/rrweb-io/rrweb/blob/d8f9290ca496712aa1e7d472549480c4e7876594/packages/rrweb/src/types.ts#L16\n      if (!isCheckout) {\n        return false;\n      }\n\n      // Additionally, create a meta event that will capture certain SDK settings.\n      // In order to handle buffer mode, this needs to either be done when we\n      // receive checkout events or at flush time.\n      //\n      // `isCheckout` is always true, but want to be explicit that it should\n      // only be added for checkouts\n      addSettingsEvent(replay, isCheckout);\n\n      // If there is a previousSessionId after a full snapshot occurs, then\n      // the replay session was started due to session expiration. The new session\n      // is started before triggering a new checkout and contains the id\n      // of the previous session. Do not immediately flush in this case\n      // to avoid capturing only the checkout and instead the replay will\n      // be captured if they perform any follow-up actions.\n      if (replay.session && replay.session.previousSessionId) {\n        return true;\n      }\n\n      // When in buffer mode, make sure we adjust the session started date to the current earliest event of the buffer\n      // this should usually be the timestamp of the checkout event, but to be safe...\n      if (replay.recordingMode === 'buffer' && replay.session && replay.eventBuffer) {\n        const earliestEvent = replay.eventBuffer.getEarliestTimestamp();\n        if (earliestEvent) {\n          logInfo(\n            `[Replay] Updating session start time to earliest event in buffer to ${new Date(earliestEvent)}`,\n            replay.getOptions()._experiments.traceInternals,\n          );\n\n          replay.session.started = earliestEvent;\n\n          if (replay.getOptions().stickySession) {\n            saveSession(replay.session);\n          }\n        }\n      }\n\n      if (replay.recordingMode === 'session') {\n        // If the full snapshot is due to an initial load, we will not have\n        // a previous session ID. In this case, we want to buffer events\n        // for a set amount of time before flushing. This can help avoid\n        // capturing replays of users that immediately close the window.\n\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        void replay.flush();\n      }\n\n      return true;\n    });\n  };\n}\n\n/**\n * Exported for tests\n */\nfunction createOptionsEvent(replay) {\n  const options = replay.getOptions();\n  return {\n    type: EventType.Custom,\n    timestamp: Date.now(),\n    data: {\n      tag: 'options',\n      payload: {\n        shouldRecordCanvas: replay.isRecordingCanvas(),\n        sessionSampleRate: options.sessionSampleRate,\n        errorSampleRate: options.errorSampleRate,\n        useCompressionOption: options.useCompression,\n        blockAllMedia: options.blockAllMedia,\n        maskAllText: options.maskAllText,\n        maskAllInputs: options.maskAllInputs,\n        useCompression: replay.eventBuffer ? replay.eventBuffer.type === 'worker' : false,\n        networkDetailHasUrls: options.networkDetailAllowUrls.length > 0,\n        networkCaptureBodies: options.networkCaptureBodies,\n        networkRequestHasHeaders: options.networkRequestHeaders.length > 0,\n        networkResponseHasHeaders: options.networkResponseHeaders.length > 0,\n      },\n    },\n  };\n}\n\n/**\n * Add a \"meta\" event that contains a simplified view on current configuration\n * options. This should only be included on the first segment of a recording.\n */\nfunction addSettingsEvent(replay, isCheckout) {\n  // Only need to add this event when sending the first segment\n  if (!isCheckout || !replay.session || replay.session.segmentId !== 0) {\n    return;\n  }\n\n  addEventSync(replay, createOptionsEvent(replay), false);\n}\n\n/**\n * Create a replay envelope ready to be sent.\n * This includes both the replay event, as well as the recording data.\n */\nfunction createReplayEnvelope(\n  replayEvent,\n  recordingData,\n  dsn,\n  tunnel,\n) {\n  return createEnvelope(\n    createEventEnvelopeHeaders(replayEvent, getSdkMetadataForEnvelopeHeader(replayEvent), tunnel, dsn),\n    [\n      [{ type: 'replay_event' }, replayEvent],\n      [\n        {\n          type: 'replay_recording',\n          // If string then we need to encode to UTF8, otherwise will have\n          // wrong size. TextEncoder has similar browser support to\n          // MutationObserver, although it does not accept IE11.\n          length:\n            typeof recordingData === 'string' ? new TextEncoder().encode(recordingData).length : recordingData.length,\n        },\n        recordingData,\n      ],\n    ],\n  );\n}\n\n/**\n * Prepare the recording data ready to be sent.\n */\nfunction prepareRecordingData({\n  recordingData,\n  headers,\n}\n\n) {\n  let payloadWithSequence;\n\n  // XXX: newline is needed to separate sequence id from events\n  const replayHeaders = `${JSON.stringify(headers)}\n`;\n\n  if (typeof recordingData === 'string') {\n    payloadWithSequence = `${replayHeaders}${recordingData}`;\n  } else {\n    const enc = new TextEncoder();\n    // XXX: newline is needed to separate sequence id from events\n    const sequence = enc.encode(replayHeaders);\n    // Merge the two Uint8Arrays\n    payloadWithSequence = new Uint8Array(sequence.length + recordingData.length);\n    payloadWithSequence.set(sequence);\n    payloadWithSequence.set(recordingData, sequence.length);\n  }\n\n  return payloadWithSequence;\n}\n\n/**\n * Prepare a replay event & enrich it with the SDK metadata.\n */\nasync function prepareReplayEvent({\n  client,\n  scope,\n  replayId: event_id,\n  event,\n}\n\n) {\n  const integrations =\n    typeof client._integrations === 'object' && client._integrations !== null && !Array.isArray(client._integrations)\n      ? Object.keys(client._integrations)\n      : undefined;\n\n  const eventHint = { event_id, integrations };\n\n  client.emit('preprocessEvent', event, eventHint);\n\n  const preparedEvent = (await prepareEvent(\n    client.getOptions(),\n    event,\n    eventHint,\n    scope,\n    client,\n    getIsolationScope(),\n  )) ;\n\n  // If e.g. a global event processor returned null\n  if (!preparedEvent) {\n    return null;\n  }\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  // extract the SDK name because `client._prepareEvent` doesn't add it to the event\n  const metadata = client.getSdkMetadata();\n  const { name, version } = (metadata && metadata.sdk) || {};\n\n  preparedEvent.sdk = {\n    ...preparedEvent.sdk,\n    name: name || 'sentry.javascript.unknown',\n    version: version || '0.0.0',\n  };\n\n  return preparedEvent;\n}\n\n/**\n * Send replay attachment using `fetch()`\n */\nasync function sendReplayRequest({\n  recordingData,\n  replayId,\n  segmentId: segment_id,\n  eventContext,\n  timestamp,\n  session,\n}) {\n  const preparedRecordingData = prepareRecordingData({\n    recordingData,\n    headers: {\n      segment_id,\n    },\n  });\n\n  const { urls, errorIds, traceIds, initialTimestamp } = eventContext;\n\n  const client = getClient();\n  const scope = getCurrentScope();\n  const transport = client && client.getTransport();\n  const dsn = client && client.getDsn();\n\n  if (!client || !transport || !dsn || !session.sampled) {\n    return resolvedSyncPromise({});\n  }\n\n  const baseEvent = {\n    type: REPLAY_EVENT_NAME,\n    replay_start_timestamp: initialTimestamp / 1000,\n    timestamp: timestamp / 1000,\n    error_ids: errorIds,\n    trace_ids: traceIds,\n    urls,\n    replay_id: replayId,\n    segment_id,\n    replay_type: session.sampled,\n  };\n\n  const replayEvent = await prepareReplayEvent({ scope, client, replayId, event: baseEvent });\n\n  if (!replayEvent) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'replay', baseEvent);\n    logInfo('An event processor returned `null`, will not send event.');\n    return resolvedSyncPromise({});\n  }\n\n  /*\n  For reference, the fully built event looks something like this:\n  {\n      \"type\": \"replay_event\",\n      \"timestamp\": 1670837008.634,\n      \"error_ids\": [\n          \"errorId\"\n      ],\n      \"trace_ids\": [\n          \"traceId\"\n      ],\n      \"urls\": [\n          \"https://example.com\"\n      ],\n      \"replay_id\": \"eventId\",\n      \"segment_id\": 3,\n      \"replay_type\": \"error\",\n      \"platform\": \"javascript\",\n      \"event_id\": \"eventId\",\n      \"environment\": \"production\",\n      \"sdk\": {\n          \"integrations\": [\n              \"BrowserTracing\",\n              \"Replay\"\n          ],\n          \"name\": \"sentry.javascript.browser\",\n          \"version\": \"7.25.0\"\n      },\n      \"sdkProcessingMetadata\": {},\n      \"contexts\": {\n      },\n  }\n  */\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete replayEvent.sdkProcessingMetadata;\n\n  const envelope = createReplayEnvelope(replayEvent, preparedRecordingData, dsn, client.getOptions().tunnel);\n\n  let response;\n\n  try {\n    response = await transport.send(envelope);\n  } catch (err) {\n    const error = new Error(UNABLE_TO_SEND_REPLAY);\n\n    try {\n      // In case browsers don't allow this property to be writable\n      // @ts-expect-error This needs lib es2022 and newer\n      error.cause = err;\n    } catch (e) {\n      // nothing to do\n    }\n    throw error;\n  }\n\n  // If the status code is invalid, we want to immediately stop & not retry\n  if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n    throw new TransportStatusCodeError(response.statusCode);\n  }\n\n  const rateLimits = updateRateLimits({}, response);\n  if (isRateLimited(rateLimits, 'replay')) {\n    throw new RateLimitError(rateLimits);\n  }\n\n  return response;\n}\n\n/**\n * This error indicates that the transport returned an invalid status code.\n */\nclass TransportStatusCodeError extends Error {\n   constructor(statusCode) {\n    super(`Transport returned status code ${statusCode}`);\n  }\n}\n\n/**\n * This error indicates that we hit a rate limit API error.\n */\nclass RateLimitError extends Error {\n\n   constructor(rateLimits) {\n    super('Rate limit hit');\n    this.rateLimits = rateLimits;\n  }\n}\n\n/**\n * Finalize and send the current replay event to Sentry\n */\nasync function sendReplay(\n  replayData,\n  retryConfig = {\n    count: 0,\n    interval: RETRY_BASE_INTERVAL,\n  },\n) {\n  const { recordingData, options } = replayData;\n\n  // short circuit if there's no events to upload (this shouldn't happen as _runFlush makes this check)\n  if (!recordingData.length) {\n    return;\n  }\n\n  try {\n    await sendReplayRequest(replayData);\n    return true;\n  } catch (err) {\n    if (err instanceof TransportStatusCodeError || err instanceof RateLimitError) {\n      throw err;\n    }\n\n    // Capture error for every failed replay\n    setContext('Replays', {\n      _retryCount: retryConfig.count,\n    });\n\n    if (DEBUG_BUILD && options._experiments && options._experiments.captureExceptions) {\n      captureException(err);\n    }\n\n    // If an error happened here, it's likely that uploading the attachment\n    // failed, we'll can retry with the same events payload\n    if (retryConfig.count >= RETRY_MAX_COUNT) {\n      const error = new Error(`${UNABLE_TO_SEND_REPLAY} - max retries exceeded`);\n\n      try {\n        // In case browsers don't allow this property to be writable\n        // @ts-expect-error This needs lib es2022 and newer\n        error.cause = err;\n      } catch (e) {\n        // nothing to do\n      }\n\n      throw error;\n    }\n\n    // will retry in intervals of 5, 10, 30\n    retryConfig.interval *= ++retryConfig.count;\n\n    return new Promise((resolve, reject) => {\n      setTimeout$2(async () => {\n        try {\n          await sendReplay(replayData, retryConfig);\n          resolve(true);\n        } catch (err) {\n          reject(err);\n        }\n      }, retryConfig.interval);\n    });\n  }\n}\n\nconst THROTTLED = '__THROTTLED';\nconst SKIPPED = '__SKIPPED';\n\n/**\n * Create a throttled function off a given function.\n * When calling the throttled function, it will call the original function only\n * if it hasn't been called more than `maxCount` times in the last `durationSeconds`.\n *\n * Returns `THROTTLED` if throttled for the first time, after that `SKIPPED`,\n * or else the return value of the original function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction throttle(\n  fn,\n  maxCount,\n  durationSeconds,\n) {\n  const counter = new Map();\n\n  const _cleanup = (now) => {\n    const threshold = now - durationSeconds;\n    counter.forEach((_value, key) => {\n      if (key < threshold) {\n        counter.delete(key);\n      }\n    });\n  };\n\n  const _getTotalCount = () => {\n    return [...counter.values()].reduce((a, b) => a + b, 0);\n  };\n\n  let isThrottled = false;\n\n  return (...rest) => {\n    // Date in second-precision, which we use as basis for the throttling\n    const now = Math.floor(Date.now() / 1000);\n\n    // First, make sure to delete any old entries\n    _cleanup(now);\n\n    // If already over limit, do nothing\n    if (_getTotalCount() >= maxCount) {\n      const wasThrottled = isThrottled;\n      isThrottled = true;\n      return wasThrottled ? SKIPPED : THROTTLED;\n    }\n\n    isThrottled = false;\n    const count = counter.get(now) || 0;\n    counter.set(now, count + 1);\n\n    return fn(...rest);\n  };\n}\n\n/* eslint-disable max-lines */ // TODO: We might want to split this file up\n\n/**\n * The main replay container class, which holds all the state and methods for recording and sending replays.\n */\nclass ReplayContainer  {\n\n  /**\n   * Recording can happen in one of three modes:\n   *   - session: Record the whole session, sending it continuously\n   *   - buffer: Always keep the last 60s of recording, requires:\n   *     - having replaysOnErrorSampleRate > 0 to capture replay when an error occurs\n   *     - or calling `flush()` to send the replay\n   */\n\n  /**\n   * The current or last active span.\n   * This is only available when performance is enabled.\n   */\n\n  /**\n   * These are here so we can overwrite them in tests etc.\n   * @hidden\n   */\n\n  /** The replay has to be manually started, because no sample rate (neither session or error) was provided. */\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n\n  /**\n   * Timestamp of the last user activity. This lives across sessions.\n   */\n\n  /**\n   * Is the integration currently active?\n   */\n\n  /**\n   * Paused is a state where:\n   * - DOM Recording is not listening at all\n   * - Nothing will be added to event buffer (e.g. core SDK events)\n   */\n\n  /**\n   * Have we attached listeners to the core SDK?\n   * Note we have to track this as there is no way to remove instrumentation handlers.\n   */\n\n  /**\n   * Function to stop recording\n   */\n\n  /**\n   * Internal use for canvas recording options\n   */\n\n   constructor({\n    options,\n    recordingOptions,\n  }\n\n) {ReplayContainer.prototype.__init.call(this);ReplayContainer.prototype.__init2.call(this);ReplayContainer.prototype.__init3.call(this);ReplayContainer.prototype.__init4.call(this);ReplayContainer.prototype.__init5.call(this);ReplayContainer.prototype.__init6.call(this);\n    this.eventBuffer = null;\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n    this.recordingMode = 'session';\n    this.timeouts = {\n      sessionIdlePause: SESSION_IDLE_PAUSE_DURATION,\n      sessionIdleExpire: SESSION_IDLE_EXPIRE_DURATION,\n    } ;\n    this._lastActivity = Date.now();\n    this._isEnabled = false;\n    this._isPaused = false;\n    this._requiresManualStart = false;\n    this._hasInitializedCoreListeners = false;\n    this._context = {\n      errorIds: new Set(),\n      traceIds: new Set(),\n      urls: [],\n      initialTimestamp: Date.now(),\n      initialUrl: '',\n    };\n\n    this._recordingOptions = recordingOptions;\n    this._options = options;\n\n    this._debouncedFlush = debounce(() => this._flush(), this._options.flushMinDelay, {\n      maxWait: this._options.flushMaxDelay,\n    });\n\n    this._throttledAddEvent = throttle(\n      (event, isCheckout) => addEvent(this, event, isCheckout),\n      // Max 300 events...\n      300,\n      // ... per 5s\n      5,\n    );\n\n    const { slowClickTimeout, slowClickIgnoreSelectors } = this.getOptions();\n\n    const slowClickConfig = slowClickTimeout\n      ? {\n          threshold: Math.min(SLOW_CLICK_THRESHOLD, slowClickTimeout),\n          timeout: slowClickTimeout,\n          scrollTimeout: SLOW_CLICK_SCROLL_TIMEOUT,\n          ignoreSelector: slowClickIgnoreSelectors ? slowClickIgnoreSelectors.join(',') : '',\n        }\n      : undefined;\n\n    if (slowClickConfig) {\n      this.clickDetector = new ClickDetector(this, slowClickConfig);\n    }\n  }\n\n  /** Get the event context. */\n   getContext() {\n    return this._context;\n  }\n\n  /** If recording is currently enabled. */\n   isEnabled() {\n    return this._isEnabled;\n  }\n\n  /** If recording is currently paused. */\n   isPaused() {\n    return this._isPaused;\n  }\n\n  /**\n   * Determine if canvas recording is enabled\n   */\n   isRecordingCanvas() {\n    return Boolean(this._canvas);\n  }\n\n  /** Get the replay integration options. */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * Initializes the plugin based on sampling configuration. Should not be\n   * called outside of constructor.\n   */\n   initializeSampling(previousSessionId) {\n    const { errorSampleRate, sessionSampleRate } = this._options;\n\n    // If neither sample rate is > 0, then do nothing - user will need to call one of\n    // `start()` or `startBuffering` themselves.\n    const requiresManualStart = errorSampleRate <= 0 && sessionSampleRate <= 0;\n\n    this._requiresManualStart = requiresManualStart;\n\n    if (requiresManualStart) {\n      return;\n    }\n\n    // Otherwise if there is _any_ sample rate set, try to load an existing\n    // session, or create a new one.\n    this._initializeSessionForSampling(previousSessionId);\n\n    if (!this.session) {\n      // This should not happen, something wrong has occurred\n      this._handleException(new Error('Unable to initialize and create session'));\n      return;\n    }\n\n    if (this.session.sampled === false) {\n      // This should only occur if `errorSampleRate` is 0 and was unsampled for\n      // session-based replay. In this case there is nothing to do.\n      return;\n    }\n\n    // If segmentId > 0, it means we've previously already captured this session\n    // In this case, we still want to continue in `session` recording mode\n    this.recordingMode = this.session.sampled === 'buffer' && this.session.segmentId === 0 ? 'buffer' : 'session';\n\n    logInfoNextTick(\n      `[Replay] Starting replay in ${this.recordingMode} mode`,\n      this._options._experiments.traceInternals,\n    );\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * _performanceObserver, Recording, Sentry SDK, etc)\n   */\n   start() {\n    if (this._isEnabled && this.recordingMode === 'session') {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    if (this._isEnabled && this.recordingMode === 'buffer') {\n      throw new Error('Replay buffering is in progress, call `flush()` to save the replay');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in session mode', this._options._experiments.traceInternals);\n\n    // Required as user activity is initially set in\n    // constructor, so if `start()` is called after\n    // session idle expiration, a replay will not be\n    // created due to an idle timeout.\n    this._updateUserActivity();\n\n    const session = loadOrCreateSession(\n      {\n        maxReplayDuration: this._options.maxReplayDuration,\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        // This is intentional: create a new session-based replay when calling `start()`\n        sessionSampleRate: 1,\n        allowBuffering: false,\n      },\n    );\n\n    this.session = session;\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, an error occurs.\n   */\n   startBuffering() {\n    if (this._isEnabled) {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in buffer mode', this._options._experiments.traceInternals);\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: 0,\n        allowBuffering: true,\n      },\n    );\n\n    this.session = session;\n\n    this.recordingMode = 'buffer';\n    this._initializeRecording();\n  }\n\n  /**\n   * Start recording.\n   *\n   * Note that this will cause a new DOM checkout\n   */\n   startRecording() {\n    try {\n      const canvasOptions = this._canvas;\n\n      this._stopRecording = record({\n        ...this._recordingOptions,\n        // When running in error sampling mode, we need to overwrite `checkoutEveryNms`\n        // Without this, it would record forever, until an error happens, which we don't want\n        // instead, we'll always keep the last 60 seconds of replay before an error happened\n        ...(this.recordingMode === 'buffer' && { checkoutEveryNms: BUFFER_CHECKOUT_TIME }),\n        emit: getHandleRecordingEmit(this),\n        onMutation: this._onMutationHandler,\n        ...(canvasOptions\n          ? {\n              recordCanvas: canvasOptions.recordCanvas,\n              getCanvasManager: canvasOptions.getCanvasManager,\n              sampling: canvasOptions.sampling,\n              dataURLOptions: canvasOptions.dataURLOptions,\n            }\n          : {}),\n      });\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Stops the recording, if it was running.\n   *\n   * Returns true if it was previously stopped, or is now stopped,\n   * otherwise false.\n   */\n   stopRecording() {\n    try {\n      if (this._stopRecording) {\n        this._stopRecording();\n        this._stopRecording = undefined;\n      }\n\n      return true;\n    } catch (err) {\n      this._handleException(err);\n      return false;\n    }\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n   async stop({ forceFlush = false, reason } = {}) {\n    if (!this._isEnabled) {\n      return;\n    }\n\n    // We can't move `_isEnabled` after awaiting a flush, otherwise we can\n    // enter into an infinite loop when `stop()` is called while flushing.\n    this._isEnabled = false;\n\n    try {\n      logInfo(\n        `[Replay] Stopping Replay${reason ? ` triggered by ${reason}` : ''}`,\n        this._options._experiments.traceInternals,\n      );\n\n      this._removeListeners();\n      this.stopRecording();\n\n      this._debouncedFlush.cancel();\n      // See comment above re: `_isEnabled`, we \"force\" a flush, ignoring the\n      // `_isEnabled` state of the plugin since it was disabled above.\n      if (forceFlush) {\n        await this._flush({ force: true });\n      }\n\n      // After flush, destroy event buffer\n      this.eventBuffer && this.eventBuffer.destroy();\n      this.eventBuffer = null;\n\n      // Clear session from session storage, note this means if a new session\n      // is started after, it will not have `previousSessionId`\n      clearSession(this);\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Pause some replay functionality. See comments for `_isPaused`.\n   * This differs from stop as this only stops DOM recording, it is\n   * not as thorough of a shutdown as `stop()`.\n   */\n   pause() {\n    if (this._isPaused) {\n      return;\n    }\n\n    this._isPaused = true;\n    this.stopRecording();\n\n    logInfo('[Replay] Pausing replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * Resumes recording, see notes for `pause().\n   *\n   * Note that calling `startRecording()` here will cause a\n   * new DOM checkout.`\n   */\n   resume() {\n    if (!this._isPaused || !this._checkSession()) {\n      return;\n    }\n\n    this._isPaused = false;\n    this.startRecording();\n\n    logInfo('[Replay] Resuming replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n   async sendBufferedReplayOrFlush({ continueRecording = true } = {}) {\n    if (this.recordingMode === 'session') {\n      return this.flushImmediate();\n    }\n\n    const activityTime = Date.now();\n\n    logInfo('[Replay] Converting buffer to session', this._options._experiments.traceInternals);\n\n    // Allow flush to complete before resuming as a session recording, otherwise\n    // the checkout from `startRecording` may be included in the payload.\n    // Prefer to keep the error replay as a separate (and smaller) segment\n    // than the session replay.\n    await this.flushImmediate();\n\n    const hasStoppedRecording = this.stopRecording();\n\n    if (!continueRecording || !hasStoppedRecording) {\n      return;\n    }\n\n    // To avoid race conditions where this is called multiple times, we check here again that we are still buffering\n    if ((this.recordingMode ) === 'session') {\n      return;\n    }\n\n    // Re-start recording in session-mode\n    this.recordingMode = 'session';\n\n    // Once this session ends, we do not want to refresh it\n    if (this.session) {\n      this._updateUserActivity(activityTime);\n      this._updateSessionActivity(activityTime);\n      this._maybeSaveSession();\n    }\n\n    this.startRecording();\n  }\n\n  /**\n   * We want to batch uploads of replay events. Save events only if\n   * `<flushMinDelay>` milliseconds have elapsed since the last event\n   * *OR* if `<flushMaxDelay>` milliseconds have elapsed.\n   *\n   * Accepts a callback to perform side-effects and returns true to stop batch\n   * processing and hand back control to caller.\n   */\n   addUpdate(cb) {\n    // We need to always run `cb` (e.g. in the case of `this.recordingMode == 'buffer'`)\n    const cbResult = cb();\n\n    // If this option is turned on then we will only want to call `flush`\n    // explicitly\n    if (this.recordingMode === 'buffer') {\n      return;\n    }\n\n    // If callback is true, we do not want to continue with flushing -- the\n    // caller will need to handle it.\n    if (cbResult === true) {\n      return;\n    }\n\n    // addUpdate is called quite frequently - use _debouncedFlush so that it\n    // respects the flush delays and does not flush immediately\n    this._debouncedFlush();\n  }\n\n  /**\n   * Updates the user activity timestamp and resumes recording. This should be\n   * called in an event handler for a user action that we consider as the user\n   * being \"active\" (e.g. a mouse click).\n   */\n   triggerUserActivity() {\n    this._updateUserActivity();\n\n    // This case means that recording was once stopped due to inactivity.\n    // Ensure that recording is resumed.\n    if (!this._stopRecording) {\n      // Create a new session, otherwise when the user action is flushed, it\n      // will get rejected due to an expired session.\n      if (!this._checkSession()) {\n        return;\n      }\n\n      // Note: This will cause a new DOM checkout\n      this.resume();\n      return;\n    }\n\n    // Otherwise... recording was never suspended, continue as normalish\n    this.checkAndHandleExpiredSession();\n\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Updates the user activity timestamp *without* resuming\n   * recording. Some user events (e.g. keydown) can be create\n   * low-value replays that only contain the keypress as a\n   * breadcrumb. Instead this would require other events to\n   * create a new replay after a session has expired.\n   */\n   updateUserActivity() {\n    this._updateUserActivity();\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Only flush if `this.recordingMode === 'session'`\n   */\n   conditionalFlush() {\n    if (this.recordingMode === 'buffer') {\n      return Promise.resolve();\n    }\n\n    return this.flushImmediate();\n  }\n\n  /**\n   * Flush using debounce flush\n   */\n   flush() {\n    return this._debouncedFlush() ;\n  }\n\n  /**\n   * Always flush via `_debouncedFlush` so that we do not have flushes triggered\n   * from calling both `flush` and `_debouncedFlush`. Otherwise, there could be\n   * cases of mulitple flushes happening closely together.\n   */\n   flushImmediate() {\n    this._debouncedFlush();\n    // `.flush` is provided by the debounced function, analogously to lodash.debounce\n    return this._debouncedFlush.flush() ;\n  }\n\n  /**\n   * Cancels queued up flushes.\n   */\n   cancelFlush() {\n    this._debouncedFlush.cancel();\n  }\n\n  /** Get the current sesion (=replay) ID */\n   getSessionId() {\n    return this.session && this.session.id;\n  }\n\n  /**\n   * Checks if recording should be stopped due to user inactivity. Otherwise\n   * check if session is expired and create a new session if so. Triggers a new\n   * full snapshot on new session.\n   *\n   * Returns true if session is not expired, false otherwise.\n   * @hidden\n   */\n   checkAndHandleExpiredSession() {\n    // Prevent starting a new session if the last user activity is older than\n    // SESSION_IDLE_PAUSE_DURATION. Otherwise non-user activity can trigger a new\n    // session+recording. This creates noisy replays that do not have much\n    // content in them.\n    if (\n      this._lastActivity &&\n      isExpired(this._lastActivity, this.timeouts.sessionIdlePause) &&\n      this.session &&\n      this.session.sampled === 'session'\n    ) {\n      // Pause recording only for session-based replays. Otherwise, resuming\n      // will create a new replay and will conflict with users who only choose\n      // to record error-based replays only. (e.g. the resumed replay will not\n      // contain a reference to an error)\n      this.pause();\n      return;\n    }\n\n    // --- There is recent user activity --- //\n    // This will create a new session if expired, based on expiry length\n    if (!this._checkSession()) {\n      // Check session handles the refreshing itself\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Capture some initial state that can change throughout the lifespan of the\n   * replay. This is required because otherwise they would be captured at the\n   * first flush.\n   */\n   setInitialState() {\n    const urlPath = `${WINDOW.location.pathname}${WINDOW.location.hash}${WINDOW.location.search}`;\n    const url = `${WINDOW.location.origin}${urlPath}`;\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    // Reset _context as well\n    this._clearContext();\n\n    this._context.initialUrl = url;\n    this._context.initialTimestamp = Date.now();\n    this._context.urls.push(url);\n  }\n\n  /**\n   * Add a breadcrumb event, that may be throttled.\n   * If it was throttled, we add a custom breadcrumb to indicate that.\n   */\n   throttledAddEvent(\n    event,\n    isCheckout,\n  ) {\n    const res = this._throttledAddEvent(event, isCheckout);\n\n    // If this is THROTTLED, it means we have throttled the event for the first time\n    // In this case, we want to add a breadcrumb indicating that something was skipped\n    if (res === THROTTLED) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.throttled',\n      });\n\n      this.addUpdate(() => {\n        // Return `false` if the event _was_ added, as that means we schedule a flush\n        return !addEventSync(this, {\n          type: ReplayEventTypeCustom,\n          timestamp: breadcrumb.timestamp || 0,\n          data: {\n            tag: 'breadcrumb',\n            payload: breadcrumb,\n            metric: true,\n          },\n        });\n      });\n    }\n\n    return res;\n  }\n\n  /**\n   * This will get the parametrized route name of the current page.\n   * This is only available if performance is enabled, and if an instrumented router is used.\n   */\n   getCurrentRoute() {\n    const lastActiveSpan = this.lastActiveSpan || getActiveSpan();\n    const lastRootSpan = lastActiveSpan && getRootSpan(lastActiveSpan);\n\n    const attributes = (lastRootSpan && spanToJSON(lastRootSpan).data) || {};\n    const source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n    if (!lastRootSpan || !source || !['route', 'custom'].includes(source)) {\n      return undefined;\n    }\n\n    return spanToJSON(lastRootSpan).description;\n  }\n\n  /**\n   * Initialize and start all listeners to varying events (DOM,\n   * Performance Observer, Recording, Sentry SDK, etc)\n   */\n   _initializeRecording() {\n    this.setInitialState();\n\n    // this method is generally called on page load or manually - in both cases\n    // we should treat it as an activity\n    this._updateSessionActivity();\n\n    this.eventBuffer = createEventBuffer({\n      useCompression: this._options.useCompression,\n      workerUrl: this._options.workerUrl,\n    });\n\n    this._removeListeners();\n    this._addListeners();\n\n    // Need to set as enabled before we start recording, as `record()` can trigger a flush with a new checkout\n    this._isEnabled = true;\n    this._isPaused = false;\n\n    this.startRecording();\n  }\n\n  /** A wrapper to conditionally capture exceptions. */\n   _handleException(error) {\n    DEBUG_BUILD && logger.error('[Replay]', error);\n\n    if (DEBUG_BUILD && this._options._experiments && this._options._experiments.captureExceptions) {\n      captureException(error);\n    }\n  }\n\n  /**\n   * Loads (or refreshes) the current session.\n   */\n   _initializeSessionForSampling(previousSessionId) {\n    // Whenever there is _any_ error sample rate, we always allow buffering\n    // Because we decide on sampling when an error occurs, we need to buffer at all times if sampling for errors\n    const allowBuffering = this._options.errorSampleRate > 0;\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n        previousSessionId,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: this._options.sessionSampleRate,\n        allowBuffering,\n      },\n    );\n\n    this.session = session;\n  }\n\n  /**\n   * Checks and potentially refreshes the current session.\n   * Returns false if session is not recorded.\n   */\n   _checkSession() {\n    // If there is no session yet, we do not want to refresh anything\n    // This should generally not happen, but to be safe....\n    if (!this.session) {\n      return false;\n    }\n\n    const currentSession = this.session;\n\n    if (\n      shouldRefreshSession(currentSession, {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n      })\n    ) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._refreshSession(currentSession);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Refresh a session with a new one.\n   * This stops the current session (without forcing a flush, as that would never work since we are expired),\n   * and then does a new sampling based on the refreshed session.\n   */\n   async _refreshSession(session) {\n    if (!this._isEnabled) {\n      return;\n    }\n    await this.stop({ reason: 'refresh session' });\n    this.initializeSampling(session.id);\n  }\n\n  /**\n   * Adds listeners to record events for the replay\n   */\n   _addListeners() {\n    try {\n      WINDOW.document.addEventListener('visibilitychange', this._handleVisibilityChange);\n      WINDOW.addEventListener('blur', this._handleWindowBlur);\n      WINDOW.addEventListener('focus', this._handleWindowFocus);\n      WINDOW.addEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.addListeners();\n      }\n\n      // There is no way to remove these listeners, so ensure they are only added once\n      if (!this._hasInitializedCoreListeners) {\n        addGlobalListeners(this);\n\n        this._hasInitializedCoreListeners = true;\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n\n    this._performanceCleanupCallback = setupPerformanceObserver(this);\n  }\n\n  /**\n   * Cleans up listeners that were created in `_addListeners`\n   */\n   _removeListeners() {\n    try {\n      WINDOW.document.removeEventListener('visibilitychange', this._handleVisibilityChange);\n\n      WINDOW.removeEventListener('blur', this._handleWindowBlur);\n      WINDOW.removeEventListener('focus', this._handleWindowFocus);\n      WINDOW.removeEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.removeListeners();\n      }\n\n      if (this._performanceCleanupCallback) {\n        this._performanceCleanupCallback();\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Handle when visibility of the page content changes. Opening a new tab will\n   * cause the state to change to hidden because of content of current page will\n   * be hidden. Likewise, moving a different window to cover the contents of the\n   * page will also trigger a change to a hidden state.\n   */\n   __init() {this._handleVisibilityChange = () => {\n    if (WINDOW.document.visibilityState === 'visible') {\n      this._doChangeToForegroundTasks();\n    } else {\n      this._doChangeToBackgroundTasks();\n    }\n  };}\n\n  /**\n   * Handle when page is blurred\n   */\n   __init2() {this._handleWindowBlur = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.blur',\n    });\n\n    // Do not count blur as a user action -- it's part of the process of them\n    // leaving the page\n    this._doChangeToBackgroundTasks(breadcrumb);\n  };}\n\n  /**\n   * Handle when page is focused\n   */\n   __init3() {this._handleWindowFocus = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.focus',\n    });\n\n    // Do not count focus as a user action -- instead wait until they focus and\n    // interactive with page\n    this._doChangeToForegroundTasks(breadcrumb);\n  };}\n\n  /** Ensure page remains active when a key is pressed. */\n   __init4() {this._handleKeyboardEvent = (event) => {\n    handleKeyboardEvent(this, event);\n  };}\n\n  /**\n   * Tasks to run when we consider a page to be hidden (via blurring and/or visibility)\n   */\n   _doChangeToBackgroundTasks(breadcrumb) {\n    if (!this.session) {\n      return;\n    }\n\n    const expired = isSessionExpired(this.session, {\n      maxReplayDuration: this._options.maxReplayDuration,\n      sessionIdleExpire: this.timeouts.sessionIdleExpire,\n    });\n\n    if (expired) {\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Send replay when the page/tab becomes hidden. There is no reason to send\n    // replay if it becomes visible, since no actions we care about were done\n    // while it was hidden\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    void this.conditionalFlush();\n  }\n\n  /**\n   * Tasks to run when we consider a page to be visible (via focus and/or visibility)\n   */\n   _doChangeToForegroundTasks(breadcrumb) {\n    if (!this.session) {\n      return;\n    }\n\n    const isSessionActive = this.checkAndHandleExpiredSession();\n\n    if (!isSessionActive) {\n      // If the user has come back to the page within SESSION_IDLE_PAUSE_DURATION\n      // ms, we will re-use the existing session, otherwise create a new\n      // session\n      logInfo('[Replay] Document has become active, but session has expired');\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n  }\n\n  /**\n   * Update user activity (across session lifespans)\n   */\n   _updateUserActivity(_lastActivity = Date.now()) {\n    this._lastActivity = _lastActivity;\n  }\n\n  /**\n   * Updates the session's last activity timestamp\n   */\n   _updateSessionActivity(_lastActivity = Date.now()) {\n    if (this.session) {\n      this.session.lastActivity = _lastActivity;\n      this._maybeSaveSession();\n    }\n  }\n\n  /**\n   * Helper to create (and buffer) a replay breadcrumb from a core SDK breadcrumb\n   */\n   _createCustomBreadcrumb(breadcrumb) {\n    this.addUpdate(() => {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.throttledAddEvent({\n        type: EventType.Custom,\n        timestamp: breadcrumb.timestamp || 0,\n        data: {\n          tag: 'breadcrumb',\n          payload: breadcrumb,\n        },\n      });\n    });\n  }\n\n  /**\n   * Observed performance events are added to `this.performanceEntries`. These\n   * are included in the replay event before it is finished and sent to Sentry.\n   */\n   _addPerformanceEntries() {\n    const performanceEntries = createPerformanceEntries(this.performanceEntries).concat(this.replayPerformanceEntries);\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    return Promise.all(createPerformanceSpans(this, performanceEntries));\n  }\n\n  /**\n   * Clear _context\n   */\n   _clearContext() {\n    // XXX: `initialTimestamp` and `initialUrl` do not get cleared\n    this._context.errorIds.clear();\n    this._context.traceIds.clear();\n    this._context.urls = [];\n  }\n\n  /** Update the initial timestamp based on the buffer content. */\n   _updateInitialTimestampFromEventBuffer() {\n    const { session, eventBuffer } = this;\n    // If replay was started manually (=no sample rate was given),\n    // We do not want to back-port the initial timestamp\n    if (!session || !eventBuffer || this._requiresManualStart) {\n      return;\n    }\n\n    // we only ever update this on the initial segment\n    if (session.segmentId) {\n      return;\n    }\n\n    const earliestEvent = eventBuffer.getEarliestTimestamp();\n    if (earliestEvent && earliestEvent < this._context.initialTimestamp) {\n      this._context.initialTimestamp = earliestEvent;\n    }\n  }\n\n  /**\n   * Return and clear _context\n   */\n   _popEventContext() {\n    const _context = {\n      initialTimestamp: this._context.initialTimestamp,\n      initialUrl: this._context.initialUrl,\n      errorIds: Array.from(this._context.errorIds),\n      traceIds: Array.from(this._context.traceIds),\n      urls: this._context.urls,\n    };\n\n    this._clearContext();\n\n    return _context;\n  }\n\n  /**\n   * Flushes replay event buffer to Sentry.\n   *\n   * Performance events are only added right before flushing - this is\n   * due to the buffered performance observer events.\n   *\n   * Should never be called directly, only by `flush`\n   */\n   async _runFlush() {\n    const replayId = this.getSessionId();\n\n    if (!this.session || !this.eventBuffer || !replayId) {\n      DEBUG_BUILD && logger.error('[Replay] No session or eventBuffer found to flush.');\n      return;\n    }\n\n    await this._addPerformanceEntries();\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer || !this.eventBuffer.hasEvents) {\n      return;\n    }\n\n    // Only attach memory event if eventBuffer is not empty\n    await addMemoryEntry(this);\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer) {\n      return;\n    }\n\n    // if this changed in the meanwhile, e.g. because the session was refreshed or similar, we abort here\n    if (replayId !== this.getSessionId()) {\n      return;\n    }\n\n    try {\n      // This uses the data from the eventBuffer, so we need to call this before `finish()\n      this._updateInitialTimestampFromEventBuffer();\n\n      const timestamp = Date.now();\n\n      // Check total duration again, to avoid sending outdated stuff\n      // We leave 30s wiggle room to accomodate late flushing etc.\n      // This _could_ happen when the browser is suspended during flushing, in which case we just want to stop\n      if (timestamp - this._context.initialTimestamp > this._options.maxReplayDuration + 30000) {\n        throw new Error('Session is too long, not sending replay');\n      }\n\n      const eventContext = this._popEventContext();\n      // Always increment segmentId regardless of outcome of sending replay\n      const segmentId = this.session.segmentId++;\n      this._maybeSaveSession();\n\n      // Note this empties the event buffer regardless of outcome of sending replay\n      const recordingData = await this.eventBuffer.finish();\n\n      await sendReplay({\n        replayId,\n        recordingData,\n        segmentId,\n        eventContext,\n        session: this.session,\n        options: this.getOptions(),\n        timestamp,\n      });\n    } catch (err) {\n      this._handleException(err);\n\n      // This means we retried 3 times and all of them failed,\n      // or we ran into a problem we don't want to retry, like rate limiting.\n      // In this case, we want to completely stop the replay - otherwise, we may get inconsistent segments\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'sendReplay' });\n\n      const client = getClient();\n\n      if (client) {\n        client.recordDroppedEvent('send_error', 'replay');\n      }\n    }\n  }\n\n  /**\n   * Flush recording data to Sentry. Creates a lock so that only a single flush\n   * can be active at a time. Do not call this directly.\n   */\n   __init5() {this._flush = async ({\n    force = false,\n  }\n\n = {}) => {\n    if (!this._isEnabled && !force) {\n      // This can happen if e.g. the replay was stopped because of exceeding the retry limit\n      return;\n    }\n\n    if (!this.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.error('[Replay] Attempting to finish replay event after session expired.');\n      return;\n    }\n\n    if (!this.session) {\n      // should never happen, as we would have bailed out before\n      return;\n    }\n\n    const start = this.session.started;\n    const now = Date.now();\n    const duration = now - start;\n\n    // A flush is about to happen, cancel any queued flushes\n    this._debouncedFlush.cancel();\n\n    // If session is too short, or too long (allow some wiggle room over maxReplayDuration), do not send it\n    // This _should_ not happen, but it may happen if flush is triggered due to a page activity change or similar\n    const tooShort = duration < this._options.minReplayDuration;\n    const tooLong = duration > this._options.maxReplayDuration + 5000;\n    if (tooShort || tooLong) {\n      logInfo(\n        `[Replay] Session duration (${Math.floor(duration / 1000)}s) is too ${\n          tooShort ? 'short' : 'long'\n        }, not sending replay.`,\n        this._options._experiments.traceInternals,\n      );\n\n      if (tooShort) {\n        this._debouncedFlush();\n      }\n      return;\n    }\n\n    const eventBuffer = this.eventBuffer;\n    if (eventBuffer && this.session.segmentId === 0 && !eventBuffer.hasCheckout) {\n      logInfo('[Replay] Flushing initial segment without checkout.', this._options._experiments.traceInternals);\n      // TODO FN: Evaluate if we want to stop here, or remove this again?\n    }\n\n    // this._flushLock acts as a lock so that future calls to `_flush()`\n    // will be blocked until this promise resolves\n    if (!this._flushLock) {\n      this._flushLock = this._runFlush();\n      await this._flushLock;\n      this._flushLock = undefined;\n      return;\n    }\n\n    // Wait for previous flush to finish, then call the debounced `_flush()`.\n    // It's possible there are other flush requests queued and waiting for it\n    // to resolve. We want to reduce all outstanding requests (as well as any\n    // new flush requests that occur within a second of the locked flush\n    // completing) into a single flush.\n\n    try {\n      await this._flushLock;\n    } catch (err) {\n      DEBUG_BUILD && logger.error(err);\n    } finally {\n      this._debouncedFlush();\n    }\n  };}\n\n  /** Save the session, if it is sticky */\n   _maybeSaveSession() {\n    if (this.session && this._options.stickySession) {\n      saveSession(this.session);\n    }\n  }\n\n  /** Handler for rrweb.record.onMutation */\n   __init6() {this._onMutationHandler = (mutations) => {\n    const count = mutations.length;\n\n    const mutationLimit = this._options.mutationLimit;\n    const mutationBreadcrumbLimit = this._options.mutationBreadcrumbLimit;\n    const overMutationLimit = mutationLimit && count > mutationLimit;\n\n    // Create a breadcrumb if a lot of mutations happen at the same time\n    // We can show this in the UI as an information with potential performance improvements\n    if (count > mutationBreadcrumbLimit || overMutationLimit) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.mutations',\n        data: {\n          count,\n          limit: overMutationLimit,\n        },\n      });\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Stop replay if over the mutation limit\n    if (overMutationLimit) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'mutationLimit', forceFlush: this.recordingMode === 'session' });\n      return false;\n    }\n\n    // `true` means we use the regular mutation handling by rrweb\n    return true;\n  };}\n}\n\nfunction getOption(selectors, defaultSelectors) {\n  return [\n    ...selectors,\n    // sentry defaults\n    ...defaultSelectors,\n  ].join(',');\n}\n\n/**\n * Returns privacy related configuration for use in rrweb\n */\nfunction getPrivacyOptions({ mask, unmask, block, unblock, ignore }) {\n  const defaultBlockedElements = ['base[href=\"/\"]'];\n\n  const maskSelector = getOption(mask, ['.sentry-mask', '[data-sentry-mask]']);\n  const unmaskSelector = getOption(unmask, []);\n\n  const options = {\n    // We are making the decision to make text and input selectors the same\n    maskTextSelector: maskSelector,\n    unmaskTextSelector: unmaskSelector,\n\n    blockSelector: getOption(block, ['.sentry-block', '[data-sentry-block]', ...defaultBlockedElements]),\n    unblockSelector: getOption(unblock, []),\n    ignoreSelector: getOption(ignore, ['.sentry-ignore', '[data-sentry-ignore]', 'input[type=\"file\"]']),\n  };\n\n  return options;\n}\n\n/**\n * Masks an attribute if necessary, otherwise return attribute value as-is.\n */\nfunction maskAttribute({\n  el,\n  key,\n  maskAttributes,\n  maskAllText,\n  privacyOptions,\n  value,\n}) {\n  // We only mask attributes if `maskAllText` is true\n  if (!maskAllText) {\n    return value;\n  }\n\n  // unmaskTextSelector takes precendence\n  if (privacyOptions.unmaskTextSelector && el.matches(privacyOptions.unmaskTextSelector)) {\n    return value;\n  }\n\n  if (\n    maskAttributes.includes(key) ||\n    // Need to mask `value` attribute for `<input>` if it's a button-like\n    // type\n    (key === 'value' && el.tagName === 'INPUT' && ['submit', 'button'].includes(el.getAttribute('type') || ''))\n  ) {\n    return value.replace(/[\\S]/g, '*');\n  }\n\n  return value;\n}\n\nconst MEDIA_SELECTORS =\n  'img,image,svg,video,object,picture,embed,map,audio,link[rel=\"icon\"],link[rel=\"apple-touch-icon\"]';\n\nconst DEFAULT_NETWORK_HEADERS = ['content-length', 'content-type', 'accept'];\n\nlet _initialized = false;\n\n/**\n * Sentry integration for [Session Replay](https://sentry.io/for/session-replay/).\n *\n * See the [Replay documentation](https://docs.sentry.io/platforms/javascript/guides/session-replay/) for more information.\n *\n * @example\n *\n * ```\n * Sentry.init({\n *   dsn: '__DSN__',\n *   integrations: [Sentry.replayIntegration()],\n * });\n * ```\n */\nconst replayIntegration = ((options) => {\n  return new Replay(options);\n}) ;\n\n/**\n * Replay integration\n *\n * TODO: Rewrite this to be functional integration\n * Exported for tests.\n */\nclass Replay  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Replay';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n\n  /**\n   * Initial options passed to the replay integration, merged with default values.\n   * Note: `sessionSampleRate` and `errorSampleRate` are not required here, as they\n   * can only be finally set when setupOnce() is called.\n   *\n   * @private\n   */\n\n   constructor({\n    flushMinDelay = DEFAULT_FLUSH_MIN_DELAY,\n    flushMaxDelay = DEFAULT_FLUSH_MAX_DELAY,\n    minReplayDuration = MIN_REPLAY_DURATION,\n    maxReplayDuration = MAX_REPLAY_DURATION,\n    stickySession = true,\n    useCompression = true,\n    workerUrl,\n    _experiments = {},\n    maskAllText = true,\n    maskAllInputs = true,\n    blockAllMedia = true,\n\n    mutationBreadcrumbLimit = 750,\n    mutationLimit = 10000,\n\n    slowClickTimeout = 7000,\n    slowClickIgnoreSelectors = [],\n\n    networkDetailAllowUrls = [],\n    networkDetailDenyUrls = [],\n    networkCaptureBodies = true,\n    networkRequestHeaders = [],\n    networkResponseHeaders = [],\n\n    mask = [],\n    maskAttributes = ['title', 'placeholder'],\n    unmask = [],\n    block = [],\n    unblock = [],\n    ignore = [],\n    maskFn,\n\n    beforeAddRecordingEvent,\n    beforeErrorSampling,\n  } = {}) {\n    this.name = Replay.id;\n\n    const privacyOptions = getPrivacyOptions({\n      mask,\n      unmask,\n      block,\n      unblock,\n      ignore,\n    });\n\n    this._recordingOptions = {\n      maskAllInputs,\n      maskAllText,\n      maskInputOptions: { password: true },\n      maskTextFn: maskFn,\n      maskInputFn: maskFn,\n      maskAttributeFn: (key, value, el) =>\n        maskAttribute({\n          maskAttributes,\n          maskAllText,\n          privacyOptions,\n          key,\n          value,\n          el,\n        }),\n\n      ...privacyOptions,\n\n      // Our defaults\n      slimDOMOptions: 'all',\n      inlineStylesheet: true,\n      // Disable inline images as it will increase segment/replay size\n      inlineImages: false,\n      // collect fonts, but be aware that `sentry.io` needs to be an allowed\n      // origin for playback\n      collectFonts: true,\n      errorHandler: (err) => {\n        try {\n          err.__rrweb__ = true;\n        } catch (error) {\n          // ignore errors here\n          // this can happen if the error is frozen or does not allow mutation for other reasons\n        }\n      },\n    };\n\n    this._initialOptions = {\n      flushMinDelay,\n      flushMaxDelay,\n      minReplayDuration: Math.min(minReplayDuration, MIN_REPLAY_DURATION_LIMIT),\n      maxReplayDuration: Math.min(maxReplayDuration, MAX_REPLAY_DURATION),\n      stickySession,\n      useCompression,\n      workerUrl,\n      blockAllMedia,\n      maskAllInputs,\n      maskAllText,\n      mutationBreadcrumbLimit,\n      mutationLimit,\n      slowClickTimeout,\n      slowClickIgnoreSelectors,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders: _getMergedNetworkHeaders(networkRequestHeaders),\n      networkResponseHeaders: _getMergedNetworkHeaders(networkResponseHeaders),\n      beforeAddRecordingEvent,\n      beforeErrorSampling,\n\n      _experiments,\n    };\n\n    if (this._initialOptions.blockAllMedia) {\n      // `blockAllMedia` is a more user friendly option to configure blocking\n      // embedded media elements\n      this._recordingOptions.blockSelector = !this._recordingOptions.blockSelector\n        ? MEDIA_SELECTORS\n        : `${this._recordingOptions.blockSelector},${MEDIA_SELECTORS}`;\n    }\n\n    if (this._isInitialized && isBrowser()) {\n      throw new Error('Multiple Sentry Session Replay instances are not supported');\n    }\n\n    this._isInitialized = true;\n  }\n\n  /** If replay has already been initialized */\n   get _isInitialized() {\n    return _initialized;\n  }\n\n  /** Update _isInitialized */\n   set _isInitialized(value) {\n    _initialized = value;\n  }\n\n  /**\n   * Setup and initialize replay container\n   */\n   setupOnce() {\n    if (!isBrowser()) {\n      return;\n    }\n\n    this._setup();\n\n    // Once upon a time, we tried to create a transaction in `setupOnce` and it would\n    // potentially create a transaction before some native SDK integrations have run\n    // and applied their own global event processor. An example is:\n    // https://github.com/getsentry/sentry-javascript/blob/b47ceafbdac7f8b99093ce6023726ad4687edc48/packages/browser/src/integrations/useragent.ts\n    //\n    // So we call `this._initialize()` in next event loop as a workaround to wait for other\n    // global event processors to finish. This is no longer needed, but keeping it\n    // here to avoid any future issues.\n    setTimeout(() => this._initialize());\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * PerformanceObserver, Recording, Sentry SDK, etc)\n   */\n   start() {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.start();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, until an error occurs.\n   */\n   startBuffering() {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.startBuffering();\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n   stop() {\n    if (!this._replay) {\n      return Promise.resolve();\n    }\n\n    return this._replay.stop({ forceFlush: this._replay.recordingMode === 'session' });\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n   flush(options) {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return Promise.resolve();\n    }\n\n    return this._replay.sendBufferedReplayOrFlush(options);\n  }\n\n  /**\n   * Get the current session ID.\n   */\n   getReplayId() {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return;\n    }\n\n    return this._replay.getSessionId();\n  }\n\n  /**\n   * Initializes replay.\n   */\n   _initialize() {\n    if (!this._replay) {\n      return;\n    }\n\n    // We have to run this in _initialize, because this runs in setTimeout\n    // So when this runs all integrations have been added\n    // Before this, we cannot access integrations on the client,\n    // so we need to mutate the options here\n    this._maybeLoadFromReplayCanvasIntegration();\n\n    this._replay.initializeSampling();\n  }\n\n  /** Setup the integration. */\n   _setup() {\n    // Client is not available in constructor, so we need to wait until setupOnce\n    const finalOptions = loadReplayOptionsFromClient(this._initialOptions);\n\n    this._replay = new ReplayContainer({\n      options: finalOptions,\n      recordingOptions: this._recordingOptions,\n    });\n  }\n\n  /** Get canvas options from ReplayCanvas integration, if it is also added. */\n   _maybeLoadFromReplayCanvasIntegration() {\n    // To save bundle size, we skip checking for stuff here\n    // and instead just try-catch everything - as generally this should all be defined\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\n    try {\n      const client = getClient();\n      const canvasIntegration = client.getIntegrationByName('ReplayCanvas')\n\n;\n      if (!canvasIntegration) {\n        return;\n      }\n\n      this._replay['_canvas'] = canvasIntegration.getOptions();\n    } catch (e) {\n      // ignore errors here\n    }\n    /* eslint-enable @typescript-eslint/no-non-null-assertion */\n  }\n}Replay.__initStatic();\n\n/** Parse Replay-related options from SDK options */\nfunction loadReplayOptionsFromClient(initialOptions) {\n  const client = getClient();\n  const opt = client && (client.getOptions() );\n\n  const finalOptions = {\n    sessionSampleRate: 0,\n    errorSampleRate: 0,\n    ...dropUndefinedKeys(initialOptions),\n  };\n\n  if (!opt) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn('SDK client is not available.');\n    });\n    return finalOptions;\n  }\n\n  const replaysSessionSampleRate = parseSampleRate(opt.replaysSessionSampleRate);\n  const replaysOnErrorSampleRate = parseSampleRate(opt.replaysOnErrorSampleRate);\n\n  if (replaysSessionSampleRate == null && replaysOnErrorSampleRate == null) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.',\n      );\n    });\n  }\n\n  if (replaysSessionSampleRate != null) {\n    finalOptions.sessionSampleRate = replaysSessionSampleRate;\n  }\n\n  if (replaysOnErrorSampleRate != null) {\n    finalOptions.errorSampleRate = replaysOnErrorSampleRate;\n  }\n\n  return finalOptions;\n}\n\nfunction _getMergedNetworkHeaders(headers) {\n  return [...DEFAULT_NETWORK_HEADERS, ...headers.map(header => header.toLowerCase())];\n}\n\n/**\n * This is a small utility to get a type-safe instance of the Replay integration.\n */\nfunction getReplay() {\n  const client = getClient();\n  return client && client.getIntegrationByName('Replay');\n}\n\nexport { getReplay, replayIntegration };\n//# sourceMappingURL=index.js.map\n"],"names":["DEBUG_BUILD","__SENTRY_DEBUG__","cachedImplementations","getNativeImplementation","name","cached","impl","bind","document","createElement","sandbox","hidden","head","appendChild","contentWindow","removeChild","e","warn","clearCachedImplementation","undefined","setTimeout","rest","DEBOUNCE_DURATION","debounceTimerID","lastCapturedEventType","lastCapturedEventTargetId","addClickKeypressInstrumentationHandler","handler","instrumentDOM","triggerDOMHandler","globalDOMEventHandler","makeDOMEventHandler","addEventListener","forEach","target","proto","prototype","hasOwnProperty","originalAddEventListener","type","listener","options","el","this","handlers","__sentry_instrumentation_handlers__","handlerForType","refCount","call","originalRemoveEventListener","Object","keys","length","globalListener","event","getEventTarget","eventType","tagName","isContentEditable","shouldSkipDOMEvent","_sentryId","isSimilarToLastCapturedEvent","global","clearTimeout","lastHref","addHistoryInstrumentationHandler","instrumentHistory","oldOnPopState","onpopstate","historyReplacementFunction","originalHistoryFunction","args","url","from","to","String","handlerData","apply","location","href","_oO","history","SENTRY_XHR_DATA_KEY","addXhrInstrumentationHandler","instrumentXHR","XMLHttpRequest","xhrproto","originalOpen","startTimestamp","method","toUpperCase","toString","e2","parseUrl","request_headers","match","__sentry_own_request__","onreadystatechangeHandler","xhrInfo","readyState","status_code","status","endTimestamp","xhr","onreadystatechange","original","readyStateArgs","setRequestHeaderArgs","header","value","toLowerCase","originalSend","sentryXhrData","body","MAX_INT_AS_BYTES","_lcpEntry","_clsEntry","_performanceCursor","_measurements","startTrackingWebVitals","performance","mark","fidCallback","metric","entry","entries","timeOrigin","startTime","log","unit","clsCallback","lcpCallback","ttfbCallback","startTrackingLongTasks","duration","span","op","attributes","end","startTrackingInteractions","spanOptions","componentName","addPerformanceEntries","getEntries","performanceEntries","start_timestamp","transactionStartTime","slice","entryType","_addPerformanceNavigationTiming","responseEnd","requestStart","responseStart","_addRequest","_addNavigationSpans","measureStartTimestamp","measureEndTimestamp","_addMeasureSpans","firstHidden","shouldRecord","firstHiddenTime","resourceUrl","initiatorType","parsedUrl","setResourceEntrySizeData","renderBlockingStatus","protocol","split","pop","host","includes","origin","replace","_addResourceSpans","Math","max","navigator","connection","effectiveType","setAttribute","rtt","deviceMemory","hardwareConcurrency","_trackNavigator","navEntry","_addTtfbRequestTimeToMeasurements","oldValue","measurementTimestamp","normalizedValue","abs","delta","fidMark","cls","measurementName","element","id","trim","size","sources","source","index","node","_tagMetricInfo","eventEnd","start","key","dataKey","entryVal","LAST_INTERACTIONS","INTERACTIONS_ROUTE_MAP","Map","startTrackingINP","inpCallback","client","find","INP_ENTRY_MAP","interactionId","interactionType","getOptions","scope","activeSpan","rootSpan","routeName","get","description","getScopeData","transactionName","user","getUser","replay","getIntegrationByName","replayId","getReplayId","userDisplay","email","ip_address","profileId","contexts","profile","profile_id","release","environment","transaction","replay_id","experimental","standalone","addEvent","click","pointerdown","pointerup","mousedown","mouseup","touchstart","touchend","mouseover","mouseout","mouseenter","mouseleave","pointerover","pointerout","pointerenter","pointerleave","dragstart","dragend","drag","dragenter","dragleave","dragover","drop","keydown","keyup","keypress","input","registerInpInteractionListener","latestRoute","handleEntries","has","last","shift","delete","push","set","bindReporter","callback","thresholds","reportAllChanges","prevValue","forceReport","rating","getRating","getActivationStart","getNavigationEntry","activationStart","initMetric","navigationType","prerendering","wasDiscarded","Date","now","floor","random","observe","opts","PerformanceObserver","supportedEntryTypes","po","list","Promise","resolve","then","assign","buffered","onHidden","cb","onHiddenOrPageHide","visibilityState","runOnce","called","arg","whenActivated","FCPThresholds","CLSThresholds","onCLS","onReport","visibilityWatcher","getVisibilityWatcher","report","disconnect","onFCP","sessionValue","sessionEntries","hadRecentInput","firstSessionEntry","lastSessionEntry","takeRecords","FIDThresholds","onFID","handleEntry","processingStart","interactionCountEstimate","minKnownInteractionId","Infinity","maxKnownInteractionId","updateEstimate","min","initInteractionCountPolyfill","durationThreshold","INPThresholds","getInteractionCountForNavigation","interactionCount","longestInteractionList","longestInteractionMap","processEntry","minLongestInteraction","existingInteraction","latency","interaction","sort","a","b","splice","i","onINP","some","prevEntry","inp","candidateInteractionIndex","estimateP98LongestInteraction","PerformanceEventTiming","LCPThresholds","reportedMetricIDs","onLCP","lastEntry","stopListening","TTFBThresholds","whenReady","onTTFB","instrumented","_previousCls","_previousFid","_previousLcp","_previousTtfb","_previousInp","addClsInstrumentationHandler","stopOnCallback","addMetricObserver","instrumentCls","addLcpInstrumentationHandler","instrumentLcp","addFidInstrumentationHandler","instrumentFid","addTtfbInstrumentationHandler","instrumentTtfb","addInpInstrumentationHandler","instrumentInp","addPerformanceInstrumentationHandler","addHandler","triggerHandlers","instrumentPerformanceObserver","getCleanupCallback","data","typeHandlers","logger","error","instrumentFn","previousValue","indexOf","isPerformanceEventTiming","isMeasurementValue","isFinite","startAndEndSpan","parentSpan","startTimeInSeconds","endTime","ctx","parentStartTime","updateStartTime","getBrowserPerformanceAPI","msToSec","time","getEntriesByType","onVisibilityUpdate","timeStamp","removeEventListener","WINDOW","REPLAY_SESSION_KEY","REPLAY_EVENT_NAME","UNABLE_TO_SEND_REPLAY","NETWORK_BODY_MAX_SIZE","CONSOLE_ARG_MAX_SIZE","REPLAY_MAX_EVENT_BUFFER_SIZE","_optionalChain$5","ops","lastAccessLHS","fn","NodeType$1","isShadowRoot","n","_","Boolean","_2","shadowRoot","isNativeShadowDom","stringifyStylesheet","s","rules","cssRules","cssText","Array","stringifyRule","join","rule","importStringified","isCSSImportRule","styleSheet","statement","JSON","stringify","layerName","supportsText","media","mediaText","escapeImportStatement","isCSSStyleRule","selectorText","NodeType","Mirror","constructor","idNodeMap","nodeMetaMap","WeakMap","getId","lhs","_3","getMeta","_4","_5","getNode","getIds","removeNodeFromMap","childNodes","childNode","hasNode","add","meta","oldNode","reset","shouldMaskInput","maskInputOptions","maskInputValue","isMasked","maskInputFn","text","repeat","str","ORIGINAL_ATTRIBUTE_NAME","getInputType","hasAttribute","getInputValue","getAttribute","_id","tagNameRegex","RegExp","IGNORED_NODE","genId","canvasService","canvasCtx","URL_IN_CSS_REF","URL_PROTOCOL_MATCH","URL_WWW_MATCH","DATA_URI","absoluteToStylesheet","quote1","path1","quote2","path2","path3","filePath","maybeQuote","test","extractOrigin","stack","parts","part","SRCSET_NOT_SPACES","SRCSET_COMMAS_OR_SPACES","absoluteToDoc","doc","attributeValue","getHref","transformAttribute","maskAttributeFn","pos","collectCharacters","regEx","chars","exec","substring","output","descriptorsStr","inParens","c","charAt","getAbsoluteSrcsetString","ignoreAttribute","_value","distanceToMatch","matchPredicate","limit","distance","nodeType","ELEMENT_NODE","parentNode","createMatchPredicate","className","selector","matches","regex","eIndex","classList","elementClassMatchesRegex","needMaskingText","maskTextClass","maskTextSelector","unmaskTextClass","unmaskTextSelector","maskAllText","parentElement","autocomplete","maskDistance","unmaskDistance","lowerIfExists","maybeAttr","serializeNodeWithId","mirror","blockClass","blockSelector","unblockSelector","skipChild","inlineStylesheet","maskTextFn","slimDOMOptions","dataURLOptions","inlineImages","recordCanvas","onSerialize","onIframeLoad","iframeLoadTimeout","onStylesheetLoad","stylesheetLoadTimeout","keepIframeSrcFn","newlyAddedElement","preserveWhiteSpace","_serializedNode","rootId","docId","getRootId","DOCUMENT_NODE","compatMode","Document","DOCUMENT_TYPE_NODE","DocumentType","publicId","systemId","needBlock","contains","_isBlockedElement","HTMLFormElement","processedTagName","getValidTagName","len","attr","stylesheet","styleSheets","rel","_cssText","sheet","innerText","textContent","checked","forceMask","selected","__context","canvas","getContext","x","width","y","height","getImageData","originalGetImageData","Uint32Array","buffer","pixel","is2DCanvasBlank","rr_dataURL","toDataURL","quality","canvasDataURL","blankCanvas","image","crossOrigin","recordInlineImage","naturalWidth","naturalHeight","drawImage","err","console","currentSrc","removeAttribute","complete","rr_mediaState","paused","rr_mediaCurrentTime","currentTime","scrollLeft","rr_scrollLeft","scrollTop","rr_scrollTop","getBoundingClientRect","class","rr_width","rr_height","isCustomElement","src","contentDocument","rr_src","customElements","Element","isSVG","ownerSVGElement","isCustom","serializeElementNode","TEXT_NODE","parentTagName","isStyle","isScript","isTextarea","nextSibling","previousSibling","_6","_7","_8","textarea","Text","serializeTextNode","CDATA_SECTION_NODE","CDATA","COMMENT_NODE","Comment","serializeNode","sn","comment","script","as","endsWith","headFavicon","headMetaDescKeywords","headMetaSocial","property","headMetaRobots","headMetaHttpEquiv","headMetaAuthorship","headMetaVerification","slimDOMExcluded","serializedNode","recordChild","isShadowHost","headWhitespace","bypassOptions","childN","serializedChildNode","isElement$1","isShadow","iframeEl","win","fired","timer","blankUrl","onceIframeLoaded","iframeDoc","serializedIframeNode","link","styleSheetLoadTimeout","styleSheetLoaded","onceStylesheetLoaded","serializedLinkNode","_optionalChain$4","on","capture","passive","DEPARTED_MIRROR_ACCESS_WARNING","_mirror","map","throttle$1","func","wait","timeout","previous","leading","remaining","context","getImplementation","clearTimeout$1","trailing","setTimeout$1","hookSetter","d","isRevoked","window","getOwnPropertyDescriptor","defineProperty","patch","replacement","wrapped","defineProperties","__rrweb_original__","enumerable","Proxy","Reflect","prop","receiver","nowTimestamp","getWindowScroll","left","scrollingElement","pageXOffset","documentElement","top","pageYOffset","_9","_10","_11","_12","_13","_14","getWindowHeight","innerHeight","clientHeight","getWindowWidth","innerWidth","clientWidth","closestElementOfNode","isBlocked","checkAncestors","blockedPredicate","isUnblocked","blockDistance","unblockDistance","isIgnored","isAncestorRemoved","legacy_isTouchEvent","changedTouches","isSerializedIframe","nodeName","isSerializedStylesheet","hasShadowRoot","_18","getTime","StyleSheetMirror","styleIDMap","idStyleMap","newId","getStyle","generateId","getShadowHost","shadowHost","_19","getRootNode","_20","_21","Node","DOCUMENT_FRAGMENT_NODE","inDom","ownerDocument","rootShadowHost","getRootShadowHost","shadowHostInDom","EventType","EventType2","IncrementalSource","IncrementalSource2","MouseInteractions","MouseInteractions2","PointerTypes","PointerTypes2","_optionalChain$3","isNodeInLinkedList","DoubleLinkedList","tail","position","Error","current","next","addNode","__ln","removeNode","moveKey","parentId","MutationBuffer","frozen","locked","texts","attributeMap","removes","mapRemoves","movedMap","addedSet","Set","movedSet","droppedSet","processMutations","mutations","processMutation","emit","adds","addedIds","addList","getNextId","ns","nextId","pushAdd","currentN","iframeManager","addIframe","stylesheetManager","trackLinkElement","shadowDomManager","addShadowRoot","iframe","childSn","attachIframe","observeAttachShadow","attachLinkElement","isParentRemoved","isAncestorInSet","candidate","tailNode","_node","unhandledNode","payload","filter","attribute","style","diffAsStr","styleDiff","unchangedAsStr","_unchangedStyles","mutationCb","m","attributeName","isInputMasked","item","unattachedDoc","implementation","createHTMLDocument","old","pname","newValue","getPropertyValue","newPriority","getPropertyPriority","addedNodes","genAdds","removedNodes","nodeId","isSerialized","deepDelete","processedNodeManager","inOtherBuffer","targetId","init","freeze","canvasManager","unfreeze","isFrozen","lock","unlock","addsSet","_isParentRemoved","r","_isAncestorInSet","errorHandler","registerErrorHandler","unregisterErrorHandler","callbackWrapper","_optionalChain$2","mutationBuffers","path","composedPath","initMutationObserver","rootEl","mutationBuffer","mutationObserverCtor","MutationObserver","__rrMutationObserver","angularZoneSymbol","Zone","__symbol__","observer","onMutation","attributeOldValue","characterData","characterDataOldValue","childList","subtree","initScrollObserver","scrollCb","sampling","evt","defaultView","scrollLeftTop","scroll","INPUT_TAGS","lastInputValueMap","initInputObserver","inputCb","ignoreClass","ignoreSelector","userTriggeredOnInput","eventHandler","userTriggered","isTrusted","isChecked","cbWithDedup","querySelectorAll","v","lastInputValue","eventName","currentWindow","h","propertyDescriptor","HTMLInputElement","hookProperties","HTMLSelectElement","HTMLTextAreaElement","HTMLOptionElement","p","getNestedCSSRulePositions","childRule","hasNestedCSSRule","parentRule","CSSGroupingRule","CSSMediaRule","CSSSupportsRule","CSSConditionRule","unshift","parentStyleSheet","recurse","getIdAndStyleId","styleMirror","styleId","ownerNode","initAdoptedStyleSheetObserver","hostId","patchTarget","ShadowRoot","originalPropertyDescriptor","configurable","sheets","result","_15","_16","adoptStyleSheets","initObservers","o","_hooks","mutationObserver","mousemoveHandler","mousemoveCb","mousemove","threshold","callbackThreshold","mousemoveCallback","timeBaseline","positions","wrappedCb","totalOffset","timeOffset","updatePosition","clientX","clientY","DragEvent","Drag","MouseEvent","MouseMove","TouchMove","initMoveObserver","mouseInteractionHandler","mouseInteractionCb","mouseInteraction","disableMap","currentPointerType","Number","isNaN","eventKey","pointerType","thisEventKey","Mouse","Touch","Pen","MouseDown","MouseUp","startsWith","Click","getHandler","PointerEvent","TouchStart","TouchEnd","initMouseInteractionObserver","scrollHandler","viewportResizeHandler","viewportResizeCb","lastH","lastW","initViewportResizeObserver","inputHandler","mediaInteractionHandler","mediaInteractionCb","volume","muted","playbackRate","initMediaInteractionObserver","styleSheetObserver","styleSheetRuleCb","CSSStyleSheet","insertRule","thisArg","argumentsList","deleteRule","replaceSync","supportedNestedCSSRuleTypes","canMonkeyPatchNestedCSSRule","unmodifiedFunctions","typeKey","initStyleSheetObserver","adoptedStyleSheetObserver","styleDeclarationObserver","styleDeclarationCb","ignoreCSSAttributes","setProperty","CSSStyleDeclaration","priority","_17","removeProperty","remove","initStyleDeclarationObserver","fontObserver","collectFonts","fontCb","fontMap","originalFontFace","FontFace","family","descriptors","fontFace","fontSource","Uint8Array","restoreHandler","fonts","initFontObserver","selectionObserver","param","selectionCb","collapsed","updateSelection","selection","getSelection","isCollapsed","ranges","count","rangeCount","range","getRangeAt","startContainer","startOffset","endContainer","endOffset","initSelectionObserver","customElementObserver","customElementCb","define","initCustomElementObserver","pluginHandlers","plugin","plugins","CrossOriginIframeMirror","generateIdFn","iframeIdToRemoteIdMap","iframeRemoteIdToIdMap","remoteId","idToRemoteMap","remoteToIdMap","idToRemoteIdMap","getIdToRemoteIdMap","remoteIdToIdMap","getRemoteIdToIdMap","getRemoteId","getRemoteIds","ids","_optionalChain$1","IframeManagerNoop","crossOriginIframeMirror","crossOriginIframeRootIdMap","addLoadListener","IframeManager","iframes","crossOriginIframeMap","wrappedEmit","recordCrossOriginIframes","crossOriginIframeStyleMirror","handleMessage","loadListener","isAttachIframe","adoptedStyleSheets","message","crossOriginMessageEvent","transformedEvent","transformCrossOriginEvent","isCheckout","FullSnapshot","replaceIdOnNode","patchRootIdOnNode","timestamp","IncrementalSnapshot","Mutation","Meta","Load","DomContentLoaded","Plugin","Custom","replaceIds","ViewportResize","MediaInteraction","MouseInteraction","Scroll","CanvasMutation","Input","StyleSheetRule","StyleDeclaration","replaceStyleIds","Font","Selection","AdoptedStyleSheet","styles","iframeMirror","obj","isArray","child","ShadowDomManagerNoop","ShadowDomManager","shadowDoms","WeakSet","restoreHandlers","patchAttachShadow","iframeElement","manager","option","CanvasManagerNoop","snapshot","StylesheetManager","trackedLinkElements","adoptedStyleSheetCb","linkEl","trackStylesheetInLinkElement","adoptedStyleSheetData","styleIds","CSSRule","ProcessedNodeManager","nodeMap","loop","periodicallyClear","onRequestAnimationFrame","clear","thisBuffer","buffers","destroy","_takeFullSnapshot","record","checkoutEveryNms","checkoutEveryNth","maskAllInputs","_maskInputOptions","_slimDOMOptions","maxCanvasSize","packFn","mousemoveWait","recordAfter","getCanvasManager","inEmittingFrame","parent","passEmitsToParent","color","date","month","number","search","tel","week","select","radio","checkbox","lastFullSnapshotEvent","NodeList","DOMTokenList","TypeError","polyfill","incrementalSnapshotCount","eventProcessor","buf","postMessage","exceedCount","exceedTime","takeFullSnapshot","wrappedMutationEmit","wrappedScrollEmit","wrappedCanvasMutationEmit","__RRWEB_EXCLUDE_IFRAME__","getMirror","nodeMirror","getCanvasManagerFn","_getCanvasManager","__RRWEB_EXCLUDE_SHADOW_DOM__","slimDOM","initialOffset","canvasMutationCb","CustomElement","ReplayEventTypeIncrementalSnapshot","timestampToMs","timestampToS","addBreadcrumbEvent","breadcrumb","category","triggerUserActivity","checkAndHandleExpiredSession","addUpdate","throttledAddEvent","tag","INTERACTIVE_SELECTOR","getClosestInteractive","closest","getClickTargetNode","getTargetNode","isEventWithTarget","ClickDetector","slowClickConfig","_addBreadcrumbEvent","_lastMutation","_lastScroll","_clicks","_timeout","_threshold","_scollTimeout","scrollTimeout","_replay","_ignoreSelector","addListeners","cleanupWindowOpen","nowInSeconds","originalWindowOpen","_teardown","removeListeners","_checkClickTimeout","handleClick","SLOW_CLICK_TAGS","ignoreElement","isClickBreadcrumb","newClick","clickBreadcrumb","clickCount","_scheduleCheckClicks","registerMutation","registerScroll","registerClick","_handleMultiClick","_getClicks","_checkClicks","timedOutClicks","mutationAfter","scrollAfter","_generateBreadcrumbs","hadScroll","hadMutation","isSlowClick","timeAfterClickMs","endReason","route","getCurrentRoute","createBreadcrumb","ATTRIBUTES_TO_RECORD","getAttributesToRecord","normalizedKey","getBaseDomBreadcrumb","isElement","ENTRY_TYPES","resource","decodedBodySize","encodedBodySize","responseStatus","transferSize","getAbsoluteTime","statusCode","paint","navigation","domComplete","domContentLoadedEventStart","domContentLoadedEventEnd","domInteractive","loadEventStart","loadEventEnd","redirectCount","webVitalHandler","getter","replayPerformanceEntries","createPerformanceEntry","getLargestContentfulPaint","getWebVital","getCumulativeLayoutShift","firstEntry","getFirstInputDelay","getInteractionToNextPaint","logInfo","shouldAddBreadcrumb","info","addLogBreadcrumb","logInfoNextTick","level","EventBufferSizeExceededError","super","EventBufferArray","events","_totalSize","hasCheckout","hasEvents","eventSize","finish","eventsRet","getEarliestTimestamp","WorkerHandler","worker","_worker","ensureReady","_ensureReadyPromise","reject","success","once","terminate","_getAndIncrementId","response","EventBufferCompressionWorker","_earliestTimestamp","_sendEventToWorker","_finishRequest","EventBufferProxy","_fallback","_compression","_used","_ensureWorkerIsLoadedPromise","_ensureWorkerIsLoaded","ensureWorkerIsLoaded","_switchToCompressionWorker","addEventPromises","all","hasSessionStorage","sessionStorage","isSampled","sampleRate","makeSession","session","started","lastActivity","segmentId","sampled","previousSessionId","saveSession","setItem","createSession","sessionSampleRate","allowBuffering","stickySession","getSessionSampleType","isExpired","initialTime","expiry","targetTime","isSessionExpired","maxReplayDuration","sessionIdleExpire","shouldRefreshSession","loadOrCreateSession","traceInternals","sessionOptions","existingSession","sessionStringFromStorage","getItem","sessionObj","parse","fetchSession","addEventSync","shouldAddEvent","_addEvent","async","eventBuffer","recordingMode","eventAfterPossibleCallback","isCustomEvent","maybeApplyCallback","beforeAddRecordingEvent","reason","stop","recordDroppedEvent","isPaused","isEnabled","timestampInMs","timeouts","sessionIdlePause","initialTimestamp","_experiments","isErrorEvent","isTransactionEvent","isFeedbackEvent","isBreadcrumbWithCategory","createPerformanceSpans","addNetworkBreadcrumb","shouldFilterRequest","getBodySize","textEncoder","TextEncoder","encode","URLSearchParams","FormData","formDataStr","_serializeFormData","Blob","ArrayBuffer","byteLength","parseContentLengthHeader","parseInt","getBodyString","mergeWarning","warning","headers","_meta","warnings","newMeta","existingWarnings","makeNetworkReplayBreadcrumb","request","buildSkippedNetworkRequestOrResponse","bodySize","buildNetworkRequestOrResponse","normalizedBody","exceedsSizeLimit","isProbablyJson","first","_strIsProbablyJson","truncatedBody","e3","normalizeNetworkBody","getAllowedHeaders","allowedHeaders","reduce","filteredHeaders","formData","urlMatches","urls","fullUrl","baseURI","fixedUrl","URL","getFullUrl","_getFetchRequestArgBody","fetchArgs","getAllHeaders","allHeaders","getHeadersFromOptions","Headers","handleNetworkBreadcrumbs","networkDetailAllowUrls","networkDetailDenyUrls","networkCaptureBodies","networkRequestHeaders","networkResponseHeaders","hint","_isXhrBreadcrumb","_isXhrHint","reqSize","resSize","getResponseHeader","responseType","_getBodySize","request_body_size","response_body_size","enrichXhrBreadcrumb","requestBodySize","responseBodySize","getAllResponseHeaders","acc","line","getResponseHeaders","requestBody","requestWarning","responseBody","responseWarning","errors","responseText","outerHTML","_parseXhrResponse","_getXhrResponseBody","_prepareXhrData","captureXhrBreadcrumbToReplay","_isFetchBreadcrumb","_isFetchHint","enrichFetchBreadcrumb","captureDetails","bodyStr","_getRequestInfo","bodyText","res","clone","_tryCloneResponse","_getResponseText","txt","finally","_tryGetResponseText","_parseFetchResponseBody","getResponseData","_getResponseInfo","_prepareFetchData","captureFetchBreadcrumbToReplay","beforeAddNetworkBreadcrumb","createMemoryEntry","memoryEntry","jsHeapSizeLimit","totalJSHeapSize","usedJSHeapSize","memory","getHandleRecordingEmit","hadFirstEvent","_isCheckout","clickDetector","isIncrementalEvent","isIncrementalMouseInteraction","HTMLElement","updateClickDetectorForRecordingEvent","setInitialState","shouldRecordCanvas","isRecordingCanvas","errorSampleRate","useCompressionOption","useCompression","blockAllMedia","networkDetailHasUrls","networkRequestHasHeaders","networkResponseHasHeaders","createOptionsEvent","addSettingsEvent","earliestEvent","flush","TransportStatusCodeError","RateLimitError","rateLimits","sendReplay","replayData","retryConfig","interval","recordingData","segment_id","eventContext","preparedRecordingData","payloadWithSequence","replayHeaders","sequence","prepareRecordingData","errorIds","traceIds","transport","getTransport","dsn","getDsn","baseEvent","replay_start_timestamp","error_ids","trace_ids","replay_type","replayEvent","event_id","eventHint","integrations","_integrations","preparedEvent","platform","metadata","getSdkMetadata","version","sdk","prepareReplayEvent","sdkProcessingMetadata","envelope","tunnel","createReplayEnvelope","send","cause","sendReplayRequest","_retryCount","captureExceptions","THROTTLED","ReplayContainer","recordingOptions","__init","__init2","__init3","__init4","__init5","__init6","_lastActivity","_isEnabled","_isPaused","_requiresManualStart","_hasInitializedCoreListeners","_context","initialUrl","_recordingOptions","_options","_debouncedFlush","callbackReturnValue","timerId","maxTimerId","maxWait","invokeFunc","cancelTimers","debounced","cancel","debounce","_flush","flushMinDelay","flushMaxDelay","_throttledAddEvent","maxCount","durationSeconds","counter","isThrottled","_cleanup","values","wasThrottled","throttle","slowClickTimeout","slowClickIgnoreSelectors","_canvas","initializeSampling","requiresManualStart","_initializeSessionForSampling","_initializeRecording","_handleException","_updateUserActivity","startBuffering","startRecording","canvasOptions","_stopRecording","_onMutationHandler","stopRecording","forceFlush","_removeListeners","force","removeItem","deleteSession","pause","resume","_checkSession","sendBufferedReplayOrFlush","continueRecording","flushImmediate","activityTime","hasStoppedRecording","_updateSessionActivity","_maybeSaveSession","cbResult","updateUserActivity","conditionalFlush","cancelFlush","getSessionId","urlPath","pathname","hash","_clearContext","lastActiveSpan","lastRootSpan","workerUrl","customWorkerUrl","Worker","__SENTRY_EXCLUDE_REPLAY_WORKER__","createObjectURL","_loadWorker","createEventBuffer","_addListeners","currentSession","_refreshSession","_handleVisibilityChange","_handleWindowBlur","_handleWindowFocus","_handleKeyboardEvent","isClick","maxStringLength","getDomTarget","handleDom","altKey","metaKey","ctrlKey","shiftKey","handleDomListener","handleHistory","handleHistorySpanListener","arguments","isTruncated","normalizedArgs","normalizedArg","normalizeConsoleBreadcrumb","normalizeBreadcrumb","beforeAddBreadcrumb","handleBreadcrumbs","isReplayEvent","breadcrumbs","feedback","feedbackId","addFeedbackBreadcrumb","exception","originalException","__rrweb__","isRrwebError","isErrorEventSampled","shouldSampleForBufferEvent","tags","handleGlobalEventListener","exceptionValue","handleHydrationError","handleBeforeSendEvent","sendResponse","replayContext","trace","trace_id","handleTransactionEvent","beforeErrorSampling","handleErrorEvent","handleAfterSendEvent","dsc","feedbackEvent","includeReplay","addGlobalListeners","_performanceCleanupCallback","addPerformanceEntry","onEntries","clearCallbacks","clearCallback","setupPerformanceObserver","_doChangeToForegroundTasks","_doChangeToBackgroundTasks","isInputElement","hasModifierKey","isCharacterKey","getKeyboardBreadcrumb","handleKeyboardEvent","_createCustomBreadcrumb","_addPerformanceEntries","concat","_updateInitialTimestampFromEventBuffer","_popEventContext","_runFlush","addMemoryEntry","tooShort","minReplayDuration","tooLong","_flushLock","mutationLimit","overMutationLimit","mutationBreadcrumbLimit","getOption","selectors","defaultSelectors","MEDIA_SELECTORS","DEFAULT_NETWORK_HEADERS","_initialized","replayIntegration","Replay","__initStatic","MAX_REPLAY_DURATION","mask","maskAttributes","unmask","block","unblock","ignore","maskFn","privacyOptions","getPrivacyOptions","password","maskAttribute","_initialOptions","_getMergedNetworkHeaders","_isInitialized","setupOnce","_setup","_initialize","_maybeLoadFromReplayCanvasIntegration","finalOptions","initialOptions","opt","replaysSessionSampleRate","replaysOnErrorSampleRate","loadReplayOptionsFromClient","canvasIntegration"],"sourceRoot":""}