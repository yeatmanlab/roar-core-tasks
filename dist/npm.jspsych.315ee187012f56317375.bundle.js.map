{"version":3,"file":"npm.jspsych.315ee187012f56317375.bundle.js","mappings":"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","sources":["webpack://@bdelab/roar-levantecore-tasks/./node_modules/@jspsych/plugin-audio-keyboard-response/dist/index.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@jspsych/plugin-fullscreen/dist/index.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@jspsych/plugin-html-slider-response/dist/index.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@jspsych/plugin-preload/dist/index.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/jspsych/dist/index.js"],"sourcesContent":["import { ParameterType } from 'jspsych';\n\nconst info = {\n    name: \"audio-keyboard-response\",\n    parameters: {\n        /** The audio file to be played. */\n        stimulus: {\n            type: ParameterType.AUDIO,\n            pretty_name: \"Stimulus\",\n            default: undefined,\n        },\n        /** Array containing the key(s) the subject is allowed to press to respond to the stimulus. */\n        choices: {\n            type: ParameterType.KEYS,\n            pretty_name: \"Choices\",\n            default: \"ALL_KEYS\",\n        },\n        /** Any content here will be displayed below the stimulus. */\n        prompt: {\n            type: ParameterType.HTML_STRING,\n            pretty_name: \"Prompt\",\n            default: null,\n        },\n        /** The maximum duration to wait for a response. */\n        trial_duration: {\n            type: ParameterType.INT,\n            pretty_name: \"Trial duration\",\n            default: null,\n        },\n        /** If true, the trial will end when user makes a response. */\n        response_ends_trial: {\n            type: ParameterType.BOOL,\n            pretty_name: \"Response ends trial\",\n            default: true,\n        },\n        /** If true, then the trial will end as soon as the audio file finishes playing. */\n        trial_ends_after_audio: {\n            type: ParameterType.BOOL,\n            pretty_name: \"Trial ends after audio\",\n            default: false,\n        },\n        /** If true, then responses are allowed while the audio is playing. If false, then the audio must finish playing before a response is accepted. */\n        response_allowed_while_playing: {\n            type: ParameterType.BOOL,\n            pretty_name: \"Response allowed while playing\",\n            default: true,\n        },\n    },\n};\n/**\n * **audio-keyboard-response**\n *\n * jsPsych plugin for playing an audio file and getting a keyboard response\n *\n * @author Josh de Leeuw\n * @see {@link https://www.jspsych.org/plugins/jspsych-audio-keyboard-response/ audio-keyboard-response plugin documentation on jspsych.org}\n */\nclass AudioKeyboardResponsePlugin {\n    constructor(jsPsych) {\n        this.jsPsych = jsPsych;\n    }\n    trial(display_element, trial, on_load) {\n        // hold the .resolve() function from the Promise that ends the trial\n        let trial_complete;\n        // setup stimulus\n        var context = this.jsPsych.pluginAPI.audioContext();\n        // store response\n        var response = {\n            rt: null,\n            key: null,\n        };\n        // record webaudio context start time\n        var startTime;\n        // load audio file\n        this.jsPsych.pluginAPI\n            .getAudioBuffer(trial.stimulus)\n            .then((buffer) => {\n            if (context !== null) {\n                this.audio = context.createBufferSource();\n                this.audio.buffer = buffer;\n                this.audio.connect(context.destination);\n            }\n            else {\n                this.audio = buffer;\n                this.audio.currentTime = 0;\n            }\n            setupTrial();\n        })\n            .catch((err) => {\n            console.error(`Failed to load audio file \"${trial.stimulus}\". Try checking the file path. We recommend using the preload plugin to load audio files.`);\n            console.error(err);\n        });\n        const setupTrial = () => {\n            // set up end event if trial needs it\n            if (trial.trial_ends_after_audio) {\n                this.audio.addEventListener(\"ended\", end_trial);\n            }\n            // show prompt if there is one\n            if (trial.prompt !== null) {\n                display_element.innerHTML = trial.prompt;\n            }\n            // start audio\n            if (context !== null) {\n                startTime = context.currentTime;\n                this.audio.start(startTime);\n            }\n            else {\n                this.audio.play();\n            }\n            // start keyboard listener when trial starts or sound ends\n            if (trial.response_allowed_while_playing) {\n                setup_keyboard_listener();\n            }\n            else if (!trial.trial_ends_after_audio) {\n                this.audio.addEventListener(\"ended\", setup_keyboard_listener);\n            }\n            // end trial if time limit is set\n            if (trial.trial_duration !== null) {\n                this.jsPsych.pluginAPI.setTimeout(() => {\n                    end_trial();\n                }, trial.trial_duration);\n            }\n            on_load();\n        };\n        // function to end trial when it is time\n        const end_trial = () => {\n            // kill any remaining setTimeout handlers\n            this.jsPsych.pluginAPI.clearAllTimeouts();\n            // stop the audio file if it is playing\n            // remove end event listeners if they exist\n            if (context !== null) {\n                this.audio.stop();\n            }\n            else {\n                this.audio.pause();\n            }\n            this.audio.removeEventListener(\"ended\", end_trial);\n            this.audio.removeEventListener(\"ended\", setup_keyboard_listener);\n            // kill keyboard listeners\n            this.jsPsych.pluginAPI.cancelAllKeyboardResponses();\n            // gather the data to store for the trial\n            var trial_data = {\n                rt: response.rt,\n                stimulus: trial.stimulus,\n                response: response.key,\n            };\n            // clear the display\n            display_element.innerHTML = \"\";\n            // move on to the next trial\n            this.jsPsych.finishTrial(trial_data);\n            trial_complete();\n        };\n        // function to handle responses by the subject\n        function after_response(info) {\n            // only record the first response\n            if (response.key == null) {\n                response = info;\n            }\n            if (trial.response_ends_trial) {\n                end_trial();\n            }\n        }\n        const setup_keyboard_listener = () => {\n            // start the response listener\n            if (context !== null) {\n                this.jsPsych.pluginAPI.getKeyboardResponse({\n                    callback_function: after_response,\n                    valid_responses: trial.choices,\n                    rt_method: \"audio\",\n                    persist: false,\n                    allow_held_key: false,\n                    audio_context: context,\n                    audio_context_start_time: startTime,\n                });\n            }\n            else {\n                this.jsPsych.pluginAPI.getKeyboardResponse({\n                    callback_function: after_response,\n                    valid_responses: trial.choices,\n                    rt_method: \"performance\",\n                    persist: false,\n                    allow_held_key: false,\n                });\n            }\n        };\n        return new Promise((resolve) => {\n            trial_complete = resolve;\n        });\n    }\n    simulate(trial, simulation_mode, simulation_options, load_callback) {\n        if (simulation_mode == \"data-only\") {\n            load_callback();\n            this.simulate_data_only(trial, simulation_options);\n        }\n        if (simulation_mode == \"visual\") {\n            this.simulate_visual(trial, simulation_options, load_callback);\n        }\n    }\n    simulate_data_only(trial, simulation_options) {\n        const data = this.create_simulation_data(trial, simulation_options);\n        this.jsPsych.finishTrial(data);\n    }\n    simulate_visual(trial, simulation_options, load_callback) {\n        const data = this.create_simulation_data(trial, simulation_options);\n        const display_element = this.jsPsych.getDisplayElement();\n        const respond = () => {\n            if (data.rt !== null) {\n                this.jsPsych.pluginAPI.pressKey(data.response, data.rt);\n            }\n        };\n        this.trial(display_element, trial, () => {\n            load_callback();\n            if (!trial.response_allowed_while_playing) {\n                this.audio.addEventListener(\"ended\", respond);\n            }\n            else {\n                respond();\n            }\n        });\n    }\n    create_simulation_data(trial, simulation_options) {\n        const default_data = {\n            stimulus: trial.stimulus,\n            rt: this.jsPsych.randomization.sampleExGaussian(500, 50, 1 / 150, true),\n            response: this.jsPsych.pluginAPI.getValidKey(trial.choices),\n        };\n        const data = this.jsPsych.pluginAPI.mergeSimulationData(default_data, simulation_options);\n        this.jsPsych.pluginAPI.ensureSimulationDataConsistency(trial, data);\n        return data;\n    }\n}\nAudioKeyboardResponsePlugin.info = info;\n\nexport { AudioKeyboardResponsePlugin as default };\n//# sourceMappingURL=index.js.map\n","import { ParameterType } from 'jspsych';\n\nconst info = {\n    name: \"fullscreen\",\n    parameters: {\n        /** If true, experiment will enter fullscreen mode. If false, the browser will exit fullscreen mode. */\n        fullscreen_mode: {\n            type: ParameterType.BOOL,\n            pretty_name: \"Fullscreen mode\",\n            default: true,\n            array: false,\n        },\n        /** HTML content to display above the button to enter fullscreen mode */\n        message: {\n            type: ParameterType.HTML_STRING,\n            pretty_name: \"Message\",\n            default: \"<p>The experiment will switch to full screen mode when you press the button below</p>\",\n            array: false,\n        },\n        /** The text that appears on the button to enter fullscreen */\n        button_label: {\n            type: ParameterType.STRING,\n            pretty_name: \"Button label\",\n            default: \"Continue\",\n            array: false,\n        },\n        /** The length of time to delay after entering fullscreen mode before ending the trial. */\n        delay_after: {\n            type: ParameterType.INT,\n            pretty_name: \"Delay after\",\n            default: 1000,\n            array: false,\n        },\n    },\n};\n/**\n * **fullscreen**\n *\n * jsPsych plugin for toggling fullscreen mode in the browser\n *\n * @author Josh de Leeuw\n * @see {@link https://www.jspsych.org/plugins/jspsych-fullscreen/ fullscreen plugin documentation on jspsych.org}\n */\nclass FullscreenPlugin {\n    constructor(jsPsych) {\n        this.jsPsych = jsPsych;\n        this.rt = null;\n        this.start_time = 0;\n    }\n    trial(display_element, trial) {\n        // check if keys are allowed in fullscreen mode\n        var keyboardNotAllowed = typeof Element !== \"undefined\" && \"ALLOW_KEYBOARD_INPUT\" in Element;\n        if (keyboardNotAllowed) {\n            // This is Safari, and keyboard events will be disabled. Don't allow fullscreen here.\n            // do something else?\n            this.endTrial(display_element, false, trial);\n        }\n        else {\n            if (trial.fullscreen_mode) {\n                this.showDisplay(display_element, trial);\n            }\n            else {\n                this.exitFullScreen();\n                this.endTrial(display_element, true, trial);\n            }\n        }\n    }\n    showDisplay(display_element, trial) {\n        display_element.innerHTML = `\n      ${trial.message}\n      <button id=\"jspsych-fullscreen-btn\" class=\"jspsych-btn\">${trial.button_label}</button>\n    `;\n        display_element.querySelector(\"#jspsych-fullscreen-btn\").addEventListener(\"click\", () => {\n            this.rt = Math.round(performance.now() - this.start_time);\n            this.enterFullScreen();\n            this.endTrial(display_element, true, trial);\n        });\n        this.start_time = performance.now();\n    }\n    endTrial(display_element, success, trial) {\n        display_element.innerHTML = \"\";\n        this.jsPsych.pluginAPI.setTimeout(() => {\n            var trial_data = {\n                success: success,\n                rt: this.rt,\n            };\n            this.jsPsych.finishTrial(trial_data);\n        }, trial.delay_after);\n    }\n    enterFullScreen() {\n        var element = document.documentElement;\n        if (element.requestFullscreen) {\n            element.requestFullscreen();\n        }\n        else if (element[\"mozRequestFullScreen\"]) {\n            element[\"mozRequestFullScreen\"]();\n        }\n        else if (element[\"webkitRequestFullscreen\"]) {\n            element[\"webkitRequestFullscreen\"]();\n        }\n        else if (element[\"msRequestFullscreen\"]) {\n            element[\"msRequestFullscreen\"]();\n        }\n    }\n    exitFullScreen() {\n        if (document.fullscreenElement ||\n            document[\"mozFullScreenElement\"] ||\n            document[\"webkitFullscreenElement\"]) {\n            if (document.exitFullscreen) {\n                document.exitFullscreen();\n            }\n            else if (document[\"msExitFullscreen\"]) {\n                document[\"msExitFullscreen\"]();\n            }\n            else if (document[\"mozCancelFullScreen\"]) {\n                document[\"mozCancelFullScreen\"]();\n            }\n            else if (document[\"webkitExitFullscreen\"]) {\n                document[\"webkitExitFullscreen\"]();\n            }\n        }\n    }\n    simulate(trial, simulation_mode, simulation_options, load_callback) {\n        if (simulation_mode == \"data-only\") {\n            load_callback();\n            this.simulate_data_only(trial, simulation_options);\n        }\n        if (simulation_mode == \"visual\") {\n            this.simulate_visual(trial, simulation_options, load_callback);\n        }\n    }\n    create_simulation_data(trial, simulation_options) {\n        const rt = this.jsPsych.randomization.sampleExGaussian(1000, 100, 1 / 200, true);\n        const default_data = {\n            success: true,\n            rt: rt,\n        };\n        const data = this.jsPsych.pluginAPI.mergeSimulationData(default_data, simulation_options);\n        return data;\n    }\n    simulate_data_only(trial, simulation_options) {\n        const data = this.create_simulation_data(trial, simulation_options);\n        this.jsPsych.finishTrial(data);\n    }\n    simulate_visual(trial, simulation_options, load_callback) {\n        const data = this.create_simulation_data(trial, simulation_options);\n        const display_element = this.jsPsych.getDisplayElement();\n        if (data.success === false) {\n            this.endTrial(display_element, false, trial);\n        }\n        else {\n            this.trial(display_element, trial);\n            load_callback();\n            this.jsPsych.pluginAPI.clickTarget(display_element.querySelector(\"#jspsych-fullscreen-btn\"), data.rt);\n        }\n    }\n}\nFullscreenPlugin.info = info;\n\nexport { FullscreenPlugin as default };\n//# sourceMappingURL=index.js.map\n","import { ParameterType } from 'jspsych';\n\nconst info = {\n    name: \"html-slider-response\",\n    parameters: {\n        /** The HTML string to be displayed */\n        stimulus: {\n            type: ParameterType.HTML_STRING,\n            pretty_name: \"Stimulus\",\n            default: undefined,\n        },\n        /** Sets the minimum value of the slider. */\n        min: {\n            type: ParameterType.INT,\n            pretty_name: \"Min slider\",\n            default: 0,\n        },\n        /** Sets the maximum value of the slider */\n        max: {\n            type: ParameterType.INT,\n            pretty_name: \"Max slider\",\n            default: 100,\n        },\n        /** Sets the starting value of the slider */\n        slider_start: {\n            type: ParameterType.INT,\n            pretty_name: \"Slider starting value\",\n            default: 50,\n        },\n        /** Sets the step of the slider */\n        step: {\n            type: ParameterType.INT,\n            pretty_name: \"Step\",\n            default: 1,\n        },\n        /** Array containing the labels for the slider. Labels will be displayed at equidistant locations along the slider. */\n        labels: {\n            type: ParameterType.HTML_STRING,\n            pretty_name: \"Labels\",\n            default: [],\n            array: true,\n        },\n        /** Width of the slider in pixels. */\n        slider_width: {\n            type: ParameterType.INT,\n            pretty_name: \"Slider width\",\n            default: null,\n        },\n        /** Label of the button to advance. */\n        button_label: {\n            type: ParameterType.STRING,\n            pretty_name: \"Button label\",\n            default: \"Continue\",\n            array: false,\n        },\n        /** If true, the participant will have to move the slider before continuing. */\n        require_movement: {\n            type: ParameterType.BOOL,\n            pretty_name: \"Require movement\",\n            default: false,\n        },\n        /** Any content here will be displayed below the slider. */\n        prompt: {\n            type: ParameterType.HTML_STRING,\n            pretty_name: \"Prompt\",\n            default: null,\n        },\n        /** How long to show the stimulus. */\n        stimulus_duration: {\n            type: ParameterType.INT,\n            pretty_name: \"Stimulus duration\",\n            default: null,\n        },\n        /** How long to show the trial. */\n        trial_duration: {\n            type: ParameterType.INT,\n            pretty_name: \"Trial duration\",\n            default: null,\n        },\n        /** If true, trial will end when user makes a response. */\n        response_ends_trial: {\n            type: ParameterType.BOOL,\n            pretty_name: \"Response ends trial\",\n            default: true,\n        },\n    },\n};\n/**\n * **html-slider-response**\n *\n * jsPsych plugin for showing an HTML stimulus and collecting a slider response\n *\n * @author Josh de Leeuw\n * @see {@link https://www.jspsych.org/plugins/jspsych-html-slider-response/ html-slider-response plugin documentation on jspsych.org}\n */\nclass HtmlSliderResponsePlugin {\n    constructor(jsPsych) {\n        this.jsPsych = jsPsych;\n    }\n    trial(display_element, trial) {\n        // half of the thumb width value from jspsych.css, used to adjust the label positions\n        var half_thumb_width = 7.5;\n        var html = '<div id=\"jspsych-html-slider-response-wrapper\" style=\"margin: 100px 0px;\">';\n        html += '<div id=\"jspsych-html-slider-response-stimulus\">' + trial.stimulus + \"</div>\";\n        html +=\n            '<div class=\"jspsych-html-slider-response-container\" style=\"position:relative; margin: 0 auto 3em auto; ';\n        if (trial.slider_width !== null) {\n            html += \"width:\" + trial.slider_width + \"px;\";\n        }\n        else {\n            html += \"width:auto;\";\n        }\n        html += '\">';\n        html +=\n            '<input type=\"range\" class=\"jspsych-slider\" value=\"' +\n                trial.slider_start +\n                '\" min=\"' +\n                trial.min +\n                '\" max=\"' +\n                trial.max +\n                '\" step=\"' +\n                trial.step +\n                '\" id=\"jspsych-html-slider-response-response\"></input>';\n        html += \"<div>\";\n        for (var j = 0; j < trial.labels.length; j++) {\n            var label_width_perc = 100 / (trial.labels.length - 1);\n            var percent_of_range = j * (100 / (trial.labels.length - 1));\n            var percent_dist_from_center = ((percent_of_range - 50) / 50) * 100;\n            var offset = (percent_dist_from_center * half_thumb_width) / 100;\n            html +=\n                '<div style=\"border: 1px solid transparent; display: inline-block; position: absolute; ' +\n                    \"left:calc(\" +\n                    percent_of_range +\n                    \"% - (\" +\n                    label_width_perc +\n                    \"% / 2) - \" +\n                    offset +\n                    \"px); text-align: center; width: \" +\n                    label_width_perc +\n                    '%;\">';\n            html += '<span style=\"text-align: center; font-size: 80%;\">' + trial.labels[j] + \"</span>\";\n            html += \"</div>\";\n        }\n        html += \"</div>\";\n        html += \"</div>\";\n        html += \"</div>\";\n        if (trial.prompt !== null) {\n            html += trial.prompt;\n        }\n        // add submit button\n        html +=\n            '<button id=\"jspsych-html-slider-response-next\" class=\"jspsych-btn\" ' +\n                (trial.require_movement ? \"disabled\" : \"\") +\n                \">\" +\n                trial.button_label +\n                \"</button>\";\n        display_element.innerHTML = html;\n        var response = {\n            rt: null,\n            response: null,\n        };\n        if (trial.require_movement) {\n            const enable_button = () => {\n                display_element.querySelector(\"#jspsych-html-slider-response-next\").disabled = false;\n            };\n            display_element\n                .querySelector(\"#jspsych-html-slider-response-response\")\n                .addEventListener(\"mousedown\", enable_button);\n            display_element\n                .querySelector(\"#jspsych-html-slider-response-response\")\n                .addEventListener(\"touchstart\", enable_button);\n            display_element\n                .querySelector(\"#jspsych-html-slider-response-response\")\n                .addEventListener(\"change\", enable_button);\n        }\n        const end_trial = () => {\n            this.jsPsych.pluginAPI.clearAllTimeouts();\n            // save data\n            var trialdata = {\n                rt: response.rt,\n                stimulus: trial.stimulus,\n                slider_start: trial.slider_start,\n                response: response.response,\n            };\n            display_element.innerHTML = \"\";\n            // next trial\n            this.jsPsych.finishTrial(trialdata);\n        };\n        display_element\n            .querySelector(\"#jspsych-html-slider-response-next\")\n            .addEventListener(\"click\", () => {\n            // measure response time\n            var endTime = performance.now();\n            response.rt = Math.round(endTime - startTime);\n            response.response = display_element.querySelector(\"#jspsych-html-slider-response-response\").valueAsNumber;\n            if (trial.response_ends_trial) {\n                end_trial();\n            }\n            else {\n                display_element.querySelector(\"#jspsych-html-slider-response-next\").disabled = true;\n            }\n        });\n        if (trial.stimulus_duration !== null) {\n            this.jsPsych.pluginAPI.setTimeout(() => {\n                display_element.querySelector(\"#jspsych-html-slider-response-stimulus\").style.visibility = \"hidden\";\n            }, trial.stimulus_duration);\n        }\n        // end trial if trial_duration is set\n        if (trial.trial_duration !== null) {\n            this.jsPsych.pluginAPI.setTimeout(end_trial, trial.trial_duration);\n        }\n        var startTime = performance.now();\n    }\n    simulate(trial, simulation_mode, simulation_options, load_callback) {\n        if (simulation_mode == \"data-only\") {\n            load_callback();\n            this.simulate_data_only(trial, simulation_options);\n        }\n        if (simulation_mode == \"visual\") {\n            this.simulate_visual(trial, simulation_options, load_callback);\n        }\n    }\n    create_simulation_data(trial, simulation_options) {\n        const default_data = {\n            stimulus: trial.stimulus,\n            slider_start: trial.slider_start,\n            response: this.jsPsych.randomization.randomInt(trial.min, trial.max),\n            rt: this.jsPsych.randomization.sampleExGaussian(500, 50, 1 / 150, true),\n        };\n        const data = this.jsPsych.pluginAPI.mergeSimulationData(default_data, simulation_options);\n        this.jsPsych.pluginAPI.ensureSimulationDataConsistency(trial, data);\n        return data;\n    }\n    simulate_data_only(trial, simulation_options) {\n        const data = this.create_simulation_data(trial, simulation_options);\n        this.jsPsych.finishTrial(data);\n    }\n    simulate_visual(trial, simulation_options, load_callback) {\n        const data = this.create_simulation_data(trial, simulation_options);\n        const display_element = this.jsPsych.getDisplayElement();\n        this.trial(display_element, trial);\n        load_callback();\n        if (data.rt !== null) {\n            const el = display_element.querySelector(\"input[type='range']\");\n            setTimeout(() => {\n                this.jsPsych.pluginAPI.clickTarget(el);\n                el.valueAsNumber = data.response;\n            }, data.rt / 2);\n            this.jsPsych.pluginAPI.clickTarget(display_element.querySelector(\"button\"), data.rt);\n        }\n    }\n}\nHtmlSliderResponsePlugin.info = info;\n\nexport { HtmlSliderResponsePlugin as default };\n//# sourceMappingURL=index.js.map\n","import { ParameterType } from 'jspsych';\n\nconst info = {\n    name: \"preload\",\n    parameters: {\n        /** Whether or not to automatically preload any media files based on the timeline passed to jsPsych.run. */\n        auto_preload: {\n            type: ParameterType.BOOL,\n            pretty_name: \"Auto-preload\",\n            default: false,\n        },\n        /** A timeline of trials to automatically preload. If one or more trial objects is provided in the timeline array, then the plugin will attempt to preload the media files used in the trial(s). */\n        trials: {\n            type: ParameterType.TIMELINE,\n            pretty_name: \"Trials\",\n            default: [],\n        },\n        /**\n         * Array with one or more image files to load. This parameter is often used in cases where media files cannot#\n         * be automatically preloaded based on the timeline, e.g. because the media files are passed into an image plugin/parameter with\n         * timeline variables or dynamic parameters, or because the image is embedded in an HTML string.\n         */\n        images: {\n            type: ParameterType.STRING,\n            pretty_name: \"Images\",\n            default: [],\n            array: true,\n        },\n        /**\n         * Array with one or more audio files to load. This parameter is often used in cases where media files cannot\n         * be automatically preloaded based on the timeline, e.g. because the media files are passed into an audio plugin/parameter with\n         * timeline variables or dynamic parameters, or because the audio is embedded in an HTML string.\n         */\n        audio: {\n            type: ParameterType.STRING,\n            pretty_name: \"Audio\",\n            default: [],\n            array: true,\n        },\n        /**\n         * Array with one or more video files to load. This parameter is often used in cases where media files cannot\n         * be automatically preloaded based on the timeline, e.g. because the media files are passed into a video plugin/parameter with\n         * timeline variables or dynamic parameters, or because the video is embedded in an HTML string.\n         */\n        video: {\n            type: ParameterType.STRING,\n            pretty_name: \"Video\",\n            default: [],\n            array: true,\n        },\n        /** HTML-formatted message to be shown above the progress bar while the files are loading. */\n        message: {\n            type: ParameterType.HTML_STRING,\n            pretty_name: \"Message\",\n            default: null,\n        },\n        /** Whether or not to show the loading progress bar. */\n        show_progress_bar: {\n            type: ParameterType.BOOL,\n            pretty_name: \"Show progress bar\",\n            default: true,\n        },\n        /**\n         * Whether or not to continue with the experiment if a loading error occurs. If false, then if a loading error occurs,\n         * the error_message will be shown on the page and the trial will not end. If true, then if if a loading error occurs, the trial will end\n         * and preloading failure will be logged in the trial data.\n         */\n        continue_after_error: {\n            type: ParameterType.BOOL,\n            pretty_name: \"Continue after error\",\n            default: false,\n        },\n        /** Error message to show on the page in case of any loading errors. This parameter is only relevant when continue_after_error is false. */\n        error_message: {\n            type: ParameterType.HTML_STRING,\n            pretty_name: \"Error message\",\n            default: \"The experiment failed to load.\",\n        },\n        /**\n         * Whether or not to show a detailed error message on the page. If true, then detailed error messages will be shown on the\n         * page for all files that failed to load, along with the general error_message. This parameter is only relevant when continue_after_error is false.\n         */\n        show_detailed_errors: {\n            type: ParameterType.BOOL,\n            pretty_name: \"Show detailed errors\",\n            default: false,\n        },\n        /**\n         * The maximum amount of time that the plugin should wait before stopping the preload and either ending the trial\n         * (if continue_after_error is true) or stopping the experiment with an error message (if continue_after_error is false).\n         * If null, the plugin will wait indefintely for the files to load.\n         */\n        max_load_time: {\n            type: ParameterType.INT,\n            pretty_name: \"Max load time\",\n            default: null,\n        },\n        /** Function to be called after a file fails to load. The function takes the file name as its only argument. */\n        on_error: {\n            type: ParameterType.FUNCTION,\n            pretty_name: \"On error\",\n            default: null,\n        },\n        /** Function to be called after a file loads successfully. The function takes the file name as its only argument. */\n        on_success: {\n            type: ParameterType.FUNCTION,\n            pretty_name: \"On success\",\n            default: null,\n        },\n    },\n};\n/**\n * **preload**\n *\n * jsPsych plugin for preloading image, audio, and video files\n *\n * @author Becky Gilbert\n * @see {@link https://www.jspsych.org/plugins/jspsych-preload/ preload plugin documentation on jspsych.org}\n */\nclass PreloadPlugin {\n    constructor(jsPsych) {\n        this.jsPsych = jsPsych;\n    }\n    trial(display_element, trial) {\n        var success = null;\n        var timeout = false;\n        var failed_images = [];\n        var failed_audio = [];\n        var failed_video = [];\n        var detailed_errors = [];\n        var in_safe_mode = this.jsPsych.getSafeModeStatus();\n        // create list of media to preload //\n        var images = [];\n        var audio = [];\n        var video = [];\n        if (trial.auto_preload) {\n            var experiment_timeline = this.jsPsych.getTimeline();\n            var auto_preload = this.jsPsych.pluginAPI.getAutoPreloadList(experiment_timeline);\n            images = images.concat(auto_preload.images);\n            audio = audio.concat(auto_preload.audio);\n            video = video.concat(auto_preload.video);\n        }\n        if (trial.trials.length > 0) {\n            var trial_preloads = this.jsPsych.pluginAPI.getAutoPreloadList(trial.trials);\n            images = images.concat(trial_preloads.images);\n            audio = audio.concat(trial_preloads.audio);\n            video = video.concat(trial_preloads.video);\n        }\n        images = images.concat(trial.images);\n        audio = audio.concat(trial.audio);\n        video = video.concat(trial.video);\n        images = this.jsPsych.utils.unique(images.flat());\n        audio = this.jsPsych.utils.unique(audio.flat());\n        video = this.jsPsych.utils.unique(video.flat());\n        if (in_safe_mode) {\n            // don't preload video if in safe mode (experiment is running via file protocol)\n            video = [];\n        }\n        // render display of message and progress bar\n        var html = \"\";\n        if (trial.message !== null) {\n            html += trial.message;\n        }\n        if (trial.show_progress_bar) {\n            html += `\n            <div id='jspsych-loading-progress-bar-container' style='height: 10px; width: 300px; background-color: #ddd; margin: auto;'>\n              <div id='jspsych-loading-progress-bar' style='height: 10px; width: 0%; background-color: #777;'></div>\n            </div>`;\n        }\n        display_element.innerHTML = html;\n        const update_loading_progress_bar = () => {\n            loaded++;\n            if (trial.show_progress_bar) {\n                var percent_loaded = (loaded / total_n) * 100;\n                var preload_progress_bar = display_element.querySelector(\"#jspsych-loading-progress-bar\");\n                if (preload_progress_bar !== null) {\n                    preload_progress_bar.style.width = percent_loaded + \"%\";\n                }\n            }\n        };\n        // called if all files load successfully\n        const on_success = () => {\n            if (typeof timeout !== \"undefined\" && timeout === false) {\n                // clear timeout immediately after finishing, to handle race condition with max_load_time\n                this.jsPsych.pluginAPI.clearAllTimeouts();\n                // need to call cancel preload function to clear global jsPsych preload_request list, even when they've all succeeded\n                this.jsPsych.pluginAPI.cancelPreloads();\n                success = true;\n                end_trial();\n            }\n        };\n        // called if all_files haven't finished loading when max_load_time is reached\n        const on_timeout = () => {\n            this.jsPsych.pluginAPI.cancelPreloads();\n            if (typeof success !== \"undefined\" && (success === false || success === null)) {\n                timeout = true;\n                if (loaded_success < total_n) {\n                    success = false;\n                }\n                after_error(\"timeout\"); // call trial's on_error event handler here, in case loading timed out with no file errors\n                detailed_errors.push(\"<p><strong>Loading timed out.</strong><br>\" +\n                    \"Consider compressing your stimuli files, loading your files in smaller batches,<br>\" +\n                    \"and/or increasing the <i>max_load_time</i> parameter.</p>\");\n                if (trial.continue_after_error) {\n                    end_trial();\n                }\n                else {\n                    stop_with_error_message();\n                }\n            }\n        };\n        const stop_with_error_message = () => {\n            this.jsPsych.pluginAPI.clearAllTimeouts();\n            this.jsPsych.pluginAPI.cancelPreloads();\n            // show error message\n            display_element.innerHTML = trial.error_message;\n            // show detailed errors, if necessary\n            if (trial.show_detailed_errors) {\n                display_element.innerHTML += \"<p><strong>Error details:</strong></p>\";\n                detailed_errors.forEach((e) => {\n                    display_element.innerHTML += e;\n                });\n            }\n        };\n        const end_trial = () => {\n            // clear timeout again when end_trial is called, to handle race condition with max_load_time\n            this.jsPsych.pluginAPI.clearAllTimeouts();\n            var trial_data = {\n                success: success,\n                timeout: timeout,\n                failed_images: failed_images,\n                failed_audio: failed_audio,\n                failed_video: failed_video,\n            };\n            // clear the display\n            display_element.innerHTML = \"\";\n            this.jsPsych.finishTrial(trial_data);\n        };\n        // do preloading\n        if (trial.max_load_time !== null) {\n            this.jsPsych.pluginAPI.setTimeout(on_timeout, trial.max_load_time);\n        }\n        var total_n = images.length + audio.length + video.length;\n        var loaded = 0; // success or error count\n        var loaded_success = 0; // success count\n        if (total_n == 0) {\n            on_success();\n        }\n        else {\n            const load_video = (cb) => {\n                this.jsPsych.pluginAPI.preloadVideo(video, cb, file_loading_success, file_loading_error);\n            };\n            const load_audio = (cb) => {\n                this.jsPsych.pluginAPI.preloadAudio(audio, cb, file_loading_success, file_loading_error);\n            };\n            const load_images = (cb) => {\n                this.jsPsych.pluginAPI.preloadImages(images, cb, file_loading_success, file_loading_error);\n            };\n            if (video.length > 0) {\n                load_video(() => { });\n            }\n            if (audio.length > 0) {\n                load_audio(() => { });\n            }\n            if (images.length > 0) {\n                load_images(() => { });\n            }\n        }\n        // helper functions and callbacks\n        // called when a single file loading fails\n        function file_loading_error(e) {\n            // update progress bar even if there's an error\n            update_loading_progress_bar();\n            // change success flag after first file loading error\n            if (success == null) {\n                success = false;\n            }\n            // add file to failed media list\n            var source = \"unknown file\";\n            if (e.source) {\n                source = e.source;\n            }\n            if (e.error && e.error.path && e.error.path.length > 0) {\n                if (e.error.path[0].localName == \"img\") {\n                    failed_images.push(source);\n                }\n                else if (e.error.path[0].localName == \"audio\") {\n                    failed_audio.push(source);\n                }\n                else if (e.error.path[0].localName == \"video\") {\n                    failed_video.push(source);\n                }\n            }\n            // construct detailed error message\n            var err_msg = \"<p><strong>Error loading file: \" + source + \"</strong><br>\";\n            if (e.error.statusText) {\n                err_msg += \"File request response status: \" + e.error.statusText + \"<br>\";\n            }\n            if (e.error == \"404\") {\n                err_msg += \"404 - file not found.<br>\";\n            }\n            if (typeof e.error.loaded !== \"undefined\" &&\n                e.error.loaded !== null &&\n                e.error.loaded !== 0) {\n                err_msg += e.error.loaded + \" bytes transferred.\";\n            }\n            else {\n                err_msg +=\n                    \"File did not begin loading. Check that file path is correct and reachable by the browser,<br>\" +\n                        \"and that loading is not blocked by cross-origin resource sharing (CORS) errors.\";\n            }\n            err_msg += \"</p>\";\n            detailed_errors.push(err_msg);\n            // call trial's on_error function\n            after_error(source);\n            // if this is the last file\n            if (loaded == total_n) {\n                if (trial.continue_after_error) {\n                    // if continue_after_error is false, then stop with an error\n                    end_trial();\n                }\n                else {\n                    // otherwise end the trial and continue\n                    stop_with_error_message();\n                }\n            }\n        }\n        // called when a single file loads successfully\n        function file_loading_success(source) {\n            update_loading_progress_bar();\n            // call trial's on_success function\n            after_success(source);\n            loaded_success++;\n            if (loaded_success == total_n) {\n                // if this is the last file and all loaded successfully, call success function\n                on_success();\n            }\n            else if (loaded == total_n) {\n                // if this is the last file and there was at least one error\n                if (trial.continue_after_error) {\n                    // end the trial and continue with experiment\n                    end_trial();\n                }\n                else {\n                    // if continue_after_error is false, then stop with an error\n                    stop_with_error_message();\n                }\n            }\n        }\n        function after_error(source) {\n            // call on_error function and pass file name\n            if (trial.on_error !== null) {\n                trial.on_error(source);\n            }\n        }\n        function after_success(source) {\n            // call on_success function and pass file name\n            if (trial.on_success !== null) {\n                trial.on_success(source);\n            }\n        }\n    }\n    simulate(trial, simulation_mode, simulation_options, load_callback) {\n        if (simulation_mode == \"data-only\") {\n            load_callback();\n            this.simulate_data_only(trial, simulation_options);\n        }\n        if (simulation_mode == \"visual\") {\n            this.simulate_visual(trial, simulation_options, load_callback);\n        }\n    }\n    create_simulation_data(trial, simulation_options) {\n        const default_data = {\n            success: true,\n            timeout: false,\n            failed_images: [],\n            failed_audio: [],\n            failed_video: [],\n        };\n        const data = this.jsPsych.pluginAPI.mergeSimulationData(default_data, simulation_options);\n        return data;\n    }\n    simulate_data_only(trial, simulation_options) {\n        const data = this.create_simulation_data(trial, simulation_options);\n        this.jsPsych.finishTrial(data);\n    }\n    simulate_visual(trial, simulation_options, load_callback) {\n        const display_element = this.jsPsych.getDisplayElement();\n        this.trial(display_element, trial);\n        load_callback();\n    }\n}\nPreloadPlugin.info = info;\n\nexport { PreloadPlugin as default };\n//# sourceMappingURL=index.js.map\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\n// Gets all non-builtin properties up the prototype chain\nconst getAllProperties = object => {\n\tconst properties = new Set();\n\n\tdo {\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tproperties.add([object, key]);\n\t\t}\n\t} while ((object = Reflect.getPrototypeOf(object)) && object !== Object.prototype);\n\n\treturn properties;\n};\n\nvar autoBind = (self, {include, exclude} = {}) => {\n\tconst filter = key => {\n\t\tconst match = pattern => typeof pattern === 'string' ? key === pattern : pattern.test(key);\n\n\t\tif (include) {\n\t\t\treturn include.some(match);\n\t\t}\n\n\t\tif (exclude) {\n\t\t\treturn !exclude.some(match);\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tfor (const [object, key] of getAllProperties(self.constructor.prototype)) {\n\t\tif (key === 'constructor' || !filter(key)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst descriptor = Reflect.getOwnPropertyDescriptor(object, key);\n\t\tif (descriptor && typeof descriptor.value === 'function') {\n\t\t\tself[key] = self[key].bind(self);\n\t\t}\n\t}\n\n\treturn self;\n};\n\nvar autoBind$1 = /*@__PURE__*/getDefaultExportFromCjs(autoBind);\n\nvar version = \"7.3.4\";\n\nclass MigrationError extends Error {\n    constructor(message = \"The global `jsPsych` variable is no longer available in jsPsych v7.\") {\n        super(`${message} Please follow the migration guide at https://www.jspsych.org/7.0/support/migration-v7/ to update your experiment.`);\n        this.name = \"MigrationError\";\n    }\n}\n// Define a global jsPsych object to handle invocations on it with migration errors\nwindow.jsPsych = {\n    get init() {\n        throw new MigrationError(\"`jsPsych.init()` was replaced by `initJsPsych()` in jsPsych v7.\");\n    },\n    get data() {\n        throw new MigrationError();\n    },\n    get randomization() {\n        throw new MigrationError();\n    },\n    get turk() {\n        throw new MigrationError();\n    },\n    get pluginAPI() {\n        throw new MigrationError();\n    },\n    get ALL_KEYS() {\n        throw new MigrationError('jsPsych.ALL_KEYS was replaced by the \"ALL_KEYS\" string in jsPsych v7.');\n    },\n    get NO_KEYS() {\n        throw new MigrationError('jsPsych.NO_KEYS was replaced by the \"NO_KEYS\" string in jsPsych v7.');\n    },\n};\n\n/**\n * Finds all of the unique items in an array.\n * @param arr The array to extract unique values from\n * @returns An array with one copy of each unique item in `arr`\n */\nfunction unique(arr) {\n    return [...new Set(arr)];\n}\nfunction deepCopy(obj) {\n    if (!obj)\n        return obj;\n    let out;\n    if (Array.isArray(obj)) {\n        out = [];\n        for (const x of obj) {\n            out.push(deepCopy(x));\n        }\n        return out;\n    }\n    else if (typeof obj === \"object\" && obj !== null) {\n        out = {};\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                out[key] = deepCopy(obj[key]);\n            }\n        }\n        return out;\n    }\n    else {\n        return obj;\n    }\n}\n/**\n * Merges two objects, recursively.\n * @param obj1 Object to merge\n * @param obj2 Object to merge\n */\nfunction deepMerge(obj1, obj2) {\n    let merged = {};\n    for (const key in obj1) {\n        if (obj1.hasOwnProperty(key)) {\n            if (typeof obj1[key] === \"object\" && obj2.hasOwnProperty(key)) {\n                merged[key] = deepMerge(obj1[key], obj2[key]);\n            }\n            else {\n                merged[key] = obj1[key];\n            }\n        }\n    }\n    for (const key in obj2) {\n        if (obj2.hasOwnProperty(key)) {\n            if (!merged.hasOwnProperty(key)) {\n                merged[key] = obj2[key];\n            }\n            else if (typeof obj2[key] === \"object\") {\n                merged[key] = deepMerge(merged[key], obj2[key]);\n            }\n            else {\n                merged[key] = obj2[key];\n            }\n        }\n    }\n    return merged;\n}\n\nvar utils = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    deepCopy: deepCopy,\n    deepMerge: deepMerge,\n    unique: unique\n});\n\nclass DataColumn {\n    constructor(values = []) {\n        this.values = values;\n    }\n    sum() {\n        let s = 0;\n        for (const v of this.values) {\n            s += v;\n        }\n        return s;\n    }\n    mean() {\n        return this.sum() / this.count();\n    }\n    median() {\n        if (this.values.length === 0) {\n            return undefined;\n        }\n        const numbers = this.values.slice(0).sort(function (a, b) {\n            return a - b;\n        });\n        const middle = Math.floor(numbers.length / 2);\n        const isEven = numbers.length % 2 === 0;\n        return isEven ? (numbers[middle] + numbers[middle - 1]) / 2 : numbers[middle];\n    }\n    min() {\n        return Math.min.apply(null, this.values);\n    }\n    max() {\n        return Math.max.apply(null, this.values);\n    }\n    count() {\n        return this.values.length;\n    }\n    variance() {\n        const mean = this.mean();\n        let sum_square_error = 0;\n        for (const x of this.values) {\n            sum_square_error += Math.pow(x - mean, 2);\n        }\n        const mse = sum_square_error / (this.values.length - 1);\n        return mse;\n    }\n    sd() {\n        const mse = this.variance();\n        const rmse = Math.sqrt(mse);\n        return rmse;\n    }\n    frequencies() {\n        const unique = {};\n        for (const x of this.values) {\n            if (typeof unique[x] === \"undefined\") {\n                unique[x] = 1;\n            }\n            else {\n                unique[x]++;\n            }\n        }\n        return unique;\n    }\n    all(eval_fn) {\n        for (const x of this.values) {\n            if (!eval_fn(x)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    subset(eval_fn) {\n        const out = [];\n        for (const x of this.values) {\n            if (eval_fn(x)) {\n                out.push(x);\n            }\n        }\n        return new DataColumn(out);\n    }\n}\n\n// private function to save text file on local drive\nfunction saveTextToFile(textstr, filename) {\n    const blobToSave = new Blob([textstr], {\n        type: \"text/plain\",\n    });\n    let blobURL = \"\";\n    if (typeof window.webkitURL !== \"undefined\") {\n        blobURL = window.webkitURL.createObjectURL(blobToSave);\n    }\n    else {\n        blobURL = window.URL.createObjectURL(blobToSave);\n    }\n    const link = document.createElement(\"a\");\n    link.id = \"jspsych-download-as-text-link\";\n    link.style.display = \"none\";\n    link.download = filename;\n    link.href = blobURL;\n    link.click();\n}\n// this function based on code suggested by StackOverflow users:\n// http://stackoverflow.com/users/64741/zachary\n// http://stackoverflow.com/users/317/joseph-sturtevant\nfunction JSON2CSV(objArray) {\n    const array = typeof objArray != \"object\" ? JSON.parse(objArray) : objArray;\n    let line = \"\";\n    let result = \"\";\n    const columns = [];\n    for (const row of array) {\n        for (const key in row) {\n            let keyString = key + \"\";\n            keyString = '\"' + keyString.replace(/\"/g, '\"\"') + '\",';\n            if (!columns.includes(key)) {\n                columns.push(key);\n                line += keyString;\n            }\n        }\n    }\n    line = line.slice(0, -1); // removes last comma\n    result += line + \"\\r\\n\";\n    for (const row of array) {\n        line = \"\";\n        for (const col of columns) {\n            let value = typeof row[col] === \"undefined\" ? \"\" : row[col];\n            if (typeof value == \"object\") {\n                value = JSON.stringify(value);\n            }\n            const valueString = value + \"\";\n            line += '\"' + valueString.replace(/\"/g, '\"\"') + '\",';\n        }\n        line = line.slice(0, -1);\n        result += line + \"\\r\\n\";\n    }\n    return result;\n}\n// this function is modified from StackOverflow:\n// http://stackoverflow.com/posts/3855394\nfunction getQueryString() {\n    const a = window.location.search.substr(1).split(\"&\");\n    const b = {};\n    for (let i = 0; i < a.length; ++i) {\n        const p = a[i].split(\"=\", 2);\n        if (p.length == 1)\n            b[p[0]] = \"\";\n        else\n            b[p[0]] = decodeURIComponent(p[1].replace(/\\+/g, \" \"));\n    }\n    return b;\n}\n\nclass DataCollection {\n    constructor(data = []) {\n        this.trials = data;\n    }\n    push(new_data) {\n        this.trials.push(new_data);\n        return this;\n    }\n    join(other_data_collection) {\n        this.trials = this.trials.concat(other_data_collection.values());\n        return this;\n    }\n    top() {\n        if (this.trials.length <= 1) {\n            return this;\n        }\n        else {\n            return new DataCollection([this.trials[this.trials.length - 1]]);\n        }\n    }\n    /**\n     * Queries the first n elements in a collection of trials.\n     *\n     * @param n A positive integer of elements to return. A value of\n     *          n that is less than 1 will throw an error.\n     *\n     * @return First n objects of a collection of trials. If fewer than\n     *         n trials are available, the trials.length elements will\n     *         be returned.\n     *\n     */\n    first(n = 1) {\n        if (n < 1) {\n            throw `You must query with a positive nonzero integer. Please use a\n               different value for n.`;\n        }\n        if (this.trials.length === 0)\n            return new DataCollection();\n        if (n > this.trials.length)\n            n = this.trials.length;\n        return new DataCollection(this.trials.slice(0, n));\n    }\n    /**\n     * Queries the last n elements in a collection of trials.\n     *\n     * @param n A positive integer of elements to return. A value of\n     *          n that is less than 1 will throw an error.\n     *\n     * @return Last n objects of a collection of trials. If fewer than\n     *         n trials are available, the trials.length elements will\n     *         be returned.\n     *\n     */\n    last(n = 1) {\n        if (n < 1) {\n            throw `You must query with a positive nonzero integer. Please use a\n               different value for n.`;\n        }\n        if (this.trials.length === 0)\n            return new DataCollection();\n        if (n > this.trials.length)\n            n = this.trials.length;\n        return new DataCollection(this.trials.slice(this.trials.length - n, this.trials.length));\n    }\n    values() {\n        return this.trials;\n    }\n    count() {\n        return this.trials.length;\n    }\n    readOnly() {\n        return new DataCollection(deepCopy(this.trials));\n    }\n    addToAll(properties) {\n        for (const trial of this.trials) {\n            Object.assign(trial, properties);\n        }\n        return this;\n    }\n    addToLast(properties) {\n        if (this.trials.length != 0) {\n            Object.assign(this.trials[this.trials.length - 1], properties);\n        }\n        return this;\n    }\n    filter(filters) {\n        // [{p1: v1, p2:v2}, {p1:v2}]\n        // {p1: v1}\n        let f;\n        if (!Array.isArray(filters)) {\n            f = deepCopy([filters]);\n        }\n        else {\n            f = deepCopy(filters);\n        }\n        const filtered_data = [];\n        for (const trial of this.trials) {\n            let keep = false;\n            for (const filter of f) {\n                let match = true;\n                for (const key of Object.keys(filter)) {\n                    if (typeof trial[key] !== \"undefined\" && trial[key] === filter[key]) ;\n                    else {\n                        match = false;\n                    }\n                }\n                if (match) {\n                    keep = true;\n                    break;\n                } // can break because each filter is OR.\n            }\n            if (keep) {\n                filtered_data.push(trial);\n            }\n        }\n        return new DataCollection(filtered_data);\n    }\n    filterCustom(fn) {\n        return new DataCollection(this.trials.filter(fn));\n    }\n    filterColumns(columns) {\n        return new DataCollection(this.trials.map((trial) => Object.fromEntries(columns.filter((key) => key in trial).map((key) => [key, trial[key]]))));\n    }\n    select(column) {\n        const values = [];\n        for (const trial of this.trials) {\n            if (typeof trial[column] !== \"undefined\") {\n                values.push(trial[column]);\n            }\n        }\n        return new DataColumn(values);\n    }\n    ignore(columns) {\n        if (!Array.isArray(columns)) {\n            columns = [columns];\n        }\n        const o = deepCopy(this.trials);\n        for (const trial of o) {\n            for (const delete_key of columns) {\n                delete trial[delete_key];\n            }\n        }\n        return new DataCollection(o);\n    }\n    uniqueNames() {\n        const names = [];\n        for (const trial of this.trials) {\n            for (const key of Object.keys(trial)) {\n                if (!names.includes(key)) {\n                    names.push(key);\n                }\n            }\n        }\n        return names;\n    }\n    csv() {\n        return JSON2CSV(this.trials);\n    }\n    json(pretty = false) {\n        if (pretty) {\n            return JSON.stringify(this.trials, null, \"\\t\");\n        }\n        return JSON.stringify(this.trials);\n    }\n    localSave(format, filename) {\n        format = format.toLowerCase();\n        let data_string;\n        if (format === \"json\") {\n            data_string = this.json();\n        }\n        else if (format === \"csv\") {\n            data_string = this.csv();\n        }\n        else {\n            throw new Error('Invalid format specified for localSave. Must be \"json\" or \"csv\".');\n        }\n        saveTextToFile(data_string, filename);\n    }\n}\n\nclass JsPsychData {\n    constructor(jsPsych) {\n        this.jsPsych = jsPsych;\n        // data properties for all trials\n        this.dataProperties = {};\n        this.reset();\n    }\n    reset() {\n        this.allData = new DataCollection();\n        this.interactionData = new DataCollection();\n    }\n    get() {\n        return this.allData;\n    }\n    getInteractionData() {\n        return this.interactionData;\n    }\n    write(data_object) {\n        const progress = this.jsPsych.getProgress();\n        const trial = this.jsPsych.getCurrentTrial();\n        //var trial_opt_data = typeof trial.data == 'function' ? trial.data() : trial.data;\n        const default_data = {\n            trial_type: trial.type.info.name,\n            trial_index: progress.current_trial_global,\n            time_elapsed: this.jsPsych.getTotalTime(),\n            internal_node_id: this.jsPsych.getCurrentTimelineNodeID(),\n        };\n        this.allData.push(Object.assign(Object.assign(Object.assign(Object.assign({}, data_object), trial.data), default_data), this.dataProperties));\n    }\n    addProperties(properties) {\n        // first, add the properties to all data that's already stored\n        this.allData.addToAll(properties);\n        // now add to list so that it gets appended to all future data\n        this.dataProperties = Object.assign({}, this.dataProperties, properties);\n    }\n    addDataToLastTrial(data) {\n        this.allData.addToLast(data);\n    }\n    getDataByTimelineNode(node_id) {\n        return this.allData.filterCustom((x) => x.internal_node_id.slice(0, node_id.length) === node_id);\n    }\n    getLastTrialData() {\n        return this.allData.top();\n    }\n    getLastTimelineData() {\n        const lasttrial = this.getLastTrialData();\n        const node_id = lasttrial.select(\"internal_node_id\").values[0];\n        if (typeof node_id === \"undefined\") {\n            return new DataCollection();\n        }\n        else {\n            const parent_node_id = node_id.substr(0, node_id.lastIndexOf(\"-\"));\n            const lastnodedata = this.getDataByTimelineNode(parent_node_id);\n            return lastnodedata;\n        }\n    }\n    displayData(format = \"json\") {\n        format = format.toLowerCase();\n        if (format != \"json\" && format != \"csv\") {\n            console.log(\"Invalid format declared for displayData function. Using json as default.\");\n            format = \"json\";\n        }\n        const data_string = format === \"json\" ? this.allData.json(true) : this.allData.csv();\n        const display_element = this.jsPsych.getDisplayElement();\n        display_element.innerHTML = '<pre id=\"jspsych-data-display\"></pre>';\n        document.getElementById(\"jspsych-data-display\").textContent = data_string;\n    }\n    urlVariables() {\n        if (typeof this.query_string == \"undefined\") {\n            this.query_string = getQueryString();\n        }\n        return this.query_string;\n    }\n    getURLVariable(whichvar) {\n        return this.urlVariables()[whichvar];\n    }\n    createInteractionListeners() {\n        // blur event capture\n        window.addEventListener(\"blur\", () => {\n            const data = {\n                event: \"blur\",\n                trial: this.jsPsych.getProgress().current_trial_global,\n                time: this.jsPsych.getTotalTime(),\n            };\n            this.interactionData.push(data);\n            this.jsPsych.getInitSettings().on_interaction_data_update(data);\n        });\n        // focus event capture\n        window.addEventListener(\"focus\", () => {\n            const data = {\n                event: \"focus\",\n                trial: this.jsPsych.getProgress().current_trial_global,\n                time: this.jsPsych.getTotalTime(),\n            };\n            this.interactionData.push(data);\n            this.jsPsych.getInitSettings().on_interaction_data_update(data);\n        });\n        // fullscreen change capture\n        const fullscreenchange = () => {\n            const data = {\n                event: \n                // @ts-expect-error\n                document.isFullScreen ||\n                    // @ts-expect-error\n                    document.webkitIsFullScreen ||\n                    // @ts-expect-error\n                    document.mozIsFullScreen ||\n                    document.fullscreenElement\n                    ? \"fullscreenenter\"\n                    : \"fullscreenexit\",\n                trial: this.jsPsych.getProgress().current_trial_global,\n                time: this.jsPsych.getTotalTime(),\n            };\n            this.interactionData.push(data);\n            this.jsPsych.getInitSettings().on_interaction_data_update(data);\n        };\n        document.addEventListener(\"fullscreenchange\", fullscreenchange);\n        document.addEventListener(\"mozfullscreenchange\", fullscreenchange);\n        document.addEventListener(\"webkitfullscreenchange\", fullscreenchange);\n    }\n    // public methods for testing purposes. not recommended for use.\n    _customInsert(data) {\n        this.allData = new DataCollection(data);\n    }\n    _fullreset() {\n        this.reset();\n        this.dataProperties = {};\n    }\n}\n\nclass HardwareAPI {\n    constructor() {\n        /**\n         * Indicates whether this instance of jspsych has opened a hardware connection through our browser\n         * extension\n         **/\n        this.hardwareConnected = false;\n        //it might be useful to open up a line of communication from the extension back to this page\n        //script, again, this will have to pass through DOM events. For now speed is of no concern so I\n        //will use jQuery\n        document.addEventListener(\"jspsych-activate\", (evt) => {\n            this.hardwareConnected = true;\n        });\n    }\n    /**\n     * Allows communication with user hardware through our custom Google Chrome extension + native C++ program\n     * @param\t\tmess\tThe message to be passed to our extension, see its documentation for the expected members of this object.\n     * @author\tDaniel Rivas\n     *\n     */\n    hardware(mess) {\n        //since Chrome extension content-scripts do not share the javascript environment with the page\n        //script that loaded jspsych, we will need to use hacky methods like communicating through DOM\n        //events.\n        const jspsychEvt = new CustomEvent(\"jspsych\", { detail: mess });\n        document.dispatchEvent(jspsychEvt);\n        //And voila! it will be the job of the content script injected by the extension to listen for\n        //the event and do the appropriate actions.\n    }\n}\n\nclass KeyboardListenerAPI {\n    constructor(getRootElement, areResponsesCaseSensitive = false, minimumValidRt = 0) {\n        this.getRootElement = getRootElement;\n        this.areResponsesCaseSensitive = areResponsesCaseSensitive;\n        this.minimumValidRt = minimumValidRt;\n        this.listeners = new Set();\n        this.heldKeys = new Set();\n        this.areRootListenersRegistered = false;\n        autoBind$1(this);\n        this.registerRootListeners();\n    }\n    /**\n     * If not previously done and `this.getRootElement()` returns an element, adds the root key\n     * listeners to that element.\n     */\n    registerRootListeners() {\n        if (!this.areRootListenersRegistered) {\n            const rootElement = this.getRootElement();\n            if (rootElement) {\n                rootElement.addEventListener(\"keydown\", this.rootKeydownListener);\n                rootElement.addEventListener(\"keyup\", this.rootKeyupListener);\n                this.areRootListenersRegistered = true;\n            }\n        }\n    }\n    rootKeydownListener(e) {\n        // Iterate over a static copy of the listeners set because listeners might add other listeners\n        // that we do not want to be included in the loop\n        for (const listener of Array.from(this.listeners)) {\n            listener(e);\n        }\n        this.heldKeys.add(this.toLowerCaseIfInsensitive(e.key));\n    }\n    toLowerCaseIfInsensitive(string) {\n        return this.areResponsesCaseSensitive ? string : string.toLowerCase();\n    }\n    rootKeyupListener(e) {\n        this.heldKeys.delete(this.toLowerCaseIfInsensitive(e.key));\n    }\n    isResponseValid(validResponses, allowHeldKey, key) {\n        // check if key was already held down\n        if (!allowHeldKey && this.heldKeys.has(key)) {\n            return false;\n        }\n        if (validResponses === \"ALL_KEYS\") {\n            return true;\n        }\n        if (validResponses === \"NO_KEYS\") {\n            return false;\n        }\n        return validResponses.includes(key);\n    }\n    getKeyboardResponse({ callback_function, valid_responses = \"ALL_KEYS\", rt_method = \"performance\", persist, audio_context, audio_context_start_time, allow_held_key = false, minimum_valid_rt = this.minimumValidRt, }) {\n        if (rt_method !== \"performance\" && rt_method !== \"audio\") {\n            console.log('Invalid RT method specified in getKeyboardResponse. Defaulting to \"performance\" method.');\n            rt_method = \"performance\";\n        }\n        const usePerformanceRt = rt_method === \"performance\";\n        const startTime = usePerformanceRt ? performance.now() : audio_context_start_time * 1000;\n        this.registerRootListeners();\n        if (!this.areResponsesCaseSensitive && typeof valid_responses !== \"string\") {\n            valid_responses = valid_responses.map((r) => r.toLowerCase());\n        }\n        const listener = (e) => {\n            const rt = Math.round((rt_method == \"performance\" ? performance.now() : audio_context.currentTime * 1000) -\n                startTime);\n            if (rt < minimum_valid_rt) {\n                return;\n            }\n            const key = this.toLowerCaseIfInsensitive(e.key);\n            if (this.isResponseValid(valid_responses, allow_held_key, key)) {\n                // if this is a valid response, then we don't want the key event to trigger other actions\n                // like scrolling via the spacebar.\n                e.preventDefault();\n                if (!persist) {\n                    // remove keyboard listener if it exists\n                    this.cancelKeyboardResponse(listener);\n                }\n                callback_function({ key, rt });\n            }\n        };\n        this.listeners.add(listener);\n        return listener;\n    }\n    cancelKeyboardResponse(listener) {\n        // remove the listener from the set of listeners if it is contained\n        this.listeners.delete(listener);\n    }\n    cancelAllKeyboardResponses() {\n        this.listeners.clear();\n    }\n    compareKeys(key1, key2) {\n        if ((typeof key1 !== \"string\" && key1 !== null) ||\n            (typeof key2 !== \"string\" && key2 !== null)) {\n            console.error(\"Error in jsPsych.pluginAPI.compareKeys: arguments must be key strings or null.\");\n            return undefined;\n        }\n        if (typeof key1 === \"string\" && typeof key2 === \"string\") {\n            // if both values are strings, then check whether or not letter case should be converted before comparing (case_sensitive_responses in initJsPsych)\n            return this.areResponsesCaseSensitive\n                ? key1 === key2\n                : key1.toLowerCase() === key2.toLowerCase();\n        }\n        return key1 === null && key2 === null;\n    }\n}\n\n/**\n * Parameter types for plugins\n */\nvar ParameterType;\n(function (ParameterType) {\n    ParameterType[ParameterType[\"BOOL\"] = 0] = \"BOOL\";\n    ParameterType[ParameterType[\"STRING\"] = 1] = \"STRING\";\n    ParameterType[ParameterType[\"INT\"] = 2] = \"INT\";\n    ParameterType[ParameterType[\"FLOAT\"] = 3] = \"FLOAT\";\n    ParameterType[ParameterType[\"FUNCTION\"] = 4] = \"FUNCTION\";\n    ParameterType[ParameterType[\"KEY\"] = 5] = \"KEY\";\n    ParameterType[ParameterType[\"KEYS\"] = 6] = \"KEYS\";\n    ParameterType[ParameterType[\"SELECT\"] = 7] = \"SELECT\";\n    ParameterType[ParameterType[\"HTML_STRING\"] = 8] = \"HTML_STRING\";\n    ParameterType[ParameterType[\"IMAGE\"] = 9] = \"IMAGE\";\n    ParameterType[ParameterType[\"AUDIO\"] = 10] = \"AUDIO\";\n    ParameterType[ParameterType[\"VIDEO\"] = 11] = \"VIDEO\";\n    ParameterType[ParameterType[\"OBJECT\"] = 12] = \"OBJECT\";\n    ParameterType[ParameterType[\"COMPLEX\"] = 13] = \"COMPLEX\";\n    ParameterType[ParameterType[\"TIMELINE\"] = 14] = \"TIMELINE\";\n})(ParameterType || (ParameterType = {}));\nconst universalPluginParameters = {\n    /**\n     * Data to add to this trial (key-value pairs)\n     */\n    data: {\n        type: ParameterType.OBJECT,\n        pretty_name: \"Data\",\n        default: {},\n    },\n    /**\n     * Function to execute when trial begins\n     */\n    on_start: {\n        type: ParameterType.FUNCTION,\n        pretty_name: \"On start\",\n        default: function () {\n            return;\n        },\n    },\n    /**\n     * Function to execute when trial is finished\n     */\n    on_finish: {\n        type: ParameterType.FUNCTION,\n        pretty_name: \"On finish\",\n        default: function () {\n            return;\n        },\n    },\n    /**\n     * Function to execute after the trial has loaded\n     */\n    on_load: {\n        type: ParameterType.FUNCTION,\n        pretty_name: \"On load\",\n        default: function () {\n            return;\n        },\n    },\n    /**\n     * Length of gap between the end of this trial and the start of the next trial\n     */\n    post_trial_gap: {\n        type: ParameterType.INT,\n        pretty_name: \"Post trial gap\",\n        default: null,\n    },\n    /**\n     * A list of CSS classes to add to the jsPsych display element for the duration of this trial\n     */\n    css_classes: {\n        type: ParameterType.STRING,\n        pretty_name: \"Custom CSS classes\",\n        default: null,\n    },\n    /**\n     * Options to control simulation mode for the trial.\n     */\n    simulation_options: {\n        type: ParameterType.COMPLEX,\n        default: null,\n    },\n};\n\nconst preloadParameterTypes = [\n    ParameterType.AUDIO,\n    ParameterType.IMAGE,\n    ParameterType.VIDEO,\n];\nclass MediaAPI {\n    constructor(useWebaudio, webaudioContext) {\n        this.useWebaudio = useWebaudio;\n        this.webaudioContext = webaudioContext;\n        // video //\n        this.video_buffers = {};\n        // audio //\n        this.context = null;\n        this.audio_buffers = [];\n        // preloading stimuli //\n        this.preload_requests = [];\n        this.img_cache = {};\n        this.preloadMap = new Map();\n        this.microphone_recorder = null;\n        this.camera_stream = null;\n        this.camera_recorder = null;\n    }\n    getVideoBuffer(videoID) {\n        if (videoID.startsWith(\"blob:\")) {\n            this.video_buffers[videoID] = videoID;\n        }\n        return this.video_buffers[videoID];\n    }\n    initAudio() {\n        this.context = this.useWebaudio ? this.webaudioContext : null;\n    }\n    audioContext() {\n        if (this.context !== null) {\n            if (this.context.state !== \"running\") {\n                this.context.resume();\n            }\n        }\n        return this.context;\n    }\n    getAudioBuffer(audioID) {\n        return new Promise((resolve, reject) => {\n            // check whether audio file already preloaded\n            if (typeof this.audio_buffers[audioID] == \"undefined\" ||\n                this.audio_buffers[audioID] == \"tmp\") {\n                // if audio is not already loaded, try to load it\n                this.preloadAudio([audioID], () => {\n                    resolve(this.audio_buffers[audioID]);\n                }, () => { }, (e) => {\n                    reject(e.error);\n                });\n            }\n            else {\n                // audio is already loaded\n                resolve(this.audio_buffers[audioID]);\n            }\n        });\n    }\n    preloadAudio(files, callback_complete = () => { }, callback_load = (filepath) => { }, callback_error = (error_msg) => { }) {\n        files = unique(files.flat());\n        let n_loaded = 0;\n        if (files.length == 0) {\n            callback_complete();\n            return;\n        }\n        const load_audio_file_webaudio = (source, count = 1) => {\n            const request = new XMLHttpRequest();\n            request.open(\"GET\", source, true);\n            request.responseType = \"arraybuffer\";\n            request.onload = () => {\n                this.context.decodeAudioData(request.response, (buffer) => {\n                    this.audio_buffers[source] = buffer;\n                    n_loaded++;\n                    callback_load(source);\n                    if (n_loaded == files.length) {\n                        callback_complete();\n                    }\n                }, (e) => {\n                    callback_error({ source: source, error: e });\n                });\n            };\n            request.onerror = (e) => {\n                let err = e;\n                if (request.status == 404) {\n                    err = \"404\";\n                }\n                callback_error({ source: source, error: err });\n            };\n            request.onloadend = (e) => {\n                if (request.status == 404) {\n                    callback_error({ source: source, error: \"404\" });\n                }\n            };\n            request.send();\n            this.preload_requests.push(request);\n        };\n        const load_audio_file_html5audio = (source, count = 1) => {\n            const audio = new Audio();\n            const handleCanPlayThrough = () => {\n                this.audio_buffers[source] = audio;\n                n_loaded++;\n                callback_load(source);\n                if (n_loaded == files.length) {\n                    callback_complete();\n                }\n                audio.removeEventListener(\"canplaythrough\", handleCanPlayThrough);\n            };\n            audio.addEventListener(\"canplaythrough\", handleCanPlayThrough);\n            audio.addEventListener(\"error\", function handleError(e) {\n                callback_error({ source: audio.src, error: e });\n                audio.removeEventListener(\"error\", handleError);\n            });\n            audio.addEventListener(\"abort\", function handleAbort(e) {\n                callback_error({ source: audio.src, error: e });\n                audio.removeEventListener(\"abort\", handleAbort);\n            });\n            audio.src = source;\n            this.preload_requests.push(audio);\n        };\n        for (const file of files) {\n            if (typeof this.audio_buffers[file] !== \"undefined\") {\n                n_loaded++;\n                callback_load(file);\n                if (n_loaded == files.length) {\n                    callback_complete();\n                }\n            }\n            else {\n                this.audio_buffers[file] = \"tmp\";\n                if (this.audioContext() !== null) {\n                    load_audio_file_webaudio(file);\n                }\n                else {\n                    load_audio_file_html5audio(file);\n                }\n            }\n        }\n    }\n    preloadImages(images, callback_complete = () => { }, callback_load = (filepath) => { }, callback_error = (error_msg) => { }) {\n        // flatten the images array\n        images = unique(images.flat());\n        var n_loaded = 0;\n        if (images.length === 0) {\n            callback_complete();\n            return;\n        }\n        for (let i = 0; i < images.length; i++) {\n            const img = new Image();\n            const src = images[i];\n            img.onload = () => {\n                n_loaded++;\n                callback_load(src);\n                if (n_loaded === images.length) {\n                    callback_complete();\n                }\n            };\n            img.onerror = (e) => {\n                callback_error({ source: src, error: e });\n            };\n            img.src = src;\n            this.img_cache[src] = img;\n            this.preload_requests.push(img);\n        }\n    }\n    preloadVideo(videos, callback_complete = () => { }, callback_load = (filepath) => { }, callback_error = (error_msg) => { }) {\n        // flatten the video array\n        videos = unique(videos.flat());\n        let n_loaded = 0;\n        if (videos.length === 0) {\n            callback_complete();\n            return;\n        }\n        for (const video of videos) {\n            const video_buffers = this.video_buffers;\n            //based on option 4 here: http://dinbror.dk/blog/how-to-preload-entire-html5-video-before-play-solved/\n            const request = new XMLHttpRequest();\n            request.open(\"GET\", video, true);\n            request.responseType = \"blob\";\n            request.onload = () => {\n                if (request.status === 200 || request.status === 0) {\n                    const videoBlob = request.response;\n                    video_buffers[video] = URL.createObjectURL(videoBlob); // IE10+\n                    n_loaded++;\n                    callback_load(video);\n                    if (n_loaded === videos.length) {\n                        callback_complete();\n                    }\n                }\n            };\n            request.onerror = (e) => {\n                let err = e;\n                if (request.status == 404) {\n                    err = \"404\";\n                }\n                callback_error({ source: video, error: err });\n            };\n            request.onloadend = (e) => {\n                if (request.status == 404) {\n                    callback_error({ source: video, error: \"404\" });\n                }\n            };\n            request.send();\n            this.preload_requests.push(request);\n        }\n    }\n    getAutoPreloadList(timeline_description) {\n        /** Map each preload parameter type to a set of paths to be preloaded */\n        const preloadPaths = Object.fromEntries(preloadParameterTypes.map((type) => [type, new Set()]));\n        const traverseTimeline = (node, inheritedTrialType) => {\n            var _a, _b, _c, _d;\n            const isTimeline = typeof node.timeline !== \"undefined\";\n            if (isTimeline) {\n                for (const childNode of node.timeline) {\n                    traverseTimeline(childNode, (_a = node.type) !== null && _a !== void 0 ? _a : inheritedTrialType);\n                }\n            }\n            else if ((_c = ((_b = node.type) !== null && _b !== void 0 ? _b : inheritedTrialType)) === null || _c === void 0 ? void 0 : _c.info) {\n                // node is a trial with type.info set\n                // Get the plugin name and parameters object from the info object\n                const { name: pluginName, parameters } = ((_d = node.type) !== null && _d !== void 0 ? _d : inheritedTrialType).info;\n                // Extract parameters to be preloaded and their types from parameter info if this has not\n                // yet been done for `pluginName`\n                if (!this.preloadMap.has(pluginName)) {\n                    this.preloadMap.set(pluginName, Object.fromEntries(Object.entries(parameters)\n                        // Filter out parameter entries with media types and a non-false `preload` option\n                        .filter(([_name, { type, preload }]) => preloadParameterTypes.includes(type) && (preload !== null && preload !== void 0 ? preload : true))\n                        // Map each entry's value to its parameter type\n                        .map(([name, { type }]) => [name, type])));\n                }\n                // Add preload paths from this trial\n                for (const [parameterName, parameterType] of Object.entries(this.preloadMap.get(pluginName))) {\n                    const parameterValue = node[parameterName];\n                    const elements = preloadPaths[parameterType];\n                    if (typeof parameterValue === \"string\") {\n                        elements.add(parameterValue);\n                    }\n                    else if (Array.isArray(parameterValue)) {\n                        for (const element of parameterValue.flat()) {\n                            if (typeof element === \"string\") {\n                                elements.add(element);\n                            }\n                        }\n                    }\n                }\n            }\n        };\n        traverseTimeline({ timeline: timeline_description });\n        return {\n            images: [...preloadPaths[ParameterType.IMAGE]],\n            audio: [...preloadPaths[ParameterType.AUDIO]],\n            video: [...preloadPaths[ParameterType.VIDEO]],\n        };\n    }\n    cancelPreloads() {\n        for (const request of this.preload_requests) {\n            request.onload = () => { };\n            request.onerror = () => { };\n            request.oncanplaythrough = () => { };\n            request.onabort = () => { };\n        }\n        this.preload_requests = [];\n    }\n    initializeMicrophoneRecorder(stream) {\n        const recorder = new MediaRecorder(stream);\n        this.microphone_recorder = recorder;\n    }\n    getMicrophoneRecorder() {\n        return this.microphone_recorder;\n    }\n    initializeCameraRecorder(stream, opts) {\n        this.camera_stream = stream;\n        const recorder = new MediaRecorder(stream, opts);\n        this.camera_recorder = recorder;\n    }\n    getCameraStream() {\n        return this.camera_stream;\n    }\n    getCameraRecorder() {\n        return this.camera_recorder;\n    }\n}\n\nclass SimulationAPI {\n    constructor(getDisplayContainerElement, setJsPsychTimeout) {\n        this.getDisplayContainerElement = getDisplayContainerElement;\n        this.setJsPsychTimeout = setJsPsychTimeout;\n    }\n    dispatchEvent(event) {\n        this.getDisplayContainerElement().dispatchEvent(event);\n    }\n    /**\n     * Dispatches a `keydown` event for the specified key\n     * @param key Character code (`.key` property) for the key to press.\n     */\n    keyDown(key) {\n        this.dispatchEvent(new KeyboardEvent(\"keydown\", { key }));\n    }\n    /**\n     * Dispatches a `keyup` event for the specified key\n     * @param key Character code (`.key` property) for the key to press.\n     */\n    keyUp(key) {\n        this.dispatchEvent(new KeyboardEvent(\"keyup\", { key }));\n    }\n    /**\n     * Dispatches a `keydown` and `keyup` event in sequence to simulate pressing a key.\n     * @param key Character code (`.key` property) for the key to press.\n     * @param delay Length of time to wait (ms) before executing action\n     */\n    pressKey(key, delay = 0) {\n        if (delay > 0) {\n            this.setJsPsychTimeout(() => {\n                this.keyDown(key);\n                this.keyUp(key);\n            }, delay);\n        }\n        else {\n            this.keyDown(key);\n            this.keyUp(key);\n        }\n    }\n    /**\n     * Dispatches `mousedown`, `mouseup`, and `click` events on the target element\n     * @param target The element to click\n     * @param delay Length of time to wait (ms) before executing action\n     */\n    clickTarget(target, delay = 0) {\n        if (delay > 0) {\n            this.setJsPsychTimeout(() => {\n                target.dispatchEvent(new MouseEvent(\"mousedown\", { bubbles: true }));\n                target.dispatchEvent(new MouseEvent(\"mouseup\", { bubbles: true }));\n                target.dispatchEvent(new MouseEvent(\"click\", { bubbles: true }));\n            }, delay);\n        }\n        else {\n            target.dispatchEvent(new MouseEvent(\"mousedown\", { bubbles: true }));\n            target.dispatchEvent(new MouseEvent(\"mouseup\", { bubbles: true }));\n            target.dispatchEvent(new MouseEvent(\"click\", { bubbles: true }));\n        }\n    }\n    /**\n     * Sets the value of a target text input\n     * @param target A text input element to fill in\n     * @param text Text to input\n     * @param delay Length of time to wait (ms) before executing action\n     */\n    fillTextInput(target, text, delay = 0) {\n        if (delay > 0) {\n            this.setJsPsychTimeout(() => {\n                target.value = text;\n            }, delay);\n        }\n        else {\n            target.value = text;\n        }\n    }\n    /**\n     * Picks a valid key from `choices`, taking into account jsPsych-specific\n     * identifiers like \"NO_KEYS\" and \"ALL_KEYS\".\n     * @param choices Which keys are valid.\n     * @returns A key selected at random from the valid keys.\n     */\n    getValidKey(choices) {\n        const possible_keys = [\n            \"a\",\n            \"b\",\n            \"c\",\n            \"d\",\n            \"e\",\n            \"f\",\n            \"g\",\n            \"h\",\n            \"i\",\n            \"j\",\n            \"k\",\n            \"l\",\n            \"m\",\n            \"n\",\n            \"o\",\n            \"p\",\n            \"q\",\n            \"r\",\n            \"s\",\n            \"t\",\n            \"u\",\n            \"v\",\n            \"w\",\n            \"x\",\n            \"y\",\n            \"z\",\n            \"0\",\n            \"1\",\n            \"2\",\n            \"3\",\n            \"4\",\n            \"5\",\n            \"6\",\n            \"7\",\n            \"8\",\n            \"9\",\n            \" \",\n        ];\n        let key;\n        if (choices == \"NO_KEYS\") {\n            key = null;\n        }\n        else if (choices == \"ALL_KEYS\") {\n            key = possible_keys[Math.floor(Math.random() * possible_keys.length)];\n        }\n        else {\n            const flat_choices = choices.flat();\n            key = flat_choices[Math.floor(Math.random() * flat_choices.length)];\n        }\n        return key;\n    }\n    mergeSimulationData(default_data, simulation_options) {\n        // override any data with data from simulation object\n        return Object.assign(Object.assign({}, default_data), simulation_options === null || simulation_options === void 0 ? void 0 : simulation_options.data);\n    }\n    ensureSimulationDataConsistency(trial, data) {\n        // All RTs must be rounded\n        if (data.rt) {\n            data.rt = Math.round(data.rt);\n        }\n        // If a trial_duration and rt exist, make sure that the RT is not longer than the trial.\n        if (trial.trial_duration && data.rt && data.rt > trial.trial_duration) {\n            data.rt = null;\n            if (data.response) {\n                data.response = null;\n            }\n            if (data.correct) {\n                data.correct = false;\n            }\n        }\n        // If trial.choices is NO_KEYS make sure that response and RT are null\n        if (trial.choices && trial.choices == \"NO_KEYS\") {\n            if (data.rt) {\n                data.rt = null;\n            }\n            if (data.response) {\n                data.response = null;\n            }\n        }\n        // If response is not allowed before stimulus display complete, ensure RT\n        // is longer than display time.\n        if (trial.allow_response_before_complete) {\n            if (trial.sequence_reps && trial.frame_time) {\n                const min_time = trial.sequence_reps * trial.frame_time * trial.stimuli.length;\n                if (data.rt < min_time) {\n                    data.rt = null;\n                    data.response = null;\n                }\n            }\n        }\n    }\n}\n\n/**\n * A class that provides a wrapper around the global setTimeout and clearTimeout functions.\n */\nclass TimeoutAPI {\n    constructor() {\n        this.timeout_handlers = [];\n    }\n    /**\n     * Calls a function after a specified delay, in milliseconds.\n     * @param callback The function to call after the delay.\n     * @param delay The number of milliseconds to wait before calling the function.\n     * @returns A handle that can be used to clear the timeout with clearTimeout.\n     */\n    setTimeout(callback, delay) {\n        const handle = window.setTimeout(callback, delay);\n        this.timeout_handlers.push(handle);\n        return handle;\n    }\n    /**\n     * Clears all timeouts that have been created with setTimeout.\n     */\n    clearAllTimeouts() {\n        for (const handler of this.timeout_handlers) {\n            clearTimeout(handler);\n        }\n        this.timeout_handlers = [];\n    }\n}\n\nfunction createJointPluginAPIObject(jsPsych) {\n    const settings = jsPsych.getInitSettings();\n    const keyboardListenerAPI = autoBind$1(new KeyboardListenerAPI(jsPsych.getDisplayContainerElement, settings.case_sensitive_responses, settings.minimum_valid_rt));\n    const timeoutAPI = autoBind$1(new TimeoutAPI());\n    const mediaAPI = autoBind$1(new MediaAPI(settings.use_webaudio, jsPsych.webaudio_context));\n    const hardwareAPI = autoBind$1(new HardwareAPI());\n    const simulationAPI = autoBind$1(new SimulationAPI(jsPsych.getDisplayContainerElement, timeoutAPI.setTimeout));\n    return Object.assign({}, ...[keyboardListenerAPI, timeoutAPI, mediaAPI, hardwareAPI, simulationAPI]);\n}\n\nvar alea$1 = {exports: {}};\n\nalea$1.exports;\n\n(function (module) {\n\t// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n\t// http://baagoe.com/en/RandomMusings/javascript/\n\t// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n\t// Original work is under MIT license -\n\n\t// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a copy\n\t// of this software and associated documentation files (the \"Software\"), to deal\n\t// in the Software without restriction, including without limitation the rights\n\t// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t// copies of the Software, and to permit persons to whom the Software is\n\t// furnished to do so, subject to the following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included in\n\t// all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t// THE SOFTWARE.\n\n\n\n\t(function(global, module, define) {\n\n\tfunction Alea(seed) {\n\t  var me = this, mash = Mash();\n\n\t  me.next = function() {\n\t    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n\t    me.s0 = me.s1;\n\t    me.s1 = me.s2;\n\t    return me.s2 = t - (me.c = t | 0);\n\t  };\n\n\t  // Apply the seeding algorithm from Baagoe.\n\t  me.c = 1;\n\t  me.s0 = mash(' ');\n\t  me.s1 = mash(' ');\n\t  me.s2 = mash(' ');\n\t  me.s0 -= mash(seed);\n\t  if (me.s0 < 0) { me.s0 += 1; }\n\t  me.s1 -= mash(seed);\n\t  if (me.s1 < 0) { me.s1 += 1; }\n\t  me.s2 -= mash(seed);\n\t  if (me.s2 < 0) { me.s2 += 1; }\n\t  mash = null;\n\t}\n\n\tfunction copy(f, t) {\n\t  t.c = f.c;\n\t  t.s0 = f.s0;\n\t  t.s1 = f.s1;\n\t  t.s2 = f.s2;\n\t  return t;\n\t}\n\n\tfunction impl(seed, opts) {\n\t  var xg = new Alea(seed),\n\t      state = opts && opts.state,\n\t      prng = xg.next;\n\t  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; };\n\t  prng.double = function() {\n\t    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n\t  };\n\t  prng.quick = prng;\n\t  if (state) {\n\t    if (typeof(state) == 'object') copy(state, xg);\n\t    prng.state = function() { return copy(xg, {}); };\n\t  }\n\t  return prng;\n\t}\n\n\tfunction Mash() {\n\t  var n = 0xefc8249d;\n\n\t  var mash = function(data) {\n\t    data = String(data);\n\t    for (var i = 0; i < data.length; i++) {\n\t      n += data.charCodeAt(i);\n\t      var h = 0.02519603282416938 * n;\n\t      n = h >>> 0;\n\t      h -= n;\n\t      h *= n;\n\t      n = h >>> 0;\n\t      h -= n;\n\t      n += h * 0x100000000; // 2^32\n\t    }\n\t    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n\t  };\n\n\t  return mash;\n\t}\n\n\n\tif (module && module.exports) {\n\t  module.exports = impl;\n\t} else if (define && define.amd) {\n\t  define(function() { return impl; });\n\t} else {\n\t  this.alea = impl;\n\t}\n\n\t})(\n\t  commonjsGlobal,\n\t  module,    // present in node.js\n\t  (typeof undefined) == 'function'    // present with an AMD loader\n\t); \n} (alea$1));\n\nvar aleaExports = alea$1.exports;\nvar seedrandom$3 = /*@__PURE__*/getDefaultExportFromCjs(aleaExports);\n\nvar xor128$1 = {exports: {}};\n\nxor128$1.exports;\n\n(function (module) {\n\t// A Javascript implementaion of the \"xor128\" prng algorithm by\n\t// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n\t(function(global, module, define) {\n\n\tfunction XorGen(seed) {\n\t  var me = this, strseed = '';\n\n\t  me.x = 0;\n\t  me.y = 0;\n\t  me.z = 0;\n\t  me.w = 0;\n\n\t  // Set up generator function.\n\t  me.next = function() {\n\t    var t = me.x ^ (me.x << 11);\n\t    me.x = me.y;\n\t    me.y = me.z;\n\t    me.z = me.w;\n\t    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n\t  };\n\n\t  if (seed === (seed | 0)) {\n\t    // Integer seed.\n\t    me.x = seed;\n\t  } else {\n\t    // String seed.\n\t    strseed += seed;\n\t  }\n\n\t  // Mix in string seed, then discard an initial batch of 64 values.\n\t  for (var k = 0; k < strseed.length + 64; k++) {\n\t    me.x ^= strseed.charCodeAt(k) | 0;\n\t    me.next();\n\t  }\n\t}\n\n\tfunction copy(f, t) {\n\t  t.x = f.x;\n\t  t.y = f.y;\n\t  t.z = f.z;\n\t  t.w = f.w;\n\t  return t;\n\t}\n\n\tfunction impl(seed, opts) {\n\t  var xg = new XorGen(seed),\n\t      state = opts && opts.state,\n\t      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n\t  prng.double = function() {\n\t    do {\n\t      var top = xg.next() >>> 11,\n\t          bot = (xg.next() >>> 0) / 0x100000000,\n\t          result = (top + bot) / (1 << 21);\n\t    } while (result === 0);\n\t    return result;\n\t  };\n\t  prng.int32 = xg.next;\n\t  prng.quick = prng;\n\t  if (state) {\n\t    if (typeof(state) == 'object') copy(state, xg);\n\t    prng.state = function() { return copy(xg, {}); };\n\t  }\n\t  return prng;\n\t}\n\n\tif (module && module.exports) {\n\t  module.exports = impl;\n\t} else if (define && define.amd) {\n\t  define(function() { return impl; });\n\t} else {\n\t  this.xor128 = impl;\n\t}\n\n\t})(\n\t  commonjsGlobal,\n\t  module,    // present in node.js\n\t  (typeof undefined) == 'function'    // present with an AMD loader\n\t); \n} (xor128$1));\n\nvar xor128Exports = xor128$1.exports;\n\nvar xorwow$1 = {exports: {}};\n\nxorwow$1.exports;\n\n(function (module) {\n\t// A Javascript implementaion of the \"xorwow\" prng algorithm by\n\t// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n\t(function(global, module, define) {\n\n\tfunction XorGen(seed) {\n\t  var me = this, strseed = '';\n\n\t  // Set up generator function.\n\t  me.next = function() {\n\t    var t = (me.x ^ (me.x >>> 2));\n\t    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n\t    return (me.d = (me.d + 362437 | 0)) +\n\t       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n\t  };\n\n\t  me.x = 0;\n\t  me.y = 0;\n\t  me.z = 0;\n\t  me.w = 0;\n\t  me.v = 0;\n\n\t  if (seed === (seed | 0)) {\n\t    // Integer seed.\n\t    me.x = seed;\n\t  } else {\n\t    // String seed.\n\t    strseed += seed;\n\t  }\n\n\t  // Mix in string seed, then discard an initial batch of 64 values.\n\t  for (var k = 0; k < strseed.length + 64; k++) {\n\t    me.x ^= strseed.charCodeAt(k) | 0;\n\t    if (k == strseed.length) {\n\t      me.d = me.x << 10 ^ me.x >>> 4;\n\t    }\n\t    me.next();\n\t  }\n\t}\n\n\tfunction copy(f, t) {\n\t  t.x = f.x;\n\t  t.y = f.y;\n\t  t.z = f.z;\n\t  t.w = f.w;\n\t  t.v = f.v;\n\t  t.d = f.d;\n\t  return t;\n\t}\n\n\tfunction impl(seed, opts) {\n\t  var xg = new XorGen(seed),\n\t      state = opts && opts.state,\n\t      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n\t  prng.double = function() {\n\t    do {\n\t      var top = xg.next() >>> 11,\n\t          bot = (xg.next() >>> 0) / 0x100000000,\n\t          result = (top + bot) / (1 << 21);\n\t    } while (result === 0);\n\t    return result;\n\t  };\n\t  prng.int32 = xg.next;\n\t  prng.quick = prng;\n\t  if (state) {\n\t    if (typeof(state) == 'object') copy(state, xg);\n\t    prng.state = function() { return copy(xg, {}); };\n\t  }\n\t  return prng;\n\t}\n\n\tif (module && module.exports) {\n\t  module.exports = impl;\n\t} else if (define && define.amd) {\n\t  define(function() { return impl; });\n\t} else {\n\t  this.xorwow = impl;\n\t}\n\n\t})(\n\t  commonjsGlobal,\n\t  module,    // present in node.js\n\t  (typeof undefined) == 'function'    // present with an AMD loader\n\t); \n} (xorwow$1));\n\nvar xorwowExports = xorwow$1.exports;\n\nvar xorshift7$1 = {exports: {}};\n\nxorshift7$1.exports;\n\n(function (module) {\n\t// A Javascript implementaion of the \"xorshift7\" algorithm by\n\t// François Panneton and Pierre L'ecuyer:\n\t// \"On the Xorgshift Random Number Generators\"\n\t// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n\t(function(global, module, define) {\n\n\tfunction XorGen(seed) {\n\t  var me = this;\n\n\t  // Set up generator function.\n\t  me.next = function() {\n\t    // Update xor generator.\n\t    var X = me.x, i = me.i, t, v;\n\t    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n\t    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n\t    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n\t    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n\t    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n\t    X[i] = v;\n\t    me.i = (i + 1) & 7;\n\t    return v;\n\t  };\n\n\t  function init(me, seed) {\n\t    var j, X = [];\n\n\t    if (seed === (seed | 0)) {\n\t      // Seed state array using a 32-bit integer.\n\t      X[0] = seed;\n\t    } else {\n\t      // Seed state using a string.\n\t      seed = '' + seed;\n\t      for (j = 0; j < seed.length; ++j) {\n\t        X[j & 7] = (X[j & 7] << 15) ^\n\t            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n\t      }\n\t    }\n\t    // Enforce an array length of 8, not all zeroes.\n\t    while (X.length < 8) X.push(0);\n\t    for (j = 0; j < 8 && X[j] === 0; ++j);\n\t    if (j == 8) X[7] = -1; else X[j];\n\n\t    me.x = X;\n\t    me.i = 0;\n\n\t    // Discard an initial 256 values.\n\t    for (j = 256; j > 0; --j) {\n\t      me.next();\n\t    }\n\t  }\n\n\t  init(me, seed);\n\t}\n\n\tfunction copy(f, t) {\n\t  t.x = f.x.slice();\n\t  t.i = f.i;\n\t  return t;\n\t}\n\n\tfunction impl(seed, opts) {\n\t  if (seed == null) seed = +(new Date);\n\t  var xg = new XorGen(seed),\n\t      state = opts && opts.state,\n\t      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n\t  prng.double = function() {\n\t    do {\n\t      var top = xg.next() >>> 11,\n\t          bot = (xg.next() >>> 0) / 0x100000000,\n\t          result = (top + bot) / (1 << 21);\n\t    } while (result === 0);\n\t    return result;\n\t  };\n\t  prng.int32 = xg.next;\n\t  prng.quick = prng;\n\t  if (state) {\n\t    if (state.x) copy(state, xg);\n\t    prng.state = function() { return copy(xg, {}); };\n\t  }\n\t  return prng;\n\t}\n\n\tif (module && module.exports) {\n\t  module.exports = impl;\n\t} else if (define && define.amd) {\n\t  define(function() { return impl; });\n\t} else {\n\t  this.xorshift7 = impl;\n\t}\n\n\t})(\n\t  commonjsGlobal,\n\t  module,    // present in node.js\n\t  (typeof undefined) == 'function'    // present with an AMD loader\n\t); \n} (xorshift7$1));\n\nvar xorshift7Exports = xorshift7$1.exports;\n\nvar xor4096$1 = {exports: {}};\n\nxor4096$1.exports;\n\n(function (module) {\n\t// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n\t//\n\t// This fast non-cryptographic random number generator is designed for\n\t// use in Monte-Carlo algorithms. It combines a long-period xorshift\n\t// generator with a Weyl generator, and it passes all common batteries\n\t// of stasticial tests for randomness while consuming only a few nanoseconds\n\t// for each prng generated.  For background on the generator, see Brent's\n\t// paper: \"Some long-period random number generators using shifts and xors.\"\n\t// http://arxiv.org/pdf/1004.3115v1.pdf\n\t//\n\t// Usage:\n\t//\n\t// var xor4096 = require('xor4096');\n\t// random = xor4096(1);                        // Seed with int32 or string.\n\t// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n\t// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n\t//\n\t// For nonzero numeric keys, this impelementation provides a sequence\n\t// identical to that by Brent's xorgens 3 implementaion in C.  This\n\t// implementation also provides for initalizing the generator with\n\t// string seeds, or for saving and restoring the state of the generator.\n\t//\n\t// On Chrome, this prng benchmarks about 2.1 times slower than\n\t// Javascript's built-in Math.random().\n\n\t(function(global, module, define) {\n\n\tfunction XorGen(seed) {\n\t  var me = this;\n\n\t  // Set up generator function.\n\t  me.next = function() {\n\t    var w = me.w,\n\t        X = me.X, i = me.i, t, v;\n\t    // Update Weyl generator.\n\t    me.w = w = (w + 0x61c88647) | 0;\n\t    // Update xor generator.\n\t    v = X[(i + 34) & 127];\n\t    t = X[i = ((i + 1) & 127)];\n\t    v ^= v << 13;\n\t    t ^= t << 17;\n\t    v ^= v >>> 15;\n\t    t ^= t >>> 12;\n\t    // Update Xor generator array state.\n\t    v = X[i] = v ^ t;\n\t    me.i = i;\n\t    // Result is the combination.\n\t    return (v + (w ^ (w >>> 16))) | 0;\n\t  };\n\n\t  function init(me, seed) {\n\t    var t, v, i, j, w, X = [], limit = 128;\n\t    if (seed === (seed | 0)) {\n\t      // Numeric seeds initialize v, which is used to generates X.\n\t      v = seed;\n\t      seed = null;\n\t    } else {\n\t      // String seeds are mixed into v and X one character at a time.\n\t      seed = seed + '\\0';\n\t      v = 0;\n\t      limit = Math.max(limit, seed.length);\n\t    }\n\t    // Initialize circular array and weyl value.\n\t    for (i = 0, j = -32; j < limit; ++j) {\n\t      // Put the unicode characters into the array, and shuffle them.\n\t      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n\t      // After 32 shuffles, take v as the starting w value.\n\t      if (j === 0) w = v;\n\t      v ^= v << 10;\n\t      v ^= v >>> 15;\n\t      v ^= v << 4;\n\t      v ^= v >>> 13;\n\t      if (j >= 0) {\n\t        w = (w + 0x61c88647) | 0;     // Weyl.\n\t        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n\t        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n\t      }\n\t    }\n\t    // We have detected all zeroes; make the key nonzero.\n\t    if (i >= 128) {\n\t      X[(seed && seed.length || 0) & 127] = -1;\n\t    }\n\t    // Run the generator 512 times to further mix the state before using it.\n\t    // Factoring this as a function slows the main generator, so it is just\n\t    // unrolled here.  The weyl generator is not advanced while warming up.\n\t    i = 127;\n\t    for (j = 4 * 128; j > 0; --j) {\n\t      v = X[(i + 34) & 127];\n\t      t = X[i = ((i + 1) & 127)];\n\t      v ^= v << 13;\n\t      t ^= t << 17;\n\t      v ^= v >>> 15;\n\t      t ^= t >>> 12;\n\t      X[i] = v ^ t;\n\t    }\n\t    // Storing state as object members is faster than using closure variables.\n\t    me.w = w;\n\t    me.X = X;\n\t    me.i = i;\n\t  }\n\n\t  init(me, seed);\n\t}\n\n\tfunction copy(f, t) {\n\t  t.i = f.i;\n\t  t.w = f.w;\n\t  t.X = f.X.slice();\n\t  return t;\n\t}\n\tfunction impl(seed, opts) {\n\t  if (seed == null) seed = +(new Date);\n\t  var xg = new XorGen(seed),\n\t      state = opts && opts.state,\n\t      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n\t  prng.double = function() {\n\t    do {\n\t      var top = xg.next() >>> 11,\n\t          bot = (xg.next() >>> 0) / 0x100000000,\n\t          result = (top + bot) / (1 << 21);\n\t    } while (result === 0);\n\t    return result;\n\t  };\n\t  prng.int32 = xg.next;\n\t  prng.quick = prng;\n\t  if (state) {\n\t    if (state.X) copy(state, xg);\n\t    prng.state = function() { return copy(xg, {}); };\n\t  }\n\t  return prng;\n\t}\n\n\tif (module && module.exports) {\n\t  module.exports = impl;\n\t} else if (define && define.amd) {\n\t  define(function() { return impl; });\n\t} else {\n\t  this.xor4096 = impl;\n\t}\n\n\t})(\n\t  commonjsGlobal,                                     // window object or global\n\t  module,    // present in node.js\n\t  (typeof undefined) == 'function'    // present with an AMD loader\n\t); \n} (xor4096$1));\n\nvar xor4096Exports = xor4096$1.exports;\n\nvar tychei$1 = {exports: {}};\n\ntychei$1.exports;\n\n(function (module) {\n\t// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n\t// Samuel Neves and Filipe Araujo.\n\t// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n\t(function(global, module, define) {\n\n\tfunction XorGen(seed) {\n\t  var me = this, strseed = '';\n\n\t  // Set up generator function.\n\t  me.next = function() {\n\t    var b = me.b, c = me.c, d = me.d, a = me.a;\n\t    b = (b << 25) ^ (b >>> 7) ^ c;\n\t    c = (c - d) | 0;\n\t    d = (d << 24) ^ (d >>> 8) ^ a;\n\t    a = (a - b) | 0;\n\t    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n\t    me.c = c = (c - d) | 0;\n\t    me.d = (d << 16) ^ (c >>> 16) ^ a;\n\t    return me.a = (a - b) | 0;\n\t  };\n\n\t  /* The following is non-inverted tyche, which has better internal\n\t   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n\t  me.next = function() {\n\t    var a = me.a, b = me.b, c = me.c, d = me.d;\n\t    a = (me.a + me.b | 0) >>> 0;\n\t    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n\t    c = me.c + d | 0;\n\t    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n\t    me.a = a = a + b | 0;\n\t    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n\t    me.c = c = c + d | 0;\n\t    b = b ^ c;\n\t    return me.b = (b << 7 ^ b >>> 25);\n\t  }\n\t  */\n\n\t  me.a = 0;\n\t  me.b = 0;\n\t  me.c = 2654435769 | 0;\n\t  me.d = 1367130551;\n\n\t  if (seed === Math.floor(seed)) {\n\t    // Integer seed.\n\t    me.a = (seed / 0x100000000) | 0;\n\t    me.b = seed | 0;\n\t  } else {\n\t    // String seed.\n\t    strseed += seed;\n\t  }\n\n\t  // Mix in string seed, then discard an initial batch of 64 values.\n\t  for (var k = 0; k < strseed.length + 20; k++) {\n\t    me.b ^= strseed.charCodeAt(k) | 0;\n\t    me.next();\n\t  }\n\t}\n\n\tfunction copy(f, t) {\n\t  t.a = f.a;\n\t  t.b = f.b;\n\t  t.c = f.c;\n\t  t.d = f.d;\n\t  return t;\n\t}\n\tfunction impl(seed, opts) {\n\t  var xg = new XorGen(seed),\n\t      state = opts && opts.state,\n\t      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n\t  prng.double = function() {\n\t    do {\n\t      var top = xg.next() >>> 11,\n\t          bot = (xg.next() >>> 0) / 0x100000000,\n\t          result = (top + bot) / (1 << 21);\n\t    } while (result === 0);\n\t    return result;\n\t  };\n\t  prng.int32 = xg.next;\n\t  prng.quick = prng;\n\t  if (state) {\n\t    if (typeof(state) == 'object') copy(state, xg);\n\t    prng.state = function() { return copy(xg, {}); };\n\t  }\n\t  return prng;\n\t}\n\n\tif (module && module.exports) {\n\t  module.exports = impl;\n\t} else if (define && define.amd) {\n\t  define(function() { return impl; });\n\t} else {\n\t  this.tychei = impl;\n\t}\n\n\t})(\n\t  commonjsGlobal,\n\t  module,    // present in node.js\n\t  (typeof undefined) == 'function'    // present with an AMD loader\n\t); \n} (tychei$1));\n\nvar tycheiExports = tychei$1.exports;\n\nvar seedrandom$2 = {exports: {}};\n\n/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (module) {\n\t(function (global, pool, math) {\n\t//\n\t// The following constants are related to IEEE 754 limits.\n\t//\n\n\tvar width = 256,        // each RC4 output is 0 <= x < 256\n\t    chunks = 6,         // at least six RC4 outputs for each double\n\t    digits = 52,        // there are 52 significant digits in a double\n\t    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n\t    startdenom = math.pow(width, chunks),\n\t    significance = math.pow(2, digits),\n\t    overflow = significance * 2,\n\t    mask = width - 1,\n\t    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n\t//\n\t// seedrandom()\n\t// This is the seedrandom function described above.\n\t//\n\tfunction seedrandom(seed, options, callback) {\n\t  var key = [];\n\t  options = (options == true) ? { entropy: true } : (options || {});\n\n\t  // Flatten the seed string or build one from local entropy if needed.\n\t  var shortseed = mixkey(flatten(\n\t    options.entropy ? [seed, tostring(pool)] :\n\t    (seed == null) ? autoseed() : seed, 3), key);\n\n\t  // Use the seed to initialize an ARC4 generator.\n\t  var arc4 = new ARC4(key);\n\n\t  // This function returns a random double in [0, 1) that contains\n\t  // randomness in every bit of the mantissa of the IEEE 754 value.\n\t  var prng = function() {\n\t    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n\t        d = startdenom,                 //   and denominator d = 2 ^ 48.\n\t        x = 0;                          //   and no 'extra last byte'.\n\t    while (n < significance) {          // Fill up all significant digits by\n\t      n = (n + x) * width;              //   shifting numerator and\n\t      d *= width;                       //   denominator and generating a\n\t      x = arc4.g(1);                    //   new least-significant-byte.\n\t    }\n\t    while (n >= overflow) {             // To avoid rounding up, before adding\n\t      n /= 2;                           //   last byte, shift everything\n\t      d /= 2;                           //   right using integer math until\n\t      x >>>= 1;                         //   we have exactly the desired bits.\n\t    }\n\t    return (n + x) / d;                 // Form the number within [0, 1).\n\t  };\n\n\t  prng.int32 = function() { return arc4.g(4) | 0; };\n\t  prng.quick = function() { return arc4.g(4) / 0x100000000; };\n\t  prng.double = prng;\n\n\t  // Mix the randomness into accumulated entropy.\n\t  mixkey(tostring(arc4.S), pool);\n\n\t  // Calling convention: what to return as a function of prng, seed, is_math.\n\t  return (options.pass || callback ||\n\t      function(prng, seed, is_math_call, state) {\n\t        if (state) {\n\t          // Load the arc4 state from the given state if it has an S array.\n\t          if (state.S) { copy(state, arc4); }\n\t          // Only provide the .state method if requested via options.state.\n\t          prng.state = function() { return copy(arc4, {}); };\n\t        }\n\n\t        // If called as a method of Math (Math.seedrandom()), mutate\n\t        // Math.random because that is how seedrandom.js has worked since v1.0.\n\t        if (is_math_call) { math[rngname] = prng; return seed; }\n\n\t        // Otherwise, it is a newer calling convention, so return the\n\t        // prng directly.\n\t        else return prng;\n\t      })(\n\t  prng,\n\t  shortseed,\n\t  'global' in options ? options.global : (this == math),\n\t  options.state);\n\t}\n\n\t//\n\t// ARC4\n\t//\n\t// An ARC4 implementation.  The constructor takes a key in the form of\n\t// an array of at most (width) integers that should be 0 <= x < (width).\n\t//\n\t// The g(count) method returns a pseudorandom integer that concatenates\n\t// the next (count) outputs from ARC4.  Its return value is a number x\n\t// that is in the range 0 <= x < (width ^ count).\n\t//\n\tfunction ARC4(key) {\n\t  var t, keylen = key.length,\n\t      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n\t  // The empty key [] is treated as [0].\n\t  if (!keylen) { key = [keylen++]; }\n\n\t  // Set up S using the standard key scheduling algorithm.\n\t  while (i < width) {\n\t    s[i] = i++;\n\t  }\n\t  for (i = 0; i < width; i++) {\n\t    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n\t    s[j] = t;\n\t  }\n\n\t  // The \"g\" method returns the next (count) outputs as one number.\n\t  (me.g = function(count) {\n\t    // Using instance members instead of closure state nearly doubles speed.\n\t    var t, r = 0,\n\t        i = me.i, j = me.j, s = me.S;\n\t    while (count--) {\n\t      t = s[i = mask & (i + 1)];\n\t      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n\t    }\n\t    me.i = i; me.j = j;\n\t    return r;\n\t    // For robust unpredictability, the function call below automatically\n\t    // discards an initial batch of values.  This is called RC4-drop[256].\n\t    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n\t  })(width);\n\t}\n\n\t//\n\t// copy()\n\t// Copies internal state of ARC4 to or from a plain object.\n\t//\n\tfunction copy(f, t) {\n\t  t.i = f.i;\n\t  t.j = f.j;\n\t  t.S = f.S.slice();\n\t  return t;\n\t}\n\t//\n\t// flatten()\n\t// Converts an object tree to nested arrays of strings.\n\t//\n\tfunction flatten(obj, depth) {\n\t  var result = [], typ = (typeof obj), prop;\n\t  if (depth && typ == 'object') {\n\t    for (prop in obj) {\n\t      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n\t    }\n\t  }\n\t  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n\t}\n\n\t//\n\t// mixkey()\n\t// Mixes a string seed into a key that is an array of integers, and\n\t// returns a shortened string seed that is equivalent to the result key.\n\t//\n\tfunction mixkey(seed, key) {\n\t  var stringseed = seed + '', smear, j = 0;\n\t  while (j < stringseed.length) {\n\t    key[mask & j] =\n\t      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n\t  }\n\t  return tostring(key);\n\t}\n\n\t//\n\t// autoseed()\n\t// Returns an object for autoseeding, using window.crypto and Node crypto\n\t// module if available.\n\t//\n\tfunction autoseed() {\n\t  try {\n\t    var out;\n\t    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n\t      // The use of 'out' to remember randomBytes makes tight minified code.\n\t      out = out(width);\n\t    } else {\n\t      out = new Uint8Array(width);\n\t      (global.crypto || global.msCrypto).getRandomValues(out);\n\t    }\n\t    return tostring(out);\n\t  } catch (e) {\n\t    var browser = global.navigator,\n\t        plugins = browser && browser.plugins;\n\t    return [+new Date, global, plugins, global.screen, tostring(pool)];\n\t  }\n\t}\n\n\t//\n\t// tostring()\n\t// Converts an array of charcodes to a string\n\t//\n\tfunction tostring(a) {\n\t  return String.fromCharCode.apply(0, a);\n\t}\n\n\t//\n\t// When seedrandom.js is loaded, we immediately mix a few bits\n\t// from the built-in RNG into the entropy pool.  Because we do\n\t// not want to interfere with deterministic PRNG state later,\n\t// seedrandom will not call math.random on its own again after\n\t// initialization.\n\t//\n\tmixkey(math.random(), pool);\n\n\t//\n\t// Nodejs and AMD support: export the implementation as a module using\n\t// either convention.\n\t//\n\tif (module.exports) {\n\t  module.exports = seedrandom;\n\t  // When in node.js, try using crypto package for autoseeding.\n\t  try {\n\t    nodecrypto = require('crypto');\n\t  } catch (ex) {}\n\t} else {\n\t  // When included as a plain script, set up Math.seedrandom global.\n\t  math['seed' + rngname] = seedrandom;\n\t}\n\n\n\t// End anonymous scope, and pass initial values.\n\t})(\n\t  // global: `self` in browsers (including strict mode and web workers),\n\t  // otherwise `this` in Node and other environments\n\t  (typeof self !== 'undefined') ? self : commonjsGlobal,\n\t  [],     // pool: entropy pool starts empty\n\t  Math    // math: package containing random, pow, and seedrandom\n\t); \n} (seedrandom$2));\n\nvar seedrandomExports = seedrandom$2.exports;\n\n// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = aleaExports;\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = xor128Exports;\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = xorwowExports;\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = xorshift7Exports;\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = xor4096Exports;\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = tycheiExports;\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = seedrandomExports;\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nvar seedrandom$1 = sr;\n\nvar seedrandom = seedrandom$1;\n\nvar wordList = [\n  // Borrowed from xkcd password generator which borrowed it from wherever\n  \"ability\",\"able\",\"aboard\",\"about\",\"above\",\"accept\",\"accident\",\"according\",\n  \"account\",\"accurate\",\"acres\",\"across\",\"act\",\"action\",\"active\",\"activity\",\n  \"actual\",\"actually\",\"add\",\"addition\",\"additional\",\"adjective\",\"adult\",\"adventure\",\n  \"advice\",\"affect\",\"afraid\",\"after\",\"afternoon\",\"again\",\"against\",\"age\",\n  \"ago\",\"agree\",\"ahead\",\"aid\",\"air\",\"airplane\",\"alike\",\"alive\",\n  \"all\",\"allow\",\"almost\",\"alone\",\"along\",\"aloud\",\"alphabet\",\"already\",\n  \"also\",\"although\",\"am\",\"among\",\"amount\",\"ancient\",\"angle\",\"angry\",\n  \"animal\",\"announced\",\"another\",\"answer\",\"ants\",\"any\",\"anybody\",\"anyone\",\n  \"anything\",\"anyway\",\"anywhere\",\"apart\",\"apartment\",\"appearance\",\"apple\",\"applied\",\n  \"appropriate\",\"are\",\"area\",\"arm\",\"army\",\"around\",\"arrange\",\"arrangement\",\n  \"arrive\",\"arrow\",\"art\",\"article\",\"as\",\"aside\",\"ask\",\"asleep\",\n  \"at\",\"ate\",\"atmosphere\",\"atom\",\"atomic\",\"attached\",\"attack\",\"attempt\",\n  \"attention\",\"audience\",\"author\",\"automobile\",\"available\",\"average\",\"avoid\",\"aware\",\n  \"away\",\"baby\",\"back\",\"bad\",\"badly\",\"bag\",\"balance\",\"ball\",\n  \"balloon\",\"band\",\"bank\",\"bar\",\"bare\",\"bark\",\"barn\",\"base\",\n  \"baseball\",\"basic\",\"basis\",\"basket\",\"bat\",\"battle\",\"be\",\"bean\",\n  \"bear\",\"beat\",\"beautiful\",\"beauty\",\"became\",\"because\",\"become\",\"becoming\",\n  \"bee\",\"been\",\"before\",\"began\",\"beginning\",\"begun\",\"behavior\",\"behind\",\n  \"being\",\"believed\",\"bell\",\"belong\",\"below\",\"belt\",\"bend\",\"beneath\",\n  \"bent\",\"beside\",\"best\",\"bet\",\"better\",\"between\",\"beyond\",\"bicycle\",\n  \"bigger\",\"biggest\",\"bill\",\"birds\",\"birth\",\"birthday\",\"bit\",\"bite\",\n  \"black\",\"blank\",\"blanket\",\"blew\",\"blind\",\"block\",\"blood\",\"blow\",\n  \"blue\",\"board\",\"boat\",\"body\",\"bone\",\"book\",\"border\",\"born\",\n  \"both\",\"bottle\",\"bottom\",\"bound\",\"bow\",\"bowl\",\"box\",\"boy\",\n  \"brain\",\"branch\",\"brass\",\"brave\",\"bread\",\"break\",\"breakfast\",\"breath\",\n  \"breathe\",\"breathing\",\"breeze\",\"brick\",\"bridge\",\"brief\",\"bright\",\"bring\",\n  \"broad\",\"broke\",\"broken\",\"brother\",\"brought\",\"brown\",\"brush\",\"buffalo\",\n  \"build\",\"building\",\"built\",\"buried\",\"burn\",\"burst\",\"bus\",\"bush\",\n  \"business\",\"busy\",\"but\",\"butter\",\"buy\",\"by\",\"cabin\",\"cage\",\n  \"cake\",\"call\",\"calm\",\"came\",\"camera\",\"camp\",\"can\",\"canal\",\n  \"cannot\",\"cap\",\"capital\",\"captain\",\"captured\",\"car\",\"carbon\",\"card\",\n  \"care\",\"careful\",\"carefully\",\"carried\",\"carry\",\"case\",\"cast\",\"castle\",\n  \"cat\",\"catch\",\"cattle\",\"caught\",\"cause\",\"cave\",\"cell\",\"cent\",\n  \"center\",\"central\",\"century\",\"certain\",\"certainly\",\"chain\",\"chair\",\"chamber\",\n  \"chance\",\"change\",\"changing\",\"chapter\",\"character\",\"characteristic\",\"charge\",\"chart\",\n  \"check\",\"cheese\",\"chemical\",\"chest\",\"chicken\",\"chief\",\"child\",\"children\",\n  \"choice\",\"choose\",\"chose\",\"chosen\",\"church\",\"circle\",\"circus\",\"citizen\",\n  \"city\",\"class\",\"classroom\",\"claws\",\"clay\",\"clean\",\"clear\",\"clearly\",\n  \"climate\",\"climb\",\"clock\",\"close\",\"closely\",\"closer\",\"cloth\",\"clothes\",\n  \"clothing\",\"cloud\",\"club\",\"coach\",\"coal\",\"coast\",\"coat\",\"coffee\",\n  \"cold\",\"collect\",\"college\",\"colony\",\"color\",\"column\",\"combination\",\"combine\",\n  \"come\",\"comfortable\",\"coming\",\"command\",\"common\",\"community\",\"company\",\"compare\",\n  \"compass\",\"complete\",\"completely\",\"complex\",\"composed\",\"composition\",\"compound\",\"concerned\",\n  \"condition\",\"congress\",\"connected\",\"consider\",\"consist\",\"consonant\",\"constantly\",\"construction\",\n  \"contain\",\"continent\",\"continued\",\"contrast\",\"control\",\"conversation\",\"cook\",\"cookies\",\n  \"cool\",\"copper\",\"copy\",\"corn\",\"corner\",\"correct\",\"correctly\",\"cost\",\n  \"cotton\",\"could\",\"count\",\"country\",\"couple\",\"courage\",\"course\",\"court\",\n  \"cover\",\"cow\",\"cowboy\",\"crack\",\"cream\",\"create\",\"creature\",\"crew\",\n  \"crop\",\"cross\",\"crowd\",\"cry\",\"cup\",\"curious\",\"current\",\"curve\",\n  \"customs\",\"cut\",\"cutting\",\"daily\",\"damage\",\"dance\",\"danger\",\"dangerous\",\n  \"dark\",\"darkness\",\"date\",\"daughter\",\"dawn\",\"day\",\"dead\",\"deal\",\n  \"dear\",\"death\",\"decide\",\"declared\",\"deep\",\"deeply\",\"deer\",\"definition\",\n  \"degree\",\"depend\",\"depth\",\"describe\",\"desert\",\"design\",\"desk\",\"detail\",\n  \"determine\",\"develop\",\"development\",\"diagram\",\"diameter\",\"did\",\"die\",\"differ\",\n  \"difference\",\"different\",\"difficult\",\"difficulty\",\"dig\",\"dinner\",\"direct\",\"direction\",\n  \"directly\",\"dirt\",\"dirty\",\"disappear\",\"discover\",\"discovery\",\"discuss\",\"discussion\",\n  \"disease\",\"dish\",\"distance\",\"distant\",\"divide\",\"division\",\"do\",\"doctor\",\n  \"does\",\"dog\",\"doing\",\"doll\",\"dollar\",\"done\",\"donkey\",\"door\",\n  \"dot\",\"double\",\"doubt\",\"down\",\"dozen\",\"draw\",\"drawn\",\"dream\",\n  \"dress\",\"drew\",\"dried\",\"drink\",\"drive\",\"driven\",\"driver\",\"driving\",\n  \"drop\",\"dropped\",\"drove\",\"dry\",\"duck\",\"due\",\"dug\",\"dull\",\n  \"during\",\"dust\",\"duty\",\"each\",\"eager\",\"ear\",\"earlier\",\"early\",\n  \"earn\",\"earth\",\"easier\",\"easily\",\"east\",\"easy\",\"eat\",\"eaten\",\n  \"edge\",\"education\",\"effect\",\"effort\",\"egg\",\"eight\",\"either\",\"electric\",\n  \"electricity\",\"element\",\"elephant\",\"eleven\",\"else\",\"empty\",\"end\",\"enemy\",\n  \"energy\",\"engine\",\"engineer\",\"enjoy\",\"enough\",\"enter\",\"entire\",\"entirely\",\n  \"environment\",\"equal\",\"equally\",\"equator\",\"equipment\",\"escape\",\"especially\",\"essential\",\n  \"establish\",\"even\",\"evening\",\"event\",\"eventually\",\"ever\",\"every\",\"everybody\",\n  \"everyone\",\"everything\",\"everywhere\",\"evidence\",\"exact\",\"exactly\",\"examine\",\"example\",\n  \"excellent\",\"except\",\"exchange\",\"excited\",\"excitement\",\"exciting\",\"exclaimed\",\"exercise\",\n  \"exist\",\"expect\",\"experience\",\"experiment\",\"explain\",\"explanation\",\"explore\",\"express\",\n  \"expression\",\"extra\",\"eye\",\"face\",\"facing\",\"fact\",\"factor\",\"factory\",\n  \"failed\",\"fair\",\"fairly\",\"fall\",\"fallen\",\"familiar\",\"family\",\"famous\",\n  \"far\",\"farm\",\"farmer\",\"farther\",\"fast\",\"fastened\",\"faster\",\"fat\",\n  \"father\",\"favorite\",\"fear\",\"feathers\",\"feature\",\"fed\",\"feed\",\"feel\",\n  \"feet\",\"fell\",\"fellow\",\"felt\",\"fence\",\"few\",\"fewer\",\"field\",\n  \"fierce\",\"fifteen\",\"fifth\",\"fifty\",\"fight\",\"fighting\",\"figure\",\"fill\",\n  \"film\",\"final\",\"finally\",\"find\",\"fine\",\"finest\",\"finger\",\"finish\",\n  \"fire\",\"fireplace\",\"firm\",\"first\",\"fish\",\"five\",\"fix\",\"flag\",\n  \"flame\",\"flat\",\"flew\",\"flies\",\"flight\",\"floating\",\"floor\",\"flow\",\n  \"flower\",\"fly\",\"fog\",\"folks\",\"follow\",\"food\",\"foot\",\"football\",\n  \"for\",\"force\",\"foreign\",\"forest\",\"forget\",\"forgot\",\"forgotten\",\"form\",\n  \"former\",\"fort\",\"forth\",\"forty\",\"forward\",\"fought\",\"found\",\"four\",\n  \"fourth\",\"fox\",\"frame\",\"free\",\"freedom\",\"frequently\",\"fresh\",\"friend\",\n  \"friendly\",\"frighten\",\"frog\",\"from\",\"front\",\"frozen\",\"fruit\",\"fuel\",\n  \"full\",\"fully\",\"fun\",\"function\",\"funny\",\"fur\",\"furniture\",\"further\",\n  \"future\",\"gain\",\"game\",\"garage\",\"garden\",\"gas\",\"gasoline\",\"gate\",\n  \"gather\",\"gave\",\"general\",\"generally\",\"gentle\",\"gently\",\"get\",\"getting\",\n  \"giant\",\"gift\",\"girl\",\"give\",\"given\",\"giving\",\"glad\",\"glass\",\n  \"globe\",\"go\",\"goes\",\"gold\",\"golden\",\"gone\",\"good\",\"goose\",\n  \"got\",\"government\",\"grabbed\",\"grade\",\"gradually\",\"grain\",\"grandfather\",\"grandmother\",\n  \"graph\",\"grass\",\"gravity\",\"gray\",\"great\",\"greater\",\"greatest\",\"greatly\",\n  \"green\",\"grew\",\"ground\",\"group\",\"grow\",\"grown\",\"growth\",\"guard\",\n  \"guess\",\"guide\",\"gulf\",\"gun\",\"habit\",\"had\",\"hair\",\"half\",\n  \"halfway\",\"hall\",\"hand\",\"handle\",\"handsome\",\"hang\",\"happen\",\"happened\",\n  \"happily\",\"happy\",\"harbor\",\"hard\",\"harder\",\"hardly\",\"has\",\"hat\",\n  \"have\",\"having\",\"hay\",\"he\",\"headed\",\"heading\",\"health\",\"heard\",\n  \"hearing\",\"heart\",\"heat\",\"heavy\",\"height\",\"held\",\"hello\",\"help\",\n  \"helpful\",\"her\",\"herd\",\"here\",\"herself\",\"hidden\",\"hide\",\"high\",\n  \"higher\",\"highest\",\"highway\",\"hill\",\"him\",\"himself\",\"his\",\"history\",\n  \"hit\",\"hold\",\"hole\",\"hollow\",\"home\",\"honor\",\"hope\",\"horn\",\n  \"horse\",\"hospital\",\"hot\",\"hour\",\"house\",\"how\",\"however\",\"huge\",\n  \"human\",\"hundred\",\"hung\",\"hungry\",\"hunt\",\"hunter\",\"hurried\",\"hurry\",\n  \"hurt\",\"husband\",\"ice\",\"idea\",\"identity\",\"if\",\"ill\",\"image\",\n  \"imagine\",\"immediately\",\"importance\",\"important\",\"impossible\",\"improve\",\"in\",\"inch\",\n  \"include\",\"including\",\"income\",\"increase\",\"indeed\",\"independent\",\"indicate\",\"individual\",\n  \"industrial\",\"industry\",\"influence\",\"information\",\"inside\",\"instance\",\"instant\",\"instead\",\n  \"instrument\",\"interest\",\"interior\",\"into\",\"introduced\",\"invented\",\"involved\",\"iron\",\n  \"is\",\"island\",\"it\",\"its\",\"itself\",\"jack\",\"jar\",\"jet\",\n  \"job\",\"join\",\"joined\",\"journey\",\"joy\",\"judge\",\"jump\",\"jungle\",\n  \"just\",\"keep\",\"kept\",\"key\",\"kids\",\"kill\",\"kind\",\"kitchen\",\n  \"knew\",\"knife\",\"know\",\"knowledge\",\"known\",\"label\",\"labor\",\"lack\",\n  \"lady\",\"laid\",\"lake\",\"lamp\",\"land\",\"language\",\"large\",\"larger\",\n  \"largest\",\"last\",\"late\",\"later\",\"laugh\",\"law\",\"lay\",\"layers\",\n  \"lead\",\"leader\",\"leaf\",\"learn\",\"least\",\"leather\",\"leave\",\"leaving\",\n  \"led\",\"left\",\"leg\",\"length\",\"lesson\",\"let\",\"letter\",\"level\",\n  \"library\",\"lie\",\"life\",\"lift\",\"light\",\"like\",\"likely\",\"limited\",\n  \"line\",\"lion\",\"lips\",\"liquid\",\"list\",\"listen\",\"little\",\"live\",\n  \"living\",\"load\",\"local\",\"locate\",\"location\",\"log\",\"lonely\",\"long\",\n  \"longer\",\"look\",\"loose\",\"lose\",\"loss\",\"lost\",\"lot\",\"loud\",\n  \"love\",\"lovely\",\"low\",\"lower\",\"luck\",\"lucky\",\"lunch\",\"lungs\",\n  \"lying\",\"machine\",\"machinery\",\"mad\",\"made\",\"magic\",\"magnet\",\"mail\",\n  \"main\",\"mainly\",\"major\",\"make\",\"making\",\"man\",\"managed\",\"manner\",\n  \"manufacturing\",\"many\",\"map\",\"mark\",\"market\",\"married\",\"mass\",\"massage\",\n  \"master\",\"material\",\"mathematics\",\"matter\",\"may\",\"maybe\",\"me\",\"meal\",\n  \"mean\",\"means\",\"meant\",\"measure\",\"meat\",\"medicine\",\"meet\",\"melted\",\n  \"member\",\"memory\",\"men\",\"mental\",\"merely\",\"met\",\"metal\",\"method\",\n  \"mice\",\"middle\",\"might\",\"mighty\",\"mile\",\"military\",\"milk\",\"mill\",\n  \"mind\",\"mine\",\"minerals\",\"minute\",\"mirror\",\"missing\",\"mission\",\"mistake\",\n  \"mix\",\"mixture\",\"model\",\"modern\",\"molecular\",\"moment\",\"money\",\"monkey\",\n  \"month\",\"mood\",\"moon\",\"more\",\"morning\",\"most\",\"mostly\",\"mother\",\n  \"motion\",\"motor\",\"mountain\",\"mouse\",\"mouth\",\"move\",\"movement\",\"movie\",\n  \"moving\",\"mud\",\"muscle\",\"music\",\"musical\",\"must\",\"my\",\"myself\",\n  \"mysterious\",\"nails\",\"name\",\"nation\",\"national\",\"native\",\"natural\",\"naturally\",\n  \"nature\",\"near\",\"nearby\",\"nearer\",\"nearest\",\"nearly\",\"necessary\",\"neck\",\n  \"needed\",\"needle\",\"needs\",\"negative\",\"neighbor\",\"neighborhood\",\"nervous\",\"nest\",\n  \"never\",\"new\",\"news\",\"newspaper\",\"next\",\"nice\",\"night\",\"nine\",\n  \"no\",\"nobody\",\"nodded\",\"noise\",\"none\",\"noon\",\"nor\",\"north\",\n  \"nose\",\"not\",\"note\",\"noted\",\"nothing\",\"notice\",\"noun\",\"now\",\n  \"number\",\"numeral\",\"nuts\",\"object\",\"observe\",\"obtain\",\"occasionally\",\"occur\",\n  \"ocean\",\"of\",\"off\",\"offer\",\"office\",\"officer\",\"official\",\"oil\",\n  \"old\",\"older\",\"oldest\",\"on\",\"once\",\"one\",\"only\",\"onto\",\n  \"open\",\"operation\",\"opinion\",\"opportunity\",\"opposite\",\"or\",\"orange\",\"orbit\",\n  \"order\",\"ordinary\",\"organization\",\"organized\",\"origin\",\"original\",\"other\",\"ought\",\n  \"our\",\"ourselves\",\"out\",\"outer\",\"outline\",\"outside\",\"over\",\"own\",\n  \"owner\",\"oxygen\",\"pack\",\"package\",\"page\",\"paid\",\"pain\",\"paint\",\n  \"pair\",\"palace\",\"pale\",\"pan\",\"paper\",\"paragraph\",\"parallel\",\"parent\",\n  \"park\",\"part\",\"particles\",\"particular\",\"particularly\",\"partly\",\"parts\",\"party\",\n  \"pass\",\"passage\",\"past\",\"path\",\"pattern\",\"pay\",\"peace\",\"pen\",\n  \"pencil\",\"people\",\"per\",\"percent\",\"perfect\",\"perfectly\",\"perhaps\",\"period\",\n  \"person\",\"personal\",\"pet\",\"phrase\",\"physical\",\"piano\",\"pick\",\"picture\",\n  \"pictured\",\"pie\",\"piece\",\"pig\",\"pile\",\"pilot\",\"pine\",\"pink\",\n  \"pipe\",\"pitch\",\"place\",\"plain\",\"plan\",\"plane\",\"planet\",\"planned\",\n  \"planning\",\"plant\",\"plastic\",\"plate\",\"plates\",\"play\",\"pleasant\",\"please\",\n  \"pleasure\",\"plenty\",\"plural\",\"plus\",\"pocket\",\"poem\",\"poet\",\"poetry\",\n  \"point\",\"pole\",\"police\",\"policeman\",\"political\",\"pond\",\"pony\",\"pool\",\n  \"poor\",\"popular\",\"population\",\"porch\",\"port\",\"position\",\"positive\",\"possible\",\n  \"possibly\",\"post\",\"pot\",\"potatoes\",\"pound\",\"pour\",\"powder\",\"power\",\n  \"powerful\",\"practical\",\"practice\",\"prepare\",\"present\",\"president\",\"press\",\"pressure\",\n  \"pretty\",\"prevent\",\"previous\",\"price\",\"pride\",\"primitive\",\"principal\",\"principle\",\n  \"printed\",\"private\",\"prize\",\"probably\",\"problem\",\"process\",\"produce\",\"product\",\n  \"production\",\"program\",\"progress\",\"promised\",\"proper\",\"properly\",\"property\",\"protection\",\n  \"proud\",\"prove\",\"provide\",\"public\",\"pull\",\"pupil\",\"pure\",\"purple\",\n  \"purpose\",\"push\",\"put\",\"putting\",\"quarter\",\"queen\",\"question\",\"quick\",\n  \"quickly\",\"quiet\",\"quietly\",\"quite\",\"rabbit\",\"race\",\"radio\",\"railroad\",\n  \"rain\",\"raise\",\"ran\",\"ranch\",\"range\",\"rapidly\",\"rate\",\"rather\",\n  \"raw\",\"rays\",\"reach\",\"read\",\"reader\",\"ready\",\"real\",\"realize\",\n  \"rear\",\"reason\",\"recall\",\"receive\",\"recent\",\"recently\",\"recognize\",\"record\",\n  \"red\",\"refer\",\"refused\",\"region\",\"regular\",\"related\",\"relationship\",\"religious\",\n  \"remain\",\"remarkable\",\"remember\",\"remove\",\"repeat\",\"replace\",\"replied\",\"report\",\n  \"represent\",\"require\",\"research\",\"respect\",\"rest\",\"result\",\"return\",\"review\",\n  \"rhyme\",\"rhythm\",\"rice\",\"rich\",\"ride\",\"riding\",\"right\",\"ring\",\n  \"rise\",\"rising\",\"river\",\"road\",\"roar\",\"rock\",\"rocket\",\"rocky\",\n  \"rod\",\"roll\",\"roof\",\"room\",\"root\",\"rope\",\"rose\",\"rough\",\n  \"round\",\"route\",\"row\",\"rubbed\",\"rubber\",\"rule\",\"ruler\",\"run\",\n  \"running\",\"rush\",\"sad\",\"saddle\",\"safe\",\"safety\",\"said\",\"sail\",\n  \"sale\",\"salmon\",\"salt\",\"same\",\"sand\",\"sang\",\"sat\",\"satellites\",\n  \"satisfied\",\"save\",\"saved\",\"saw\",\"say\",\"scale\",\"scared\",\"scene\",\n  \"school\",\"science\",\"scientific\",\"scientist\",\"score\",\"screen\",\"sea\",\"search\",\n  \"season\",\"seat\",\"second\",\"secret\",\"section\",\"see\",\"seed\",\"seeing\",\n  \"seems\",\"seen\",\"seldom\",\"select\",\"selection\",\"sell\",\"send\",\"sense\",\n  \"sent\",\"sentence\",\"separate\",\"series\",\"serious\",\"serve\",\"service\",\"sets\",\n  \"setting\",\"settle\",\"settlers\",\"seven\",\"several\",\"shade\",\"shadow\",\"shake\",\n  \"shaking\",\"shall\",\"shallow\",\"shape\",\"share\",\"sharp\",\"she\",\"sheep\",\n  \"sheet\",\"shelf\",\"shells\",\"shelter\",\"shine\",\"shinning\",\"ship\",\"shirt\",\n  \"shoe\",\"shoot\",\"shop\",\"shore\",\"short\",\"shorter\",\"shot\",\"should\",\n  \"shoulder\",\"shout\",\"show\",\"shown\",\"shut\",\"sick\",\"sides\",\"sight\",\n  \"sign\",\"signal\",\"silence\",\"silent\",\"silk\",\"silly\",\"silver\",\"similar\",\n  \"simple\",\"simplest\",\"simply\",\"since\",\"sing\",\"single\",\"sink\",\"sister\",\n  \"sit\",\"sitting\",\"situation\",\"six\",\"size\",\"skill\",\"skin\",\"sky\",\n  \"slabs\",\"slave\",\"sleep\",\"slept\",\"slide\",\"slight\",\"slightly\",\"slip\",\n  \"slipped\",\"slope\",\"slow\",\"slowly\",\"small\",\"smaller\",\"smallest\",\"smell\",\n  \"smile\",\"smoke\",\"smooth\",\"snake\",\"snow\",\"so\",\"soap\",\"social\",\n  \"society\",\"soft\",\"softly\",\"soil\",\"solar\",\"sold\",\"soldier\",\"solid\",\n  \"solution\",\"solve\",\"some\",\"somebody\",\"somehow\",\"someone\",\"something\",\"sometime\",\n  \"somewhere\",\"son\",\"song\",\"soon\",\"sort\",\"sound\",\"source\",\"south\",\n  \"southern\",\"space\",\"speak\",\"special\",\"species\",\"specific\",\"speech\",\"speed\",\n  \"spell\",\"spend\",\"spent\",\"spider\",\"spin\",\"spirit\",\"spite\",\"split\",\n  \"spoken\",\"sport\",\"spread\",\"spring\",\"square\",\"stage\",\"stairs\",\"stand\",\n  \"standard\",\"star\",\"stared\",\"start\",\"state\",\"statement\",\"station\",\"stay\",\n  \"steady\",\"steam\",\"steel\",\"steep\",\"stems\",\"step\",\"stepped\",\"stick\",\n  \"stiff\",\"still\",\"stock\",\"stomach\",\"stone\",\"stood\",\"stop\",\"stopped\",\n  \"store\",\"storm\",\"story\",\"stove\",\"straight\",\"strange\",\"stranger\",\"straw\",\n  \"stream\",\"street\",\"strength\",\"stretch\",\"strike\",\"string\",\"strip\",\"strong\",\n  \"stronger\",\"struck\",\"structure\",\"struggle\",\"stuck\",\"student\",\"studied\",\"studying\",\n  \"subject\",\"substance\",\"success\",\"successful\",\"such\",\"sudden\",\"suddenly\",\"sugar\",\n  \"suggest\",\"suit\",\"sum\",\"summer\",\"sun\",\"sunlight\",\"supper\",\"supply\",\n  \"support\",\"suppose\",\"sure\",\"surface\",\"surprise\",\"surrounded\",\"swam\",\"sweet\",\n  \"swept\",\"swim\",\"swimming\",\"swing\",\"swung\",\"syllable\",\"symbol\",\"system\",\n  \"table\",\"tail\",\"take\",\"taken\",\"tales\",\"talk\",\"tall\",\"tank\",\n  \"tape\",\"task\",\"taste\",\"taught\",\"tax\",\"tea\",\"teach\",\"teacher\",\n  \"team\",\"tears\",\"teeth\",\"telephone\",\"television\",\"tell\",\"temperature\",\"ten\",\n  \"tent\",\"term\",\"terrible\",\"test\",\"than\",\"thank\",\"that\",\"thee\",\n  \"them\",\"themselves\",\"then\",\"theory\",\"there\",\"therefore\",\"these\",\"they\",\n  \"thick\",\"thin\",\"thing\",\"think\",\"third\",\"thirty\",\"this\",\"those\",\n  \"thou\",\"though\",\"thought\",\"thousand\",\"thread\",\"three\",\"threw\",\"throat\",\n  \"through\",\"throughout\",\"throw\",\"thrown\",\"thumb\",\"thus\",\"thy\",\"tide\",\n  \"tie\",\"tight\",\"tightly\",\"till\",\"time\",\"tin\",\"tiny\",\"tip\",\n  \"tired\",\"title\",\"to\",\"tobacco\",\"today\",\"together\",\"told\",\"tomorrow\",\n  \"tone\",\"tongue\",\"tonight\",\"too\",\"took\",\"tool\",\"top\",\"topic\",\n  \"torn\",\"total\",\"touch\",\"toward\",\"tower\",\"town\",\"toy\",\"trace\",\n  \"track\",\"trade\",\"traffic\",\"trail\",\"train\",\"transportation\",\"trap\",\"travel\",\n  \"treated\",\"tree\",\"triangle\",\"tribe\",\"trick\",\"tried\",\"trip\",\"troops\",\n  \"tropical\",\"trouble\",\"truck\",\"trunk\",\"truth\",\"try\",\"tube\",\"tune\",\n  \"turn\",\"twelve\",\"twenty\",\"twice\",\"two\",\"type\",\"typical\",\"uncle\",\n  \"under\",\"underline\",\"understanding\",\"unhappy\",\"union\",\"unit\",\"universe\",\"unknown\",\n  \"unless\",\"until\",\"unusual\",\"up\",\"upon\",\"upper\",\"upward\",\"us\",\n  \"use\",\"useful\",\"using\",\"usual\",\"usually\",\"valley\",\"valuable\",\"value\",\n  \"vapor\",\"variety\",\"various\",\"vast\",\"vegetable\",\"verb\",\"vertical\",\"very\",\n  \"vessels\",\"victory\",\"view\",\"village\",\"visit\",\"visitor\",\"voice\",\"volume\",\n  \"vote\",\"vowel\",\"voyage\",\"wagon\",\"wait\",\"walk\",\"wall\",\"want\",\n  \"war\",\"warm\",\"warn\",\"was\",\"wash\",\"waste\",\"watch\",\"water\",\n  \"wave\",\"way\",\"we\",\"weak\",\"wealth\",\"wear\",\"weather\",\"week\",\n  \"weigh\",\"weight\",\"welcome\",\"well\",\"went\",\"were\",\"west\",\"western\",\n  \"wet\",\"whale\",\"what\",\"whatever\",\"wheat\",\"wheel\",\"when\",\"whenever\",\n  \"where\",\"wherever\",\"whether\",\"which\",\"while\",\"whispered\",\"whistle\",\"white\",\n  \"who\",\"whole\",\"whom\",\"whose\",\"why\",\"wide\",\"widely\",\"wife\",\n  \"wild\",\"will\",\"willing\",\"win\",\"wind\",\"window\",\"wing\",\"winter\",\n  \"wire\",\"wise\",\"wish\",\"with\",\"within\",\"without\",\"wolf\",\"women\",\n  \"won\",\"wonder\",\"wonderful\",\"wood\",\"wooden\",\"wool\",\"word\",\"wore\",\n  \"work\",\"worker\",\"world\",\"worried\",\"worry\",\"worse\",\"worth\",\"would\",\n  \"wrapped\",\"write\",\"writer\",\"writing\",\"written\",\"wrong\",\"wrote\",\"yard\",\n  \"year\",\"yellow\",\"yes\",\"yesterday\",\"yet\",\"you\",\"young\",\"younger\",\n  \"your\",\"yourself\",\"youth\",\"zero\",\"zebra\",\"zipper\",\"zoo\",\"zulu\"\n];\n\nfunction words(options) {\n  // initalize random number generator for words if options.seed is provided\n  const random = options?.seed ? new seedrandom(options.seed) : null;\n\n  function word() {\n    if (options && options.maxLength > 1) {\n      return generateWordWithMaxLength();\n    } else {\n      return generateRandomWord();\n    }\n  }\n\n  function generateWordWithMaxLength() {\n    var rightSize = false;\n    var wordUsed;\n    while (!rightSize) {  \n      wordUsed = generateRandomWord();\n      if(wordUsed.length <= options.maxLength) {\n        rightSize = true;\n      }\n\n    }\n    return wordUsed;\n  }\n\n  function generateRandomWord() {\n    return wordList[randInt(wordList.length)];\n  }\n\n  // random int as seeded by options.seed if applicable, or Math.random() otherwise\n  function randInt(lessThan) {\n    const r = random ? random() : Math.random();\n    return Math.floor(r * lessThan);\n  }\n\n  // No arguments = generate one word\n  if (typeof(options) === 'undefined') {\n    return word();\n  }\n\n  // Just a number = return that many words\n  if (typeof(options) === 'number') {\n    options = { exactly: options };\n  }\n\n  // options supported: exactly, min, max, join\n  if (options.exactly) {\n    options.min = options.exactly;\n    options.max = options.exactly;\n  }\n  \n  // not a number = one word par string\n  if (typeof(options.wordsPerString) !== 'number') {\n    options.wordsPerString = 1;\n  }\n\n  //not a function = returns the raw word\n  if (typeof(options.formatter) !== 'function') {\n    options.formatter = (word) => word;\n  }\n\n  //not a string = separator is a space\n  if (typeof(options.separator) !== 'string') {\n    options.separator = ' ';\n  }\n\n  var total = options.min + randInt(options.max + 1 - options.min);\n  var results = [];\n  var token = '';\n  var relativeIndex = 0;\n\n  for (var i = 0; (i < total * options.wordsPerString); i++) {\n    if (relativeIndex === options.wordsPerString - 1) {\n      token += options.formatter(word(), relativeIndex);\n    }\n    else {\n      token += options.formatter(word(), relativeIndex) + options.separator;\n    }\n    relativeIndex++;\n    if ((i + 1) % options.wordsPerString === 0) {\n      results.push(token);\n      token = ''; \n      relativeIndex = 0;\n    }\n   \n  }\n  if (typeof options.join === 'string') {\n    results = results.join(options.join);\n  }\n\n  return results;\n}\n\nvar randomWords$1 = words;\n// Export the word list as it is often useful\nwords.wordList = wordList;\n\nvar rw = /*@__PURE__*/getDefaultExportFromCjs(randomWords$1);\n\n/**\n * Uses the `seedrandom` package to replace Math.random() with a seedable PRNG.\n *\n * @param seed An optional seed. If none is given, a random seed will be generated.\n * @returns The seed value.\n */\nfunction setSeed(seed = Math.random().toString()) {\n    Math.random = seedrandom$3(seed);\n    return seed;\n}\nfunction repeat(array, repetitions, unpack = false) {\n    const arr_isArray = Array.isArray(array);\n    const rep_isArray = Array.isArray(repetitions);\n    // if array is not an array, then we just repeat the item\n    if (!arr_isArray) {\n        if (!rep_isArray) {\n            array = [array];\n            repetitions = [repetitions];\n        }\n        else {\n            repetitions = [repetitions[0]];\n            console.log(\"Unclear parameters given to randomization.repeat. Multiple set sizes specified, but only one item exists to sample. Proceeding using the first set size.\");\n        }\n    }\n    else {\n        // if repetitions is not an array, but array is, then we\n        // repeat repetitions for each entry in array\n        if (!rep_isArray) {\n            let reps = [];\n            for (let i = 0; i < array.length; i++) {\n                reps.push(repetitions);\n            }\n            repetitions = reps;\n        }\n        else {\n            if (array.length != repetitions.length) {\n                console.warn(\"Unclear parameters given to randomization.repeat. Items and repetitions are unequal lengths. Behavior may not be as expected.\");\n                // throw warning if repetitions is too short, use first rep ONLY.\n                if (repetitions.length < array.length) {\n                    let reps = [];\n                    for (let i = 0; i < array.length; i++) {\n                        reps.push(repetitions);\n                    }\n                    repetitions = reps;\n                }\n                else {\n                    // throw warning if too long, and then use the first N\n                    repetitions = repetitions.slice(0, array.length);\n                }\n            }\n        }\n    }\n    // should be clear at this point to assume that array and repetitions are arrays with == length\n    let allsamples = [];\n    for (let i = 0; i < array.length; i++) {\n        for (let j = 0; j < repetitions[i]; j++) {\n            if (array[i] == null || typeof array[i] != \"object\") {\n                allsamples.push(array[i]);\n            }\n            else {\n                allsamples.push(Object.assign({}, array[i]));\n            }\n        }\n    }\n    let out = shuffle(allsamples);\n    if (unpack) {\n        out = unpackArray(out);\n    }\n    return out;\n}\nfunction shuffle(array) {\n    if (!Array.isArray(array)) {\n        console.error(\"Argument to shuffle() must be an array.\");\n    }\n    const copy_array = array.slice(0);\n    let m = copy_array.length, t, i;\n    // While there remain elements to shuffle…\n    while (m) {\n        // Pick a remaining element…\n        i = Math.floor(Math.random() * m--);\n        // And swap it with the current element.\n        t = copy_array[m];\n        copy_array[m] = copy_array[i];\n        copy_array[i] = t;\n    }\n    return copy_array;\n}\nfunction shuffleNoRepeats(arr, equalityTest) {\n    if (!Array.isArray(arr)) {\n        console.error(\"First argument to shuffleNoRepeats() must be an array.\");\n    }\n    if (typeof equalityTest !== \"undefined\" && typeof equalityTest !== \"function\") {\n        console.error(\"Second argument to shuffleNoRepeats() must be a function.\");\n    }\n    // define a default equalityTest\n    if (typeof equalityTest == \"undefined\") {\n        equalityTest = function (a, b) {\n            if (a === b) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        };\n    }\n    const random_shuffle = shuffle(arr);\n    for (let i = 0; i < random_shuffle.length - 1; i++) {\n        if (equalityTest(random_shuffle[i], random_shuffle[i + 1])) {\n            // neighbors are equal, pick a new random neighbor to swap (not the first or last element, to avoid edge cases)\n            let random_pick = Math.floor(Math.random() * (random_shuffle.length - 2)) + 1;\n            // test to make sure the new neighbor isn't equal to the old one\n            while (equalityTest(random_shuffle[i + 1], random_shuffle[random_pick]) ||\n                equalityTest(random_shuffle[i + 1], random_shuffle[random_pick + 1]) ||\n                equalityTest(random_shuffle[i + 1], random_shuffle[random_pick - 1]) ||\n                equalityTest(random_shuffle[i], random_shuffle[random_pick])) {\n                random_pick = Math.floor(Math.random() * (random_shuffle.length - 2)) + 1;\n            }\n            const new_neighbor = random_shuffle[random_pick];\n            random_shuffle[random_pick] = random_shuffle[i + 1];\n            random_shuffle[i + 1] = new_neighbor;\n        }\n    }\n    return random_shuffle;\n}\nfunction shuffleAlternateGroups(arr_groups, random_group_order = false) {\n    const n_groups = arr_groups.length;\n    if (n_groups == 1) {\n        console.warn(\"shuffleAlternateGroups() was called with only one group. Defaulting to simple shuffle.\");\n        return shuffle(arr_groups[0]);\n    }\n    let group_order = [];\n    for (let i = 0; i < n_groups; i++) {\n        group_order.push(i);\n    }\n    if (random_group_order) {\n        group_order = shuffle(group_order);\n    }\n    const randomized_groups = [];\n    let min_length = null;\n    for (let i = 0; i < n_groups; i++) {\n        min_length =\n            min_length === null ? arr_groups[i].length : Math.min(min_length, arr_groups[i].length);\n        randomized_groups.push(shuffle(arr_groups[i]));\n    }\n    const out = [];\n    for (let i = 0; i < min_length; i++) {\n        for (let j = 0; j < group_order.length; j++) {\n            out.push(randomized_groups[group_order[j]][i]);\n        }\n    }\n    return out;\n}\nfunction sampleWithoutReplacement(arr, size) {\n    if (!Array.isArray(arr)) {\n        console.error(\"First argument to sampleWithoutReplacement() must be an array\");\n    }\n    if (size > arr.length) {\n        console.error(\"Cannot take a sample larger than the size of the set of items to sample.\");\n    }\n    return shuffle(arr).slice(0, size);\n}\nfunction sampleWithReplacement(arr, size, weights) {\n    if (!Array.isArray(arr)) {\n        console.error(\"First argument to sampleWithReplacement() must be an array\");\n    }\n    const normalized_weights = [];\n    if (typeof weights !== \"undefined\") {\n        if (weights.length !== arr.length) {\n            console.error(\"The length of the weights array must equal the length of the array \" +\n                \"to be sampled from.\");\n        }\n        let weight_sum = 0;\n        for (const weight of weights) {\n            weight_sum += weight;\n        }\n        for (const weight of weights) {\n            normalized_weights.push(weight / weight_sum);\n        }\n    }\n    else {\n        for (let i = 0; i < arr.length; i++) {\n            normalized_weights.push(1 / arr.length);\n        }\n    }\n    const cumulative_weights = [normalized_weights[0]];\n    for (let i = 1; i < normalized_weights.length; i++) {\n        cumulative_weights.push(normalized_weights[i] + cumulative_weights[i - 1]);\n    }\n    const samp = [];\n    for (let i = 0; i < size; i++) {\n        const rnd = Math.random();\n        let index = 0;\n        while (rnd > cumulative_weights[index]) {\n            index++;\n        }\n        samp.push(arr[index]);\n    }\n    return samp;\n}\nfunction factorial(factors, repetitions = 1, unpack = false) {\n    let design = [{}];\n    for (const [factorName, factor] of Object.entries(factors)) {\n        const new_design = [];\n        for (const level of factor) {\n            for (const cell of design) {\n                new_design.push(Object.assign(Object.assign({}, cell), { [factorName]: level }));\n            }\n        }\n        design = new_design;\n    }\n    return repeat(design, repetitions, unpack);\n}\nfunction randomID(length = 32) {\n    let result = \"\";\n    const chars = \"0123456789abcdefghjklmnopqrstuvwxyz\";\n    for (let i = 0; i < length; i++) {\n        result += chars[Math.floor(Math.random() * chars.length)];\n    }\n    return result;\n}\n/**\n * Generate a random integer from `lower` to `upper`, inclusive of both end points.\n * @param lower The lowest value it is possible to generate\n * @param upper The highest value it is possible to generate\n * @returns A random integer\n */\nfunction randomInt(lower, upper) {\n    if (upper < lower) {\n        throw new Error(\"Upper boundary must be less than or equal to lower boundary\");\n    }\n    return lower + Math.floor(Math.random() * (upper - lower + 1));\n}\n/**\n * Generates a random sample from a Bernoulli distribution.\n * @param p The probability of sampling 1.\n * @returns 0, with probability 1-p, or 1, with probability p.\n */\nfunction sampleBernoulli(p) {\n    return Math.random() <= p ? 1 : 0;\n}\nfunction sampleNormal(mean, standard_deviation) {\n    return randn_bm() * standard_deviation + mean;\n}\nfunction sampleExponential(rate) {\n    return -Math.log(Math.random()) / rate;\n}\nfunction sampleExGaussian(mean, standard_deviation, rate, positive = false) {\n    let s = sampleNormal(mean, standard_deviation) + sampleExponential(rate);\n    if (positive) {\n        while (s <= 0) {\n            s = sampleNormal(mean, standard_deviation) + sampleExponential(rate);\n        }\n    }\n    return s;\n}\n/**\n * Generate one or more random words.\n *\n * This is a wrapper function for the {@link https://www.npmjs.com/package/random-words `random-words` npm package}.\n *\n * @param opts An object with optional properties `min`, `max`, `exactly`,\n * `join`, `maxLength`, `wordsPerString`, `separator`, and `formatter`.\n *\n * @returns An array of words or a single string, depending on parameter choices.\n */\nfunction randomWords(opts) {\n    return rw(opts);\n}\n// Box-Muller transformation for a random sample from normal distribution with mean = 0, std = 1\n// https://stackoverflow.com/a/36481059/3726673\nfunction randn_bm() {\n    var u = 0, v = 0;\n    while (u === 0)\n        u = Math.random(); //Converting [0,1) to (0,1)\n    while (v === 0)\n        v = Math.random();\n    return Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v);\n}\nfunction unpackArray(array) {\n    const out = {};\n    for (const x of array) {\n        for (const key of Object.keys(x)) {\n            if (typeof out[key] === \"undefined\") {\n                out[key] = [];\n            }\n            out[key].push(x[key]);\n        }\n    }\n    return out;\n}\n\nvar randomization = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    factorial: factorial,\n    randomID: randomID,\n    randomInt: randomInt,\n    randomWords: randomWords,\n    repeat: repeat,\n    sampleBernoulli: sampleBernoulli,\n    sampleExGaussian: sampleExGaussian,\n    sampleExponential: sampleExponential,\n    sampleNormal: sampleNormal,\n    sampleWithReplacement: sampleWithReplacement,\n    sampleWithoutReplacement: sampleWithoutReplacement,\n    setSeed: setSeed,\n    shuffle: shuffle,\n    shuffleAlternateGroups: shuffleAlternateGroups,\n    shuffleNoRepeats: shuffleNoRepeats\n});\n\n/**\n * Gets information about the Mechanical Turk Environment, HIT, Assignment, and Worker\n * by parsing the URL variables that Mechanical Turk generates.\n * @returns An object containing information about the Mechanical Turk Environment, HIT, Assignment, and Worker.\n */\nfunction turkInfo() {\n    const turk = {\n        previewMode: false,\n        outsideTurk: false,\n        hitId: \"INVALID_URL_PARAMETER\",\n        assignmentId: \"INVALID_URL_PARAMETER\",\n        workerId: \"INVALID_URL_PARAMETER\",\n        turkSubmitTo: \"INVALID_URL_PARAMETER\",\n    };\n    const param = function (url, name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        const regexS = \"[\\\\?&]\" + name + \"=([^&#]*)\";\n        const regex = new RegExp(regexS);\n        const results = regex.exec(url);\n        return results == null ? \"\" : results[1];\n    };\n    const src = param(window.location.href, \"assignmentId\")\n        ? window.location.href\n        : document.referrer;\n    const keys = [\"assignmentId\", \"hitId\", \"workerId\", \"turkSubmitTo\"];\n    keys.map(function (key) {\n        turk[key] = unescape(param(src, key));\n    });\n    turk.previewMode = turk.assignmentId == \"ASSIGNMENT_ID_NOT_AVAILABLE\";\n    turk.outsideTurk =\n        !turk.previewMode && turk.hitId === \"\" && turk.assignmentId == \"\" && turk.workerId == \"\";\n    return turk;\n}\n/**\n * Send data to Mechnical Turk for storage.\n * @param data An object containing `key:value` pairs to send to Mechanical Turk. Values\n * cannot contain nested objects, arrays, or functions.\n * @returns Nothing\n */\nfunction submitToTurk(data) {\n    const turk = turkInfo();\n    const assignmentId = turk.assignmentId;\n    const turkSubmitTo = turk.turkSubmitTo;\n    if (!assignmentId || !turkSubmitTo)\n        return;\n    const form = document.createElement(\"form\");\n    form.method = \"POST\";\n    form.action = turkSubmitTo + \"/mturk/externalSubmit?assignmentId=\" + assignmentId;\n    for (const key in data) {\n        if (data.hasOwnProperty(key)) {\n            const hiddenField = document.createElement(\"input\");\n            hiddenField.type = \"hidden\";\n            hiddenField.name = key;\n            hiddenField.id = key;\n            hiddenField.value = data[key];\n            form.appendChild(hiddenField);\n        }\n    }\n    document.body.appendChild(form);\n    form.submit();\n}\n\nvar turk = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    submitToTurk: submitToTurk,\n    turkInfo: turkInfo\n});\n\nclass TimelineNode {\n    // constructor\n    constructor(jsPsych, parameters, parent, relativeID) {\n        this.jsPsych = jsPsych;\n        // track progress through the node\n        this.progress = {\n            current_location: -1,\n            current_variable_set: 0,\n            current_repetition: 0,\n            current_iteration: 0,\n            done: false,\n        };\n        // store a link to the parent of this node\n        this.parent_node = parent;\n        // create the ID for this node\n        this.relative_id = typeof parent === \"undefined\" ? 0 : relativeID;\n        // check if there is a timeline parameter\n        // if there is, then this node has its own timeline\n        if (typeof parameters.timeline !== \"undefined\") {\n            // create timeline properties\n            this.timeline_parameters = {\n                timeline: [],\n                loop_function: parameters.loop_function,\n                conditional_function: parameters.conditional_function,\n                sample: parameters.sample,\n                randomize_order: typeof parameters.randomize_order == \"undefined\" ? false : parameters.randomize_order,\n                repetitions: typeof parameters.repetitions == \"undefined\" ? 1 : parameters.repetitions,\n                timeline_variables: typeof parameters.timeline_variables == \"undefined\"\n                    ? [{}]\n                    : parameters.timeline_variables,\n                on_timeline_finish: parameters.on_timeline_finish,\n                on_timeline_start: parameters.on_timeline_start,\n            };\n            this.setTimelineVariablesOrder();\n            // extract all of the node level data and parameters\n            // but remove all of the timeline-level specific information\n            // since this will be used to copy things down hierarchically\n            var node_data = Object.assign({}, parameters);\n            delete node_data.timeline;\n            delete node_data.conditional_function;\n            delete node_data.loop_function;\n            delete node_data.randomize_order;\n            delete node_data.repetitions;\n            delete node_data.timeline_variables;\n            delete node_data.sample;\n            delete node_data.on_timeline_start;\n            delete node_data.on_timeline_finish;\n            this.node_trial_data = node_data; // store for later...\n            // create a TimelineNode for each element in the timeline\n            for (var i = 0; i < parameters.timeline.length; i++) {\n                // merge parameters\n                var merged_parameters = Object.assign({}, node_data, parameters.timeline[i]);\n                // merge any data from the parent node into child nodes\n                if (typeof node_data.data == \"object\" && typeof parameters.timeline[i].data == \"object\") {\n                    var merged_data = Object.assign({}, node_data.data, parameters.timeline[i].data);\n                    merged_parameters.data = merged_data;\n                }\n                this.timeline_parameters.timeline.push(new TimelineNode(this.jsPsych, merged_parameters, this, i));\n            }\n        }\n        // if there is no timeline parameter, then this node is a trial node\n        else {\n            // check to see if a valid trial type is defined\n            if (typeof parameters.type === \"undefined\") {\n                console.error('Trial level node is missing the \"type\" parameter. The parameters for the node are: ' +\n                    JSON.stringify(parameters));\n            }\n            // create a deep copy of the parameters for the trial\n            this.trial_parameters = Object.assign({}, parameters);\n        }\n    }\n    // recursively get the next trial to run.\n    // if this node is a leaf (trial), then return the trial.\n    // otherwise, recursively find the next trial in the child timeline.\n    trial() {\n        if (typeof this.timeline_parameters == \"undefined\") {\n            // returns a clone of the trial_parameters to\n            // protect functions.\n            return deepCopy(this.trial_parameters);\n        }\n        else {\n            if (this.progress.current_location >= this.timeline_parameters.timeline.length) {\n                return null;\n            }\n            else {\n                return this.timeline_parameters.timeline[this.progress.current_location].trial();\n            }\n        }\n    }\n    markCurrentTrialComplete() {\n        if (typeof this.timeline_parameters === \"undefined\") {\n            this.progress.done = true;\n        }\n        else {\n            this.timeline_parameters.timeline[this.progress.current_location].markCurrentTrialComplete();\n        }\n    }\n    nextRepetiton() {\n        this.setTimelineVariablesOrder();\n        this.progress.current_location = -1;\n        this.progress.current_variable_set = 0;\n        this.progress.current_repetition++;\n        for (var i = 0; i < this.timeline_parameters.timeline.length; i++) {\n            this.timeline_parameters.timeline[i].reset();\n        }\n    }\n    // set the order for going through the timeline variables array\n    setTimelineVariablesOrder() {\n        const timeline_parameters = this.timeline_parameters;\n        // check to make sure this node has variables\n        if (typeof timeline_parameters === \"undefined\" ||\n            typeof timeline_parameters.timeline_variables === \"undefined\") {\n            return;\n        }\n        var order = [];\n        for (var i = 0; i < timeline_parameters.timeline_variables.length; i++) {\n            order.push(i);\n        }\n        if (typeof timeline_parameters.sample !== \"undefined\") {\n            if (timeline_parameters.sample.type == \"custom\") {\n                order = timeline_parameters.sample.fn(order);\n            }\n            else if (timeline_parameters.sample.type == \"with-replacement\") {\n                order = sampleWithReplacement(order, timeline_parameters.sample.size, timeline_parameters.sample.weights);\n            }\n            else if (timeline_parameters.sample.type == \"without-replacement\") {\n                order = sampleWithoutReplacement(order, timeline_parameters.sample.size);\n            }\n            else if (timeline_parameters.sample.type == \"fixed-repetitions\") {\n                order = repeat(order, timeline_parameters.sample.size, false);\n            }\n            else if (timeline_parameters.sample.type == \"alternate-groups\") {\n                order = shuffleAlternateGroups(timeline_parameters.sample.groups, timeline_parameters.sample.randomize_group_order);\n            }\n            else {\n                console.error('Invalid type in timeline sample parameters. Valid options for type are \"custom\", \"with-replacement\", \"without-replacement\", \"fixed-repetitions\", and \"alternate-groups\"');\n            }\n        }\n        if (timeline_parameters.randomize_order) {\n            order = shuffle(order);\n        }\n        this.progress.order = order;\n    }\n    // next variable set\n    nextSet() {\n        this.progress.current_location = -1;\n        this.progress.current_variable_set++;\n        for (var i = 0; i < this.timeline_parameters.timeline.length; i++) {\n            this.timeline_parameters.timeline[i].reset();\n        }\n    }\n    // update the current trial node to be completed\n    // returns true if the node is complete after advance (all subnodes are also complete)\n    // returns false otherwise\n    advance() {\n        const progress = this.progress;\n        const timeline_parameters = this.timeline_parameters;\n        const internal = this.jsPsych.internal;\n        // first check to see if done\n        if (progress.done) {\n            return true;\n        }\n        // if node has not started yet (progress.current_location == -1),\n        // then try to start the node.\n        if (progress.current_location == -1) {\n            // check for on_timeline_start and conditonal function on nodes with timelines\n            if (typeof timeline_parameters !== \"undefined\") {\n                // only run the conditional function if this is the first repetition of the timeline when\n                // repetitions > 1, and only when on the first variable set\n                if (typeof timeline_parameters.conditional_function !== \"undefined\" &&\n                    progress.current_repetition == 0 &&\n                    progress.current_variable_set == 0) {\n                    internal.call_immediate = true;\n                    var conditional_result = timeline_parameters.conditional_function();\n                    internal.call_immediate = false;\n                    // if the conditional_function() returns false, then the timeline\n                    // doesn't run and is marked as complete.\n                    if (conditional_result == false) {\n                        progress.done = true;\n                        return true;\n                    }\n                }\n                // if we reach this point then the node has its own timeline and will start\n                // so we need to check if there is an on_timeline_start function if we are on the first variable set\n                if (typeof timeline_parameters.on_timeline_start !== \"undefined\" &&\n                    progress.current_variable_set == 0) {\n                    timeline_parameters.on_timeline_start();\n                }\n            }\n            // if we reach this point, then either the node doesn't have a timeline of the\n            // conditional function returned true and it can start\n            progress.current_location = 0;\n            // call advance again on this node now that it is pointing to a new location\n            return this.advance();\n        }\n        // if this node has a timeline, propogate down to the current trial.\n        if (typeof timeline_parameters !== \"undefined\") {\n            var have_node_to_run = false;\n            // keep incrementing the location in the timeline until one of the nodes reached is incomplete\n            while (progress.current_location < timeline_parameters.timeline.length &&\n                have_node_to_run == false) {\n                // check to see if the node currently pointed at is done\n                var target_complete = timeline_parameters.timeline[progress.current_location].advance();\n                if (!target_complete) {\n                    have_node_to_run = true;\n                    return false;\n                }\n                else {\n                    progress.current_location++;\n                }\n            }\n            // if we've reached the end of the timeline (which, if the code is here, we have)\n            // there are a few steps to see what to do next...\n            // first, check the timeline_variables to see if we need to loop through again\n            // with a new set of variables\n            if (progress.current_variable_set < progress.order.length - 1) {\n                // reset the progress of the node to be with the new set\n                this.nextSet();\n                // then try to advance this node again.\n                return this.advance();\n            }\n            // if we're all done with the timeline_variables, then check to see if there are more repetitions\n            else if (progress.current_repetition < timeline_parameters.repetitions - 1) {\n                this.nextRepetiton();\n                // check to see if there is an on_timeline_finish function\n                if (typeof timeline_parameters.on_timeline_finish !== \"undefined\") {\n                    timeline_parameters.on_timeline_finish();\n                }\n                return this.advance();\n            }\n            // if we're all done with the repetitions...\n            else {\n                // check to see if there is an on_timeline_finish function\n                if (typeof timeline_parameters.on_timeline_finish !== \"undefined\") {\n                    timeline_parameters.on_timeline_finish();\n                }\n                // if we're all done with the repetitions, check if there is a loop function.\n                if (typeof timeline_parameters.loop_function !== \"undefined\") {\n                    internal.call_immediate = true;\n                    if (timeline_parameters.loop_function(this.generatedData())) {\n                        this.reset();\n                        internal.call_immediate = false;\n                        return this.parent_node.advance();\n                    }\n                    else {\n                        progress.done = true;\n                        internal.call_immediate = false;\n                        return true;\n                    }\n                }\n            }\n            // no more loops on this timeline, we're done!\n            progress.done = true;\n            return true;\n        }\n    }\n    // check the status of the done flag\n    isComplete() {\n        return this.progress.done;\n    }\n    // getter method for timeline variables\n    getTimelineVariableValue(variable_name) {\n        if (typeof this.timeline_parameters == \"undefined\") {\n            return undefined;\n        }\n        var v = this.timeline_parameters.timeline_variables[this.progress.order[this.progress.current_variable_set]][variable_name];\n        return v;\n    }\n    // recursive upward search for timeline variables\n    findTimelineVariable(variable_name) {\n        var v = this.getTimelineVariableValue(variable_name);\n        if (typeof v == \"undefined\") {\n            if (typeof this.parent_node !== \"undefined\") {\n                return this.parent_node.findTimelineVariable(variable_name);\n            }\n            else {\n                return undefined;\n            }\n        }\n        else {\n            return v;\n        }\n    }\n    // recursive downward search for active trial to extract timeline variable\n    timelineVariable(variable_name) {\n        if (typeof this.timeline_parameters == \"undefined\") {\n            const val = this.findTimelineVariable(variable_name);\n            if (typeof val === \"undefined\") {\n                console.warn(\"Timeline variable \" + variable_name + \" not found.\");\n            }\n            return val;\n        }\n        else {\n            // if progress.current_location is -1, then the timeline variable is being evaluated\n            // in a function that runs prior to the trial starting, so we should treat that trial\n            // as being the active trial for purposes of finding the value of the timeline variable\n            var loc = Math.max(0, this.progress.current_location);\n            // if loc is greater than the number of elements on this timeline, then the timeline\n            // variable is being evaluated in a function that runs after the trial on the timeline\n            // are complete but before advancing to the next (like a loop_function).\n            // treat the last active trial as the active trial for this purpose.\n            if (loc == this.timeline_parameters.timeline.length) {\n                loc = loc - 1;\n            }\n            // now find the variable\n            const val = this.timeline_parameters.timeline[loc].timelineVariable(variable_name);\n            if (typeof val === \"undefined\") {\n                console.warn(\"Timeline variable \" + variable_name + \" not found.\");\n            }\n            return val;\n        }\n    }\n    // recursively get all the timeline variables for this trial\n    allTimelineVariables() {\n        var all_tvs = this.allTimelineVariablesNames();\n        var all_tvs_vals = {};\n        for (var i = 0; i < all_tvs.length; i++) {\n            all_tvs_vals[all_tvs[i]] = this.timelineVariable(all_tvs[i]);\n        }\n        return all_tvs_vals;\n    }\n    // helper to get all the names at this stage.\n    allTimelineVariablesNames(so_far = []) {\n        if (typeof this.timeline_parameters !== \"undefined\") {\n            so_far = so_far.concat(Object.keys(this.timeline_parameters.timeline_variables[this.progress.order[this.progress.current_variable_set]]));\n            // if progress.current_location is -1, then the timeline variable is being evaluated\n            // in a function that runs prior to the trial starting, so we should treat that trial\n            // as being the active trial for purposes of finding the value of the timeline variable\n            var loc = Math.max(0, this.progress.current_location);\n            // if loc is greater than the number of elements on this timeline, then the timeline\n            // variable is being evaluated in a function that runs after the trial on the timeline\n            // are complete but before advancing to the next (like a loop_function).\n            // treat the last active trial as the active trial for this purpose.\n            if (loc == this.timeline_parameters.timeline.length) {\n                loc = loc - 1;\n            }\n            // now find the variable\n            return this.timeline_parameters.timeline[loc].allTimelineVariablesNames(so_far);\n        }\n        if (typeof this.timeline_parameters == \"undefined\") {\n            return so_far;\n        }\n    }\n    // recursively get the number of **trials** contained in the timeline\n    // assuming that while loops execute exactly once and if conditionals\n    // always run\n    length() {\n        var length = 0;\n        if (typeof this.timeline_parameters !== \"undefined\") {\n            for (var i = 0; i < this.timeline_parameters.timeline.length; i++) {\n                length += this.timeline_parameters.timeline[i].length();\n            }\n        }\n        else {\n            return 1;\n        }\n        return length;\n    }\n    // return the percentage of trials completed, grouped at the first child level\n    // counts a set of trials as complete when the child node is done\n    percentComplete() {\n        var total_trials = this.length();\n        var completed_trials = 0;\n        for (var i = 0; i < this.timeline_parameters.timeline.length; i++) {\n            if (this.timeline_parameters.timeline[i].isComplete()) {\n                completed_trials += this.timeline_parameters.timeline[i].length();\n            }\n        }\n        return (completed_trials / total_trials) * 100;\n    }\n    // resets the node and all subnodes to original state\n    // but increments the current_iteration counter\n    reset() {\n        this.progress.current_location = -1;\n        this.progress.current_repetition = 0;\n        this.progress.current_variable_set = 0;\n        this.progress.current_iteration++;\n        this.progress.done = false;\n        this.setTimelineVariablesOrder();\n        if (typeof this.timeline_parameters != \"undefined\") {\n            for (var i = 0; i < this.timeline_parameters.timeline.length; i++) {\n                this.timeline_parameters.timeline[i].reset();\n            }\n        }\n    }\n    // mark this node as finished\n    end() {\n        this.progress.done = true;\n    }\n    // recursively end whatever sub-node is running the current trial\n    endActiveNode() {\n        if (typeof this.timeline_parameters == \"undefined\") {\n            this.end();\n            this.parent_node.end();\n        }\n        else {\n            this.timeline_parameters.timeline[this.progress.current_location].endActiveNode();\n        }\n    }\n    // get a unique ID associated with this node\n    // the ID reflects the current iteration through this node.\n    ID() {\n        var id = \"\";\n        if (typeof this.parent_node == \"undefined\") {\n            return \"0.\" + this.progress.current_iteration;\n        }\n        else {\n            id += this.parent_node.ID() + \"-\";\n            id += this.relative_id + \".\" + this.progress.current_iteration;\n            return id;\n        }\n    }\n    // get the ID of the active trial\n    activeID() {\n        if (typeof this.timeline_parameters == \"undefined\") {\n            return this.ID();\n        }\n        else {\n            return this.timeline_parameters.timeline[this.progress.current_location].activeID();\n        }\n    }\n    // get all the data generated within this node\n    generatedData() {\n        return this.jsPsych.data.getDataByTimelineNode(this.ID());\n    }\n    // get all the trials of a particular type\n    trialsOfType(type) {\n        if (typeof this.timeline_parameters == \"undefined\") {\n            if (this.trial_parameters.type == type) {\n                return this.trial_parameters;\n            }\n            else {\n                return [];\n            }\n        }\n        else {\n            var trials = [];\n            for (var i = 0; i < this.timeline_parameters.timeline.length; i++) {\n                var t = this.timeline_parameters.timeline[i].trialsOfType(type);\n                trials = trials.concat(t);\n            }\n            return trials;\n        }\n    }\n    // add new trials to end of this timeline\n    insert(parameters) {\n        if (typeof this.timeline_parameters === \"undefined\") {\n            console.error(\"Cannot add new trials to a trial-level node.\");\n        }\n        else {\n            this.timeline_parameters.timeline.push(new TimelineNode(this.jsPsych, Object.assign(Object.assign({}, this.node_trial_data), parameters), this, this.timeline_parameters.timeline.length));\n        }\n    }\n}\n\nfunction delay(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\nclass JsPsych {\n    version() {\n        return version;\n    }\n    constructor(options) {\n        this.extensions = {};\n        this.turk = turk;\n        this.randomization = randomization;\n        this.utils = utils;\n        //\n        // private variables\n        //\n        /**\n         * options\n         */\n        this.opts = {};\n        // flow control\n        this.global_trial_index = 0;\n        this.current_trial = {};\n        this.current_trial_finished = false;\n        /**\n         * is the experiment paused?\n         */\n        this.paused = false;\n        this.waiting = false;\n        /**\n         * is the page retrieved directly via file:// protocol (true) or hosted on a server (false)?\n         */\n        this.file_protocol = false;\n        /**\n         * is the experiment running in `simulate()` mode\n         */\n        this.simulation_mode = null;\n        // storing a single webaudio context to prevent problems with multiple inits\n        // of jsPsych\n        this.webaudio_context = null;\n        this.internal = {\n            /**\n             * this flag is used to determine whether we are in a scope where\n             * jsPsych.timelineVariable() should be executed immediately or\n             * whether it should return a function to access the variable later.\n             *\n             **/\n            call_immediate: false,\n        };\n        this.progress_bar_amount = 0;\n        // override default options if user specifies an option\n        options = Object.assign({ display_element: undefined, on_finish: () => { }, on_trial_start: () => { }, on_trial_finish: () => { }, on_data_update: () => { }, on_interaction_data_update: () => { }, on_close: () => { }, use_webaudio: true, exclusions: {}, show_progress_bar: false, message_progress_bar: \"Completion Progress\", auto_update_progress_bar: true, default_iti: 0, minimum_valid_rt: 0, experiment_width: null, override_safe_mode: false, case_sensitive_responses: false, extensions: [] }, options);\n        this.opts = options;\n        autoBind$1(this); // so we can pass JsPsych methods as callbacks and `this` remains the JsPsych instance\n        this.webaudio_context =\n            typeof window !== \"undefined\" && typeof window.AudioContext !== \"undefined\"\n                ? new AudioContext()\n                : null;\n        // detect whether page is running in browser as a local file, and if so, disable web audio and video preloading to prevent CORS issues\n        if (window.location.protocol == \"file:\" &&\n            (options.override_safe_mode === false || typeof options.override_safe_mode === \"undefined\")) {\n            options.use_webaudio = false;\n            this.file_protocol = true;\n            console.warn(\"jsPsych detected that it is running via the file:// protocol and not on a web server. \" +\n                \"To prevent issues with cross-origin requests, Web Audio and video preloading have been disabled. \" +\n                \"If you would like to override this setting, you can set 'override_safe_mode' to 'true' in initJsPsych. \" +\n                \"For more information, see: https://www.jspsych.org/overview/running-experiments\");\n        }\n        // initialize modules\n        this.data = new JsPsychData(this);\n        this.pluginAPI = createJointPluginAPIObject(this);\n        // create instances of extensions\n        for (const extension of options.extensions) {\n            this.extensions[extension.type.info.name] = new extension.type(this);\n        }\n        // initialize audio context based on options and browser capabilities\n        this.pluginAPI.initAudio();\n    }\n    /**\n     * Starts an experiment using the provided timeline and returns a promise that is resolved when\n     * the experiment is finished.\n     *\n     * @param timeline The timeline to be run\n     */\n    run(timeline) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof timeline === \"undefined\") {\n                console.error(\"No timeline declared in jsPsych.run. Cannot start experiment.\");\n            }\n            if (timeline.length === 0) {\n                console.error(\"No trials have been added to the timeline (the timeline is an empty array). Cannot start experiment.\");\n            }\n            // create experiment timeline\n            this.timelineDescription = timeline;\n            this.timeline = new TimelineNode(this, { timeline });\n            yield this.prepareDom();\n            yield this.checkExclusions(this.opts.exclusions);\n            yield this.loadExtensions(this.opts.extensions);\n            document.documentElement.setAttribute(\"jspsych\", \"present\");\n            this.startExperiment();\n            yield this.finished;\n        });\n    }\n    simulate(timeline, simulation_mode = \"data-only\", simulation_options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.simulation_mode = simulation_mode;\n            this.simulation_options = simulation_options;\n            yield this.run(timeline);\n        });\n    }\n    getProgress() {\n        return {\n            total_trials: typeof this.timeline === \"undefined\" ? undefined : this.timeline.length(),\n            current_trial_global: this.global_trial_index,\n            percent_complete: typeof this.timeline === \"undefined\" ? 0 : this.timeline.percentComplete(),\n        };\n    }\n    getStartTime() {\n        return this.exp_start_time;\n    }\n    getTotalTime() {\n        if (typeof this.exp_start_time === \"undefined\") {\n            return 0;\n        }\n        return new Date().getTime() - this.exp_start_time.getTime();\n    }\n    getDisplayElement() {\n        return this.DOM_target;\n    }\n    getDisplayContainerElement() {\n        return this.DOM_container;\n    }\n    finishTrial(data = {}) {\n        var _a;\n        if (this.current_trial_finished) {\n            return;\n        }\n        this.current_trial_finished = true;\n        // remove any CSS classes that were added to the DOM via css_classes parameter\n        if (typeof this.current_trial.css_classes !== \"undefined\" &&\n            Array.isArray(this.current_trial.css_classes)) {\n            this.DOM_target.classList.remove(...this.current_trial.css_classes);\n        }\n        // write the data from the trial\n        this.data.write(data);\n        // get back the data with all of the defaults in\n        const trial_data = this.data.getLastTrialData();\n        // for trial-level callbacks, we just want to pass in a reference to the values\n        // of the DataCollection, for easy access and editing.\n        const trial_data_values = trial_data.values()[0];\n        const current_trial = this.current_trial;\n        if (typeof current_trial.save_trial_parameters === \"object\") {\n            for (const key of Object.keys(current_trial.save_trial_parameters)) {\n                const key_val = current_trial.save_trial_parameters[key];\n                if (key_val === true) {\n                    if (typeof current_trial[key] === \"undefined\") {\n                        console.warn(`Invalid parameter specified in save_trial_parameters. Trial has no property called \"${key}\".`);\n                    }\n                    else if (typeof current_trial[key] === \"function\") {\n                        trial_data_values[key] = current_trial[key].toString();\n                    }\n                    else {\n                        trial_data_values[key] = current_trial[key];\n                    }\n                }\n                if (key_val === false) {\n                    // we don't allow internal_node_id or trial_index to be deleted because it would break other things\n                    if (key !== \"internal_node_id\" && key !== \"trial_index\") {\n                        delete trial_data_values[key];\n                    }\n                }\n            }\n        }\n        // handle extension callbacks\n        const extensionCallbackResults = ((_a = current_trial.extensions) !== null && _a !== void 0 ? _a : []).map((extension) => this.extensions[extension.type.info.name].on_finish(extension.params));\n        const onExtensionCallbacksFinished = () => {\n            // about to execute lots of callbacks, so switch context.\n            this.internal.call_immediate = true;\n            // handle callback at plugin level\n            if (typeof current_trial.on_finish === \"function\") {\n                current_trial.on_finish(trial_data_values);\n            }\n            // handle callback at whole-experiment level\n            this.opts.on_trial_finish(trial_data_values);\n            // after the above callbacks are complete, then the data should be finalized\n            // for this trial. call the on_data_update handler, passing in the same\n            // data object that just went through the trial's finish handlers.\n            this.opts.on_data_update(trial_data_values);\n            // done with callbacks\n            this.internal.call_immediate = false;\n            // wait for iti\n            if (this.simulation_mode === \"data-only\") {\n                this.nextTrial();\n            }\n            else if (typeof current_trial.post_trial_gap === null ||\n                typeof current_trial.post_trial_gap === \"undefined\") {\n                if (this.opts.default_iti > 0) {\n                    setTimeout(this.nextTrial, this.opts.default_iti);\n                }\n                else {\n                    this.nextTrial();\n                }\n            }\n            else {\n                if (current_trial.post_trial_gap > 0) {\n                    setTimeout(this.nextTrial, current_trial.post_trial_gap);\n                }\n                else {\n                    this.nextTrial();\n                }\n            }\n        };\n        // Strictly using Promise.resolve to turn all values into promises would be cleaner here, but it\n        // would require user test code to make the event loop tick after every simulated key press even\n        // if there are no async `on_finish` methods. Hence, in order to avoid a breaking change, we\n        // only rely on the event loop if at least one `on_finish` method returns a promise.\n        if (extensionCallbackResults.some((result) => typeof result.then === \"function\")) {\n            Promise.all(extensionCallbackResults.map((result) => Promise.resolve(result).then((ext_data_values) => {\n                Object.assign(trial_data_values, ext_data_values);\n            }))).then(onExtensionCallbacksFinished);\n        }\n        else {\n            for (const values of extensionCallbackResults) {\n                Object.assign(trial_data_values, values);\n            }\n            onExtensionCallbacksFinished();\n        }\n    }\n    endExperiment(end_message = \"\", data = {}) {\n        this.timeline.end_message = end_message;\n        this.timeline.end();\n        this.pluginAPI.cancelAllKeyboardResponses();\n        this.pluginAPI.clearAllTimeouts();\n        this.finishTrial(data);\n    }\n    endCurrentTimeline() {\n        this.timeline.endActiveNode();\n    }\n    getCurrentTrial() {\n        return this.current_trial;\n    }\n    getInitSettings() {\n        return this.opts;\n    }\n    getCurrentTimelineNodeID() {\n        return this.timeline.activeID();\n    }\n    timelineVariable(varname, immediate = false) {\n        if (this.internal.call_immediate || immediate === true) {\n            return this.timeline.timelineVariable(varname);\n        }\n        else {\n            return {\n                timelineVariablePlaceholder: true,\n                timelineVariableFunction: () => this.timeline.timelineVariable(varname),\n            };\n        }\n    }\n    getAllTimelineVariables() {\n        return this.timeline.allTimelineVariables();\n    }\n    addNodeToEndOfTimeline(new_timeline, preload_callback) {\n        this.timeline.insert(new_timeline);\n    }\n    pauseExperiment() {\n        this.paused = true;\n    }\n    resumeExperiment() {\n        this.paused = false;\n        if (this.waiting) {\n            this.waiting = false;\n            this.nextTrial();\n        }\n    }\n    loadFail(message) {\n        message = message || \"<p>The experiment failed to load.</p>\";\n        this.DOM_target.innerHTML = message;\n    }\n    getSafeModeStatus() {\n        return this.file_protocol;\n    }\n    getTimeline() {\n        return this.timelineDescription;\n    }\n    prepareDom() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Wait until the document is ready\n            if (document.readyState !== \"complete\") {\n                yield new Promise((resolve) => {\n                    window.addEventListener(\"load\", resolve);\n                });\n            }\n            const options = this.opts;\n            // set DOM element where jsPsych will render content\n            // if undefined, then jsPsych will use the <body> tag and the entire page\n            if (typeof options.display_element === \"undefined\") {\n                // check if there is a body element on the page\n                const body = document.querySelector(\"body\");\n                if (body === null) {\n                    document.documentElement.appendChild(document.createElement(\"body\"));\n                }\n                // using the full page, so we need the HTML element to\n                // have 100% height, and body to be full width and height with\n                // no margin\n                document.querySelector(\"html\").style.height = \"100%\";\n                document.querySelector(\"body\").style.margin = \"0px\";\n                document.querySelector(\"body\").style.height = \"100%\";\n                document.querySelector(\"body\").style.width = \"100%\";\n                options.display_element = document.querySelector(\"body\");\n            }\n            else {\n                // make sure that the display element exists on the page\n                const display = options.display_element instanceof Element\n                    ? options.display_element\n                    : document.querySelector(\"#\" + options.display_element);\n                if (display === null) {\n                    console.error(\"The display_element specified in initJsPsych() does not exist in the DOM.\");\n                }\n                else {\n                    options.display_element = display;\n                }\n            }\n            options.display_element.innerHTML =\n                '<div class=\"jspsych-content-wrapper\"><div id=\"jspsych-content\"></div></div>';\n            this.DOM_container = options.display_element;\n            this.DOM_target = document.querySelector(\"#jspsych-content\");\n            // set experiment_width if not null\n            if (options.experiment_width !== null) {\n                this.DOM_target.style.width = options.experiment_width + \"px\";\n            }\n            // add tabIndex attribute to scope event listeners\n            options.display_element.tabIndex = 0;\n            // add CSS class to DOM_target\n            if (options.display_element.className.indexOf(\"jspsych-display-element\") === -1) {\n                options.display_element.className += \" jspsych-display-element\";\n            }\n            this.DOM_target.className += \"jspsych-content\";\n            // create listeners for user browser interaction\n            this.data.createInteractionListeners();\n            // add event for closing window\n            window.addEventListener(\"beforeunload\", options.on_close);\n        });\n    }\n    loadExtensions(extensions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // run the .initialize method of any extensions that are in use\n            // these should return a Promise to indicate when loading is complete\n            try {\n                yield Promise.all(extensions.map((extension) => this.extensions[extension.type.info.name].initialize(extension.params || {})));\n            }\n            catch (error_message) {\n                console.error(error_message);\n                throw new Error(error_message);\n            }\n        });\n    }\n    startExperiment() {\n        this.finished = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n        // show progress bar if requested\n        if (this.opts.show_progress_bar === true) {\n            this.drawProgressBar(this.opts.message_progress_bar);\n        }\n        // record the start time\n        this.exp_start_time = new Date();\n        // begin!\n        this.timeline.advance();\n        this.doTrial(this.timeline.trial());\n    }\n    finishExperiment() {\n        const finish_result = this.opts.on_finish(this.data.get());\n        const done_handler = () => {\n            if (typeof this.timeline.end_message !== \"undefined\") {\n                this.DOM_target.innerHTML = this.timeline.end_message;\n            }\n            this.resolveFinishedPromise();\n        };\n        if (finish_result) {\n            Promise.resolve(finish_result).then(done_handler);\n        }\n        else {\n            done_handler();\n        }\n    }\n    nextTrial() {\n        // if experiment is paused, don't do anything.\n        if (this.paused) {\n            this.waiting = true;\n            return;\n        }\n        this.global_trial_index++;\n        // advance timeline\n        this.timeline.markCurrentTrialComplete();\n        const complete = this.timeline.advance();\n        // update progress bar if shown\n        if (this.opts.show_progress_bar === true && this.opts.auto_update_progress_bar === true) {\n            this.updateProgressBar();\n        }\n        // check if experiment is over\n        if (complete) {\n            this.finishExperiment();\n            return;\n        }\n        this.doTrial(this.timeline.trial());\n    }\n    doTrial(trial) {\n        this.current_trial = trial;\n        this.current_trial_finished = false;\n        // process all timeline variables for this trial\n        this.evaluateTimelineVariables(trial);\n        if (typeof trial.type === \"string\") {\n            throw new MigrationError(\"A string was provided as the trial's `type` parameter. Since jsPsych v7, the `type` parameter needs to be a plugin object.\");\n        }\n        // instantiate the plugin for this trial\n        trial.type = Object.assign(Object.assign({}, autoBind$1(new trial.type(this))), { info: trial.type.info });\n        // evaluate variables that are functions\n        this.evaluateFunctionParameters(trial);\n        // get default values for parameters\n        this.setDefaultValues(trial);\n        // about to execute callbacks\n        this.internal.call_immediate = true;\n        // call experiment wide callback\n        this.opts.on_trial_start(trial);\n        // call trial specific callback if it exists\n        if (typeof trial.on_start === \"function\") {\n            trial.on_start(trial);\n        }\n        // call any on_start functions for extensions\n        if (Array.isArray(trial.extensions)) {\n            for (const extension of trial.extensions) {\n                this.extensions[extension.type.info.name].on_start(extension.params);\n            }\n        }\n        // apply the focus to the element containing the experiment.\n        this.DOM_container.focus();\n        // reset the scroll on the DOM target\n        this.DOM_target.scrollTop = 0;\n        // add CSS classes to the DOM_target if they exist in trial.css_classes\n        if (typeof trial.css_classes !== \"undefined\") {\n            if (!Array.isArray(trial.css_classes) && typeof trial.css_classes === \"string\") {\n                trial.css_classes = [trial.css_classes];\n            }\n            if (Array.isArray(trial.css_classes)) {\n                this.DOM_target.classList.add(...trial.css_classes);\n            }\n        }\n        // setup on_load event callback\n        const load_callback = () => {\n            if (typeof trial.on_load === \"function\") {\n                trial.on_load();\n            }\n            // call any on_load functions for extensions\n            if (Array.isArray(trial.extensions)) {\n                for (const extension of trial.extensions) {\n                    this.extensions[extension.type.info.name].on_load(extension.params);\n                }\n            }\n        };\n        let trial_complete;\n        let trial_sim_opts;\n        let trial_sim_opts_merged;\n        if (!this.simulation_mode) {\n            trial_complete = trial.type.trial(this.DOM_target, trial, load_callback);\n        }\n        if (this.simulation_mode) {\n            // check if the trial supports simulation\n            if (trial.type.simulate) {\n                if (!trial.simulation_options) {\n                    trial_sim_opts = this.simulation_options.default;\n                }\n                if (trial.simulation_options) {\n                    if (typeof trial.simulation_options == \"string\") {\n                        if (this.simulation_options[trial.simulation_options]) {\n                            trial_sim_opts = this.simulation_options[trial.simulation_options];\n                        }\n                        else if (this.simulation_options.default) {\n                            console.log(`No matching simulation options found for \"${trial.simulation_options}\". Using \"default\" options.`);\n                            trial_sim_opts = this.simulation_options.default;\n                        }\n                        else {\n                            console.log(`No matching simulation options found for \"${trial.simulation_options}\" and no \"default\" options provided. Using the default values provided by the plugin.`);\n                            trial_sim_opts = {};\n                        }\n                    }\n                    else {\n                        trial_sim_opts = trial.simulation_options;\n                    }\n                }\n                // merge in default options that aren't overriden by the trial's simulation_options\n                // including nested parameters in the simulation_options\n                trial_sim_opts_merged = this.utils.deepMerge(this.simulation_options.default, trial_sim_opts);\n                trial_sim_opts_merged = this.utils.deepCopy(trial_sim_opts_merged);\n                trial_sim_opts_merged = this.replaceFunctionsWithValues(trial_sim_opts_merged, null);\n                if ((trial_sim_opts_merged === null || trial_sim_opts_merged === void 0 ? void 0 : trial_sim_opts_merged.simulate) === false) {\n                    trial_complete = trial.type.trial(this.DOM_target, trial, load_callback);\n                }\n                else {\n                    trial_complete = trial.type.simulate(trial, (trial_sim_opts_merged === null || trial_sim_opts_merged === void 0 ? void 0 : trial_sim_opts_merged.mode) || this.simulation_mode, trial_sim_opts_merged, load_callback);\n                }\n            }\n            else {\n                // trial doesn't have a simulate method, so just run as usual\n                trial_complete = trial.type.trial(this.DOM_target, trial, load_callback);\n            }\n        }\n        // see if trial_complete is a Promise by looking for .then() function\n        const is_promise = trial_complete && typeof trial_complete.then == \"function\";\n        // in simulation mode we let the simulate function call the load_callback always,\n        // so we don't need to call it here. however, if we are in simulation mode but not simulating\n        // this particular trial we need to call it.\n        if (!is_promise &&\n            (!this.simulation_mode || (this.simulation_mode && (trial_sim_opts_merged === null || trial_sim_opts_merged === void 0 ? void 0 : trial_sim_opts_merged.simulate) === false))) {\n            load_callback();\n        }\n        // done with callbacks\n        this.internal.call_immediate = false;\n    }\n    evaluateTimelineVariables(trial) {\n        for (const key of Object.keys(trial)) {\n            if (typeof trial[key] === \"object\" &&\n                trial[key] !== null &&\n                typeof trial[key].timelineVariablePlaceholder !== \"undefined\") {\n                trial[key] = trial[key].timelineVariableFunction();\n            }\n            // timeline variables that are nested in objects\n            if (typeof trial[key] === \"object\" &&\n                trial[key] !== null &&\n                key !== \"timeline\" &&\n                key !== \"timeline_variables\") {\n                this.evaluateTimelineVariables(trial[key]);\n            }\n        }\n    }\n    evaluateFunctionParameters(trial) {\n        // set a flag so that jsPsych.timelineVariable() is immediately executed in this context\n        this.internal.call_immediate = true;\n        // iterate over each parameter\n        for (const key of Object.keys(trial)) {\n            // check to make sure parameter is not \"type\", since that was eval'd above.\n            if (key !== \"type\") {\n                // this if statement is checking to see if the parameter type is expected to be a function, in which case we should NOT evaluate it.\n                // the first line checks if the parameter is defined in the universalPluginParameters set\n                // the second line checks the plugin-specific parameters\n                if (typeof universalPluginParameters[key] !== \"undefined\" &&\n                    universalPluginParameters[key].type !== ParameterType.FUNCTION) {\n                    trial[key] = this.replaceFunctionsWithValues(trial[key], null);\n                }\n                if (typeof trial.type.info.parameters[key] !== \"undefined\" &&\n                    trial.type.info.parameters[key].type !== ParameterType.FUNCTION) {\n                    trial[key] = this.replaceFunctionsWithValues(trial[key], trial.type.info.parameters[key]);\n                }\n            }\n        }\n        // reset so jsPsych.timelineVariable() is no longer immediately executed\n        this.internal.call_immediate = false;\n    }\n    replaceFunctionsWithValues(obj, info) {\n        // null typeof is 'object' (?!?!), so need to run this first!\n        if (obj === null) {\n            return obj;\n        }\n        // arrays\n        else if (Array.isArray(obj)) {\n            for (let i = 0; i < obj.length; i++) {\n                obj[i] = this.replaceFunctionsWithValues(obj[i], info);\n            }\n        }\n        // objects\n        else if (typeof obj === \"object\") {\n            if (info === null || !info.nested) {\n                for (const key of Object.keys(obj)) {\n                    if (key === \"type\" || key === \"timeline\" || key === \"timeline_variables\") {\n                        // Ignore the object's `type` field because it contains a plugin and we do not want to\n                        // call plugin functions. Also ignore `timeline` and `timeline_variables` because they\n                        // are used in the `trials` parameter of the preload plugin and we don't want to actually\n                        // evaluate those in that context.\n                        continue;\n                    }\n                    obj[key] = this.replaceFunctionsWithValues(obj[key], null);\n                }\n            }\n            else {\n                for (const key of Object.keys(obj)) {\n                    if (typeof info.nested[key] === \"object\" &&\n                        info.nested[key].type !== ParameterType.FUNCTION) {\n                        obj[key] = this.replaceFunctionsWithValues(obj[key], info.nested[key]);\n                    }\n                }\n            }\n        }\n        else if (typeof obj === \"function\") {\n            return obj();\n        }\n        return obj;\n    }\n    setDefaultValues(trial) {\n        for (const param in trial.type.info.parameters) {\n            // check if parameter is complex with nested defaults\n            if (trial.type.info.parameters[param].type === ParameterType.COMPLEX) {\n                // check if parameter is undefined and has a default value\n                if (typeof trial[param] === \"undefined\" && trial.type.info.parameters[param].default) {\n                    trial[param] = trial.type.info.parameters[param].default;\n                }\n                // if parameter is an array, iterate over each entry after confirming that there are\n                // entries to iterate over. this is common when some parameters in a COMPLEX type have\n                // default values and others do not.\n                if (trial.type.info.parameters[param].array === true && Array.isArray(trial[param])) {\n                    // iterate over each entry in the array\n                    trial[param].forEach(function (ip, i) {\n                        // check each parameter in the plugin description\n                        for (const p in trial.type.info.parameters[param].nested) {\n                            if (typeof trial[param][i][p] === \"undefined\" || trial[param][i][p] === null) {\n                                if (typeof trial.type.info.parameters[param].nested[p].default === \"undefined\") {\n                                    console.error(`You must specify a value for the ${p} parameter (nested in the ${param} parameter) in the ${trial.type.info.name} plugin.`);\n                                }\n                                else {\n                                    trial[param][i][p] = trial.type.info.parameters[param].nested[p].default;\n                                }\n                            }\n                        }\n                    });\n                }\n            }\n            // if it's not nested, checking is much easier and do that here:\n            else if (typeof trial[param] === \"undefined\" || trial[param] === null) {\n                if (typeof trial.type.info.parameters[param].default === \"undefined\") {\n                    console.error(`You must specify a value for the ${param} parameter in the ${trial.type.info.name} plugin.`);\n                }\n                else {\n                    trial[param] = trial.type.info.parameters[param].default;\n                }\n            }\n        }\n    }\n    checkExclusions(exclusions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (exclusions.min_width || exclusions.min_height || exclusions.audio) {\n                console.warn(\"The exclusions option in `initJsPsych()` is deprecated and will be removed in a future version. We recommend using the browser-check plugin instead. See https://www.jspsych.org/latest/plugins/browser-check/.\");\n            }\n            // MINIMUM SIZE\n            if (exclusions.min_width || exclusions.min_height) {\n                const mw = exclusions.min_width || 0;\n                const mh = exclusions.min_height || 0;\n                if (window.innerWidth < mw || window.innerHeight < mh) {\n                    this.getDisplayElement().innerHTML =\n                        \"<p>Your browser window is too small to complete this experiment. \" +\n                            \"Please maximize the size of your browser window. If your browser window is already maximized, \" +\n                            \"you will not be able to complete this experiment.</p>\" +\n                            \"<p>The minimum width is \" +\n                            mw +\n                            \"px. Your current width is \" +\n                            window.innerWidth +\n                            \"px.</p>\" +\n                            \"<p>The minimum height is \" +\n                            mh +\n                            \"px. Your current height is \" +\n                            window.innerHeight +\n                            \"px.</p>\";\n                    // Wait for window size to increase\n                    while (window.innerWidth < mw || window.innerHeight < mh) {\n                        yield delay(100);\n                    }\n                    this.getDisplayElement().innerHTML = \"\";\n                }\n            }\n            // WEB AUDIO API\n            if (typeof exclusions.audio !== \"undefined\" && exclusions.audio) {\n                if (!window.hasOwnProperty(\"AudioContext\") && !window.hasOwnProperty(\"webkitAudioContext\")) {\n                    this.getDisplayElement().innerHTML =\n                        \"<p>Your browser does not support the WebAudio API, which means that you will not \" +\n                            \"be able to complete the experiment.</p><p>Browsers that support the WebAudio API include \" +\n                            \"Chrome, Firefox, Safari, and Edge.</p>\";\n                    throw new Error();\n                }\n            }\n        });\n    }\n    drawProgressBar(msg) {\n        document\n            .querySelector(\".jspsych-display-element\")\n            .insertAdjacentHTML(\"afterbegin\", '<div id=\"jspsych-progressbar-container\">' +\n            \"<span>\" +\n            msg +\n            \"</span>\" +\n            '<div id=\"jspsych-progressbar-outer\">' +\n            '<div id=\"jspsych-progressbar-inner\"></div>' +\n            \"</div></div>\");\n    }\n    updateProgressBar() {\n        this.setProgressBar(this.getProgress().percent_complete / 100);\n    }\n    setProgressBar(proportion_complete) {\n        proportion_complete = Math.max(Math.min(1, proportion_complete), 0);\n        document.querySelector(\"#jspsych-progressbar-inner\").style.width =\n            proportion_complete * 100 + \"%\";\n        this.progress_bar_amount = proportion_complete;\n    }\n    getProgressBarCompleted() {\n        return this.progress_bar_amount;\n    }\n}\n\n// __rollup-babel-import-regenerator-runtime__\n// temporary patch for Safari\nif (typeof window !== \"undefined\" &&\n    window.hasOwnProperty(\"webkitAudioContext\") &&\n    !window.hasOwnProperty(\"AudioContext\")) {\n    // @ts-expect-error\n    window.AudioContext = webkitAudioContext;\n}\n// end patch\n// The following function provides a uniform interface to initialize jsPsych, no matter whether a\n// browser supports ES6 classes or not (and whether the ES6 build or the Babel build is used).\n/**\n * Creates a new JsPsych instance using the provided options.\n *\n * @param options The options to pass to the JsPsych constructor\n * @returns A new JsPsych instance\n */\nfunction initJsPsych(options) {\n    const jsPsych = new JsPsych(options);\n    // Handle invocations of non-existent v6 methods with migration errors\n    const migrationMessages = {\n        init: \"`jsPsych.init()` was replaced by `initJsPsych()` in jsPsych v7.\",\n        ALL_KEYS: 'jsPsych.ALL_KEYS was replaced by the \"ALL_KEYS\" string in jsPsych v7.',\n        NO_KEYS: 'jsPsych.NO_KEYS was replaced by the \"NO_KEYS\" string in jsPsych v7.',\n        // Getter functions that were renamed\n        currentTimelineNodeID: \"`currentTimelineNodeID()` was renamed to `getCurrentTimelineNodeID()` in jsPsych v7.\",\n        progress: \"`progress()` was renamed to `getProgress()` in jsPsych v7.\",\n        startTime: \"`startTime()` was renamed to `getStartTime()` in jsPsych v7.\",\n        totalTime: \"`totalTime()` was renamed to `getTotalTime()` in jsPsych v7.\",\n        currentTrial: \"`currentTrial()` was renamed to `getCurrentTrial()` in jsPsych v7.\",\n        initSettings: \"`initSettings()` was renamed to `getInitSettings()` in jsPsych v7.\",\n        allTimelineVariables: \"`allTimelineVariables()` was renamed to `getAllTimelineVariables()` in jsPsych v7.\",\n    };\n    Object.defineProperties(jsPsych, Object.fromEntries(Object.entries(migrationMessages).map(([key, message]) => [\n        key,\n        {\n            get() {\n                throw new MigrationError(message);\n            },\n        },\n    ])));\n    return jsPsych;\n}\n\nexport { JsPsych, ParameterType, initJsPsych, universalPluginParameters };\n//# sourceMappingURL=index.js.map\n"],"names":["info","name","parameters","stimulus","type","AUDIO","pretty_name","default","undefined","choices","KEYS","prompt","HTML_STRING","trial_duration","INT","response_ends_trial","BOOL","trial_ends_after_audio","response_allowed_while_playing","AudioKeyboardResponsePlugin","constructor","jsPsych","this","trial","display_element","on_load","trial_complete","startTime","context","pluginAPI","audioContext","response","rt","key","getAudioBuffer","then","buffer","audio","createBufferSource","connect","destination","currentTime","setupTrial","catch","err","console","error","addEventListener","end_trial","innerHTML","start","play","setup_keyboard_listener","setTimeout","clearAllTimeouts","stop","pause","removeEventListener","cancelAllKeyboardResponses","trial_data","finishTrial","after_response","getKeyboardResponse","callback_function","valid_responses","rt_method","persist","allow_held_key","audio_context","audio_context_start_time","Promise","resolve","simulate","simulation_mode","simulation_options","load_callback","simulate_data_only","simulate_visual","data","create_simulation_data","getDisplayElement","respond","pressKey","default_data","randomization","sampleExGaussian","getValidKey","mergeSimulationData","ensureSimulationDataConsistency","fullscreen_mode","array","message","button_label","STRING","delay_after","FullscreenPlugin","start_time","Element","endTrial","showDisplay","exitFullScreen","querySelector","Math","round","performance","now","enterFullScreen","success","element","document","documentElement","requestFullscreen","fullscreenElement","exitFullscreen","clickTarget","min","max","slider_start","step","labels","slider_width","require_movement","stimulus_duration","HtmlSliderResponsePlugin","html","j","length","label_width_perc","percent_of_range","enable_button","disabled","trialdata","endTime","valueAsNumber","style","visibility","randomInt","el","auto_preload","trials","TIMELINE","images","video","show_progress_bar","continue_after_error","error_message","show_detailed_errors","max_load_time","on_error","FUNCTION","on_success","PreloadPlugin","timeout","failed_images","failed_audio","failed_video","detailed_errors","in_safe_mode","getSafeModeStatus","experiment_timeline","getTimeline","getAutoPreloadList","concat","trial_preloads","utils","unique","flat","update_loading_progress_bar","loaded","percent_loaded","total_n","preload_progress_bar","width","cancelPreloads","stop_with_error_message","forEach","e","loaded_success","after_error","push","load_video","cb","preloadVideo","file_loading_success","file_loading_error","load_audio","preloadAudio","load_images","preloadImages","source","path","localName","err_msg","statusText","after_success","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","value","next","rejected","result","done","apply","SuppressedError","commonjsGlobal","globalThis","window","global","self","getDefaultExportFromCjs","x","__esModule","Object","prototype","hasOwnProperty","call","autoBind$1","include","exclude","filter","match","pattern","test","some","object","properties","Set","Reflect","ownKeys","add","getPrototypeOf","getAllProperties","descriptor","getOwnPropertyDescriptor","bind","MigrationError","Error","super","arr","deepCopy","obj","out","Array","isArray","init","turk","ALL_KEYS","NO_KEYS","ParameterType","freeze","__proto__","deepMerge","obj1","obj2","merged","DataColumn","values","sum","s","v","mean","count","median","numbers","slice","sort","a","b","middle","floor","variance","sum_square_error","pow","sd","mse","sqrt","frequencies","all","eval_fn","subset","DataCollection","new_data","join","other_data_collection","top","first","n","last","readOnly","addToAll","assign","addToLast","filters","f","filtered_data","keep","keys","filterCustom","fn","filterColumns","columns","map","fromEntries","select","column","ignore","o","delete_key","uniqueNames","names","includes","csv","objArray","JSON","parse","line","row","keyString","replace","col","stringify","JSON2CSV","json","pretty","localSave","format","filename","data_string","toLowerCase","textstr","blobToSave","Blob","blobURL","webkitURL","createObjectURL","URL","link","createElement","id","display","download","href","click","saveTextToFile","JsPsychData","dataProperties","reset","allData","interactionData","get","getInteractionData","write","data_object","progress","getProgress","getCurrentTrial","trial_type","trial_index","current_trial_global","time_elapsed","getTotalTime","internal_node_id","getCurrentTimelineNodeID","addProperties","addDataToLastTrial","getDataByTimelineNode","node_id","getLastTrialData","getLastTimelineData","parent_node_id","substr","lastIndexOf","displayData","log","getElementById","textContent","urlVariables","query_string","location","search","split","i","p","decodeURIComponent","getQueryString","getURLVariable","whichvar","createInteractionListeners","event","time","getInitSettings","on_interaction_data_update","fullscreenchange","isFullScreen","webkitIsFullScreen","mozIsFullScreen","_customInsert","_fullreset","HardwareAPI","hardwareConnected","evt","hardware","mess","jspsychEvt","CustomEvent","detail","dispatchEvent","KeyboardListenerAPI","getRootElement","areResponsesCaseSensitive","minimumValidRt","listeners","heldKeys","areRootListenersRegistered","registerRootListeners","rootElement","rootKeydownListener","rootKeyupListener","listener","from","toLowerCaseIfInsensitive","string","delete","isResponseValid","validResponses","allowHeldKey","has","minimum_valid_rt","r","preventDefault","cancelKeyboardResponse","clear","compareKeys","key1","key2","universalPluginParameters","OBJECT","on_start","on_finish","post_trial_gap","css_classes","COMPLEX","preloadParameterTypes","IMAGE","VIDEO","MediaAPI","useWebaudio","webaudioContext","video_buffers","audio_buffers","preload_requests","img_cache","preloadMap","Map","microphone_recorder","camera_stream","camera_recorder","getVideoBuffer","videoID","startsWith","initAudio","state","resume","audioID","files","callback_complete","callback_load","filepath","callback_error","error_msg","n_loaded","load_audio_file_webaudio","request","XMLHttpRequest","open","responseType","onload","decodeAudioData","onerror","status","onloadend","send","load_audio_file_html5audio","Audio","handleCanPlayThrough","handleError","src","handleAbort","file","img","Image","videos","videoBlob","timeline_description","preloadPaths","traverseTimeline","node","inheritedTrialType","_a","_b","_c","_d","timeline","childNode","pluginName","set","entries","_name","preload","parameterName","parameterType","parameterValue","elements","oncanplaythrough","onabort","initializeMicrophoneRecorder","stream","recorder","MediaRecorder","getMicrophoneRecorder","initializeCameraRecorder","opts","getCameraStream","getCameraRecorder","SimulationAPI","getDisplayContainerElement","setJsPsychTimeout","keyDown","KeyboardEvent","keyUp","delay","target","MouseEvent","bubbles","fillTextInput","text","possible_keys","random","flat_choices","correct","allow_response_before_complete","sequence_reps","frame_time","min_time","stimuli","TimeoutAPI","timeout_handlers","callback","handle","handler","clearTimeout","alea$1","exports","module","define","Alea","seed","me","mash","String","h","charCodeAt","t","s0","c","s1","s2","copy","impl","xg","prng","int32","double","quick","alea","aleaExports","seedrandom$3","xor128$1","XorGen","strseed","y","z","w","k","xor128","xor128Exports","xorwow$1","d","xorwow","xorwowExports","xorshift7$1","X","Date","xorshift7","xorshift7Exports","xor4096$1","limit","xor4096","xor4096Exports","tychei$1","tychei","tycheiExports","seedrandom$2","pool","math","nodecrypto","rngname","startdenom","significance","overflow","mask","seedrandom","options","shortseed","mixkey","flatten","entropy","tostring","randomBytes","Uint8Array","crypto","msCrypto","getRandomValues","browser","navigator","plugins","screen","autoseed","arc4","ARC4","g","S","pass","is_math_call","keylen","depth","prop","typ","smear","stringseed","fromCharCode","require","ex","sr","wordList","words","word","maxLength","wordUsed","rightSize","generateRandomWord","generateWordWithMaxLength","randInt","lessThan","exactly","wordsPerString","formatter","separator","total","results","token","relativeIndex","randomWords$1","rw","repeat","repetitions","unpack","arr_isArray","rep_isArray","warn","reps","allsamples","shuffle","unpackArray","copy_array","m","shuffleAlternateGroups","arr_groups","random_group_order","n_groups","group_order","randomized_groups","min_length","sampleWithoutReplacement","size","sampleWithReplacement","weights","normalized_weights","weight_sum","weight","cumulative_weights","samp","rnd","index","sampleNormal","standard_deviation","u","cos","PI","randn_bm","sampleExponential","rate","factorial","factors","design","factorName","factor","new_design","level","cell","randomID","chars","lower","upper","randomWords","sampleBernoulli","positive","setSeed","toString","shuffleNoRepeats","equalityTest","random_shuffle","random_pick","new_neighbor","turkInfo","previewMode","outsideTurk","hitId","assignmentId","workerId","turkSubmitTo","param","url","RegExp","exec","referrer","unescape","submitToTurk","form","method","action","hiddenField","appendChild","body","submit","TimelineNode","parent","relativeID","current_location","current_variable_set","current_repetition","current_iteration","parent_node","relative_id","timeline_parameters","loop_function","conditional_function","sample","randomize_order","timeline_variables","on_timeline_finish","on_timeline_start","setTimelineVariablesOrder","node_data","node_trial_data","merged_parameters","merged_data","trial_parameters","markCurrentTrialComplete","nextRepetiton","order","groups","randomize_group_order","nextSet","advance","internal","call_immediate","conditional_result","have_node_to_run","generatedData","isComplete","getTimelineVariableValue","variable_name","findTimelineVariable","timelineVariable","val","loc","allTimelineVariables","all_tvs","allTimelineVariablesNames","all_tvs_vals","so_far","percentComplete","total_trials","completed_trials","end","endActiveNode","ID","activeID","trialsOfType","insert","ms","JsPsych","version","extensions","global_trial_index","current_trial","current_trial_finished","paused","waiting","file_protocol","webaudio_context","progress_bar_amount","on_trial_start","on_trial_finish","on_data_update","on_close","use_webaudio","exclusions","message_progress_bar","auto_update_progress_bar","default_iti","experiment_width","override_safe_mode","case_sensitive_responses","AudioContext","protocol","settings","keyboardListenerAPI","timeoutAPI","mediaAPI","hardwareAPI","simulationAPI","createJointPluginAPIObject","extension","run","timelineDescription","prepareDom","checkExclusions","loadExtensions","setAttribute","startExperiment","finished","percent_complete","getStartTime","exp_start_time","getTime","DOM_target","DOM_container","classList","remove","trial_data_values","save_trial_parameters","key_val","extensionCallbackResults","params","onExtensionCallbacksFinished","nextTrial","ext_data_values","endExperiment","end_message","endCurrentTimeline","varname","immediate","timelineVariablePlaceholder","timelineVariableFunction","getAllTimelineVariables","addNodeToEndOfTimeline","new_timeline","preload_callback","pauseExperiment","resumeExperiment","loadFail","readyState","height","margin","tabIndex","className","indexOf","initialize","resolveFinishedPromise","drawProgressBar","doTrial","finishExperiment","finish_result","done_handler","complete","updateProgressBar","evaluateTimelineVariables","evaluateFunctionParameters","setDefaultValues","focus","scrollTop","trial_sim_opts","trial_sim_opts_merged","replaceFunctionsWithValues","mode","nested","ip","min_width","min_height","mw","mh","innerWidth","innerHeight","msg","insertAdjacentHTML","setProgressBar","proportion_complete","getProgressBarCompleted","initJsPsych","defineProperties","currentTimelineNodeID","totalTime","currentTrial","initSettings","webkitAudioContext"],"sourceRoot":""}