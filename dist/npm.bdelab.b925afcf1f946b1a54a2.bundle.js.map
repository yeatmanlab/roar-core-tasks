{"version":3,"file":"npm.bdelab.b925afcf1f946b1a54a2.bundle.js","mappings":"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","sources":["webpack://@bdelab/roar-levantecore-tasks/./node_modules/@bdelab/jscat/lib/index.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@bdelab/jscat/lib/utils.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@bdelab/roar-firekit/lib/auth.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@bdelab/roar-firekit/lib/firestore/app/appkit.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@bdelab/roar-firekit/lib/firestore/app/run.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@bdelab/roar-firekit/lib/firestore/app/task.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@bdelab/roar-firekit/lib/firestore/app/user.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@bdelab/roar-firekit/lib/firestore/firekit.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@bdelab/roar-firekit/lib/firestore/interfaces.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@bdelab/roar-firekit/lib/firestore/query-admin.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@bdelab/roar-firekit/lib/firestore/query-assessment.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@bdelab/roar-firekit/lib/firestore/util.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@bdelab/roar-firekit/lib/index.js","webpack://@bdelab/roar-levantecore-tasks/./node_modules/@bdelab/roar-utils/lib/utils.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Cat = exports.abilityPrior = void 0;\nconst optimization_js_1 = require(\"optimization-js\");\nconst lodash_1 = require(\"lodash\");\nconst utils_1 = require(\"./utils\");\nconst seedrandom_1 = __importDefault(require(\"seedrandom\"));\nexports.abilityPrior = (0, utils_1.normal)();\nclass Cat {\n    /**\n     * Create a Cat object. This expects an single object parameter with the following keys\n     * @param {{method: string, itemSelect: string, nStartItems: number, startSelect:string, theta: number, minTheta: number, maxTheta: number, prior: number[][]}=} destructuredParam\n     *     method: ability estimator, e.g. MLE or EAP, default = 'MLE'\n     *     itemSelect: the method of item selection, e.g. \"MFI\", \"random\", \"closest\", default method = 'MFI'\n     *     nStartItems: first n trials to keep non-adaptive selection\n     *     startSelect: rule to select first n trials\n     *     theta: initial theta estimate\n     *     minTheta: lower bound of theta\n     *     maxTheta: higher bound of theta\n     *     prior:  the prior distribution\n     *     randomSeed: set a random seed to trace the simulation\n     */\n    constructor({ method = 'MLE', itemSelect = 'MFI', nStartItems = 0, startSelect = 'middle', theta = 0, minTheta = -6, maxTheta = 6, prior = exports.abilityPrior, randomSeed = null, } = {}) {\n        this.method = Cat.validateMethod(method);\n        this.itemSelect = Cat.validateItemSelect(itemSelect);\n        this.startSelect = Cat.validateStartSelect(startSelect);\n        this.minTheta = minTheta;\n        this.maxTheta = maxTheta;\n        this.prior = prior;\n        this._zetas = [];\n        this._resps = [];\n        this._theta = theta;\n        this._nItems = 0;\n        this._seMeasurement = Number.MAX_VALUE;\n        this.nStartItems = nStartItems;\n        this._rng = randomSeed === null ? (0, seedrandom_1.default)() : (0, seedrandom_1.default)(randomSeed);\n    }\n    get theta() {\n        return this._theta;\n    }\n    get seMeasurement() {\n        return this._seMeasurement;\n    }\n    get nItems() {\n        return this._resps.length;\n    }\n    get resps() {\n        return this._resps;\n    }\n    get zetas() {\n        return this._zetas;\n    }\n    static validateMethod(method) {\n        const lowerMethod = method.toLowerCase();\n        const validMethods = ['mle', 'eap']; // TO DO: add staircase\n        if (!validMethods.includes(lowerMethod)) {\n            throw new Error('The abilityEstimator you provided is not in the list of valid methods');\n        }\n        return lowerMethod;\n    }\n    static validateItemSelect(itemSelect) {\n        const lowerItemSelect = itemSelect.toLowerCase();\n        const validItemSelect = ['mfi', 'random', 'closest'];\n        if (!validItemSelect.includes(lowerItemSelect)) {\n            throw new Error('The itemSelector you provided is not in the list of valid methods');\n        }\n        return lowerItemSelect;\n    }\n    static validateStartSelect(startSelect) {\n        const lowerStartSelect = startSelect.toLowerCase();\n        const validStartSelect = ['random', 'middle']; // TO DO: add staircase\n        if (!validStartSelect.includes(lowerStartSelect)) {\n            throw new Error('The startSelect you provided is not in the list of valid methods');\n        }\n        return lowerStartSelect;\n    }\n    /**\n     * use previous response patterns and item params to calculate the estimate ability based on a defined method\n     * @param zeta - last item param\n     * @param answer - last response pattern\n     * @param method\n     */\n    updateAbilityEstimate(zeta, answer, method = this.method) {\n        method = Cat.validateMethod(method);\n        zeta = Array.isArray(zeta) ? zeta : [zeta];\n        answer = Array.isArray(answer) ? answer : [answer];\n        if (zeta.length !== answer.length) {\n            throw new Error('Unmatched length between answers and item params');\n        }\n        this._zetas.push(...zeta);\n        this._resps.push(...answer);\n        if (method === 'eap') {\n            this._theta = this.estimateAbilityEAP();\n        }\n        else if (method === 'mle') {\n            this._theta = this.estimateAbilityMLE();\n        }\n        this.calculateSE();\n    }\n    estimateAbilityEAP() {\n        let num = 0;\n        let nf = 0;\n        this.prior.forEach(([theta, probability]) => {\n            const like = this.likelihood(theta);\n            num += theta * like * probability;\n            nf += like * probability;\n        });\n        return num / nf;\n    }\n    estimateAbilityMLE() {\n        const theta0 = [0];\n        const solution = (0, optimization_js_1.minimize_Powell)(this.negLikelihood.bind(this), theta0);\n        let theta = solution.argument[0];\n        if (theta > this.maxTheta) {\n            theta = this.maxTheta;\n        }\n        else if (theta < this.minTheta) {\n            theta = this.minTheta;\n        }\n        return theta;\n    }\n    negLikelihood(thetaArray) {\n        return -this.likelihood(thetaArray[0]);\n    }\n    likelihood(theta) {\n        return this._zetas.reduce((acc, zeta, i) => {\n            const irf = (0, utils_1.itemResponseFunction)(theta, zeta);\n            return this._resps[i] === 1 ? acc + Math.log(irf) : acc + Math.log(1 - irf);\n        }, 1);\n    }\n    /**\n     * calculate the standard error of ability estimation\n     */\n    calculateSE() {\n        const sum = this._zetas.reduce((previousValue, zeta) => previousValue + (0, utils_1.fisherInformation)(this._theta, zeta), 0);\n        this._seMeasurement = 1 / Math.sqrt(sum);\n    }\n    /**\n     * find the next available item from an input array of stimuli based on a selection method\n     *\n     * remainingStimuli is sorted by fisher information to reduce the computation complexity for future item selection\n     * @param stimuli - an array of stimulus\n     * @param itemSelect - the item selection method\n     * @param deepCopy - default deepCopy = true\n     * @returns {nextStimulus: Stimulus,\n              remainingStimuli: Array<Stimulus>}\n     */\n    findNextItem(stimuli, itemSelect = this.itemSelect, deepCopy = true) {\n        let arr;\n        let selector = Cat.validateItemSelect(itemSelect);\n        if (deepCopy) {\n            arr = (0, lodash_1.cloneDeep)(stimuli);\n        }\n        else {\n            arr = stimuli;\n        }\n        if (this.nItems < this.nStartItems) {\n            selector = this.startSelect;\n        }\n        if (selector !== 'mfi') {\n            // for mfi, we sort the arr by fisher information in the private function to select the best item,\n            // and then sort by difficulty to return the remainingStimuli\n            arr.sort((a, b) => a.difficulty - b.difficulty);\n        }\n        if (selector === 'middle') {\n            // middle will only be used in startSelect\n            return this.selectorMiddle(arr);\n        }\n        else if (selector === 'closest') {\n            return this.selectorClosest(arr);\n        }\n        else if (selector === 'random') {\n            return this.selectorRandom(arr);\n        }\n        else {\n            return this.selectorMFI(arr);\n        }\n    }\n    selectorMFI(arr) {\n        const stimuliAddFisher = arr.map((element) => (Object.assign({ fisherInformation: (0, utils_1.fisherInformation)(this._theta, { a: 1, b: element.difficulty, c: 0.5, d: 1 }) }, element)));\n        stimuliAddFisher.sort((a, b) => b.fisherInformation - a.fisherInformation);\n        stimuliAddFisher.forEach((stimulus) => {\n            delete stimulus['fisherInformation'];\n        });\n        return {\n            nextStimulus: stimuliAddFisher[0],\n            remainingStimuli: stimuliAddFisher.slice(1).sort((a, b) => a.difficulty - b.difficulty),\n        };\n    }\n    selectorMiddle(arr) {\n        let index;\n        if (arr.length < this.nStartItems) {\n            index = Math.floor(arr.length / 2);\n        }\n        else {\n            index =\n                Math.floor(arr.length / 2) +\n                    this.randomInteger(-Math.floor(this.nStartItems / 2), Math.floor(this.nStartItems / 2));\n        }\n        const nextItem = arr[index];\n        arr.splice(index, 1);\n        return {\n            nextStimulus: nextItem,\n            remainingStimuli: arr,\n        };\n    }\n    selectorClosest(arr) {\n        //findClosest requires arr is sorted by difficulty\n        const index = (0, utils_1.findClosest)(arr, this._theta + 0.481);\n        const nextItem = arr[index];\n        arr.splice(index, 1);\n        return {\n            nextStimulus: nextItem,\n            remainingStimuli: arr,\n        };\n    }\n    selectorRandom(arr) {\n        const index = Math.floor(this._rng() * arr.length);\n        const nextItem = arr.splice(index, 1)[0];\n        return {\n            nextStimulus: nextItem,\n            remainingStimuli: arr,\n        };\n    }\n    /**\n     * return a random integer between min and max\n     * @param min - The minimum of the random number range (include)\n     * @param max - The maximum of the random number range (include)\n     * @returns {number} - random integer within the range\n     */\n    randomInteger(min, max) {\n        return Math.floor(this._rng() * (max - min + 1)) + min;\n    }\n}\nexports.Cat = Cat;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findClosest = exports.normal = exports.fisherInformation = exports.itemResponseFunction = void 0;\nconst binary_search_1 = __importDefault(require(\"binary-search\"));\n/**\n * calculates the probability that someone with a given ability level theta will answer correctly an item. Uses the 4 parameters logistic model\n * @param theta - ability estimate\n * @param zeta - item params\n * @returns {number} the probability\n */\nconst itemResponseFunction = (theta, zeta) => {\n    return zeta.c + (zeta.d - zeta.c) / (1 + Math.exp(-zeta.a * (theta - zeta.b)));\n};\nexports.itemResponseFunction = itemResponseFunction;\n/**\n * a 3PL Fisher information function\n * @param theta - ability estimate\n * @param zeta - item params\n * @returns {number} - the expected value of the observed information\n */\nconst fisherInformation = (theta, zeta) => {\n    const p = (0, exports.itemResponseFunction)(theta, zeta);\n    const q = 1 - p;\n    return Math.pow(zeta.a, 2) * (q / p) * (Math.pow(p - zeta.c, 2) / Math.pow(1 - zeta.c, 2));\n};\nexports.fisherInformation = fisherInformation;\n/**\n * return a Gaussian distribution within a given range\n * @param mean\n * @param stdDev\n * @param min\n * @param max\n * @param stepSize - the quantization (step size) of the internal table, default = 0.1\n * @returns {Array<[number, number]>} - a normal distribution\n */\nconst normal = (mean = 0, stdDev = 1, min = -4, max = 4, stepSize = 0.1) => {\n    const distribution = [];\n    for (let i = min; i <= max; i += stepSize) {\n        distribution.push([i, y(i)]);\n    }\n    return distribution;\n    function y(x) {\n        return (1 / (Math.sqrt(2 * Math.PI) * stdDev)) * Math.exp(-Math.pow(x - mean, 2) / (2 * Math.pow(stdDev, 2)));\n    }\n};\nexports.normal = normal;\n/**\n * find the item in a given array that has the difficulty closest to the target value\n *\n * @remarks\n * The input array of stimuli must be sorted by difficulty.\n *\n * @param arr Array<Stimulus> - an array of stimuli sorted by difficulty\n * @param target number - ability estimate\n * @returns {number} the index of arr\n */\nconst findClosest = (arr, target) => {\n    // Let's consider the edge cases first\n    if (target <= arr[0].difficulty) {\n        return 0;\n    }\n    else if (target >= arr[arr.length - 1].difficulty) {\n        return arr.length - 1;\n    }\n    const comparitor = (element, needle) => {\n        return element.difficulty - needle;\n    };\n    const indexOfTarget = (0, binary_search_1.default)(arr, target, comparitor);\n    if (indexOfTarget >= 0) {\n        // `bs` returns a positive integer index if it found an exact match.\n        return indexOfTarget;\n    }\n    else {\n        // If the value is not in the array, then -(index + 1) is returned, where\n        // index is where the value should be inserted into the array to maintain\n        // sorted order. Thus, the target is between the values at\n        const lowIndex = -2 - indexOfTarget;\n        const highIndex = -1 - indexOfTarget;\n        // So we simply compare the differences between the target and the high and\n        // low values, respectively\n        const lowDiff = Math.abs(arr[lowIndex].difficulty - target);\n        const highDiff = Math.abs(arr[highIndex].difficulty - target);\n        if (lowDiff < highDiff) {\n            return lowIndex;\n        }\n        else {\n            return highIndex;\n        }\n    }\n};\nexports.findClosest = findClosest;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fetchEmailAuthMethods = exports.isUsernameAvailable = exports.isEmailAvailable = exports.isRoarAuthEmail = exports.roarEmail = void 0;\nconst auth_1 = require(\"firebase/auth\");\n/**\n * Return a unique and reproducible email address for the user.\n *\n * @function\n * @param {string} roarPid - The ROAR user PID\n * @returns {string} - The email address\n */\nconst roarEmail = (roarPid) => {\n    return `${roarPid}@roar-auth.com`;\n};\nexports.roarEmail = roarEmail;\nconst isRoarAuthEmail = (email) => {\n    return email.split('@')[1] === 'roar-auth.com';\n};\nexports.isRoarAuthEmail = isRoarAuthEmail;\nconst isEmailAvailable = (auth, email) => __awaiter(void 0, void 0, void 0, function* () {\n    return (0, auth_1.fetchSignInMethodsForEmail)(auth, email).then((signInMethods) => {\n        return signInMethods.length === 0;\n    });\n});\nexports.isEmailAvailable = isEmailAvailable;\nconst isUsernameAvailable = (auth, username) => __awaiter(void 0, void 0, void 0, function* () {\n    return (0, exports.isEmailAvailable)(auth, (0, exports.roarEmail)(username));\n});\nexports.isUsernameAvailable = isUsernameAvailable;\nconst fetchEmailAuthMethods = (auth, email) => __awaiter(void 0, void 0, void 0, function* () {\n    return (0, auth_1.fetchSignInMethodsForEmail)(auth, email).then((signInMethods) => {\n        const methods = [];\n        if (signInMethods.indexOf(auth_1.EmailAuthProvider.EMAIL_PASSWORD_SIGN_IN_METHOD) != -1) {\n            // User can sign in with email/password.\n            methods.push('password');\n        }\n        if (signInMethods.indexOf(auth_1.EmailAuthProvider.EMAIL_LINK_SIGN_IN_METHOD) != -1) {\n            // User can sign in with email/link.\n            methods.push('link');\n        }\n        return methods;\n    });\n});\nexports.fetchEmailAuthMethods = fetchEmailAuthMethods;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RoarAppkit = void 0;\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nconst auth_1 = require(\"firebase/auth\");\nconst firestore_1 = require(\"firebase/firestore\");\nconst run_1 = require(\"./run\");\nconst task_1 = require(\"./task\");\nconst user_1 = require(\"./user\");\nconst util_1 = require(\"../util\");\n/**\n * The RoarAppkit class is the main entry point for ROAR apps using the ROAR\n * Firestore API.  It represents multiple linked Firestore documents and\n * provides methods for interacting with them.\n */\nclass RoarAppkit {\n    /**\n     * Create a RoarAppkit.\n     *\n     * @param {IAppkitConstructorParams} input\n     * @param {IUserInfo} input.userInfo - The user input object\n     * @param {ITaskVariantInfo} input.taskInfo - The task input object\n     * @param {IOrgLists} input.assigningOrgs - The IDs of the orgs to which this run belongs\n     * @param {string} input.assignmentId - The ID of the assignment this run belongs to\n     * @param {string} input.runId - The ID of the run. If undefined, a new run will be created.\n     */\n    constructor({ firebaseProject, firebaseConfig, userInfo, taskInfo, assigningOrgs, assignmentId, runId, }) {\n        if (!firebaseProject && !firebaseConfig) {\n            throw new Error('You must provide either a firebaseProjectKit or firebaseConfig');\n        }\n        if (firebaseProject && firebaseConfig) {\n            throw new Error('You must provide either a firebaseProjectKit or firebaseConfig, not both');\n        }\n        this.firebaseConfig = firebaseConfig;\n        this.firebaseProject = firebaseProject;\n        this._userInfo = userInfo;\n        this._taskInfo = taskInfo;\n        this._assigningOrgs = assigningOrgs;\n        this._assignmentId = assignmentId;\n        this._runId = runId;\n        this._authenticated = false;\n        this._initialized = false;\n        this._started = false;\n    }\n    _init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.firebaseConfig) {\n                this.firebaseProject = yield (0, util_1.initializeFirebaseProject)(this.firebaseConfig, 'assessmentApp');\n            }\n            (0, auth_1.onAuthStateChanged)(this.firebaseProject.auth, (user) => {\n                this._authenticated = Boolean(user);\n            });\n            this.user = new user_1.RoarAppUser(Object.assign(Object.assign({}, this._userInfo), { db: this.firebaseProject.db }));\n            this.task = new task_1.RoarTaskVariant(Object.assign(Object.assign({}, this._taskInfo), { db: this.firebaseProject.db }));\n            this.run = new run_1.RoarRun({\n                user: this.user,\n                task: this.task,\n                assigningOrgs: this._assigningOrgs,\n                assignmentId: this._assignmentId,\n                runId: this._runId,\n            });\n            yield this.user.init();\n            this._initialized = true;\n        });\n    }\n    get authenticated() {\n        return this._authenticated;\n    }\n    /**\n     * Update the user's data (both locally and in Firestore).\n     * @param {object} input\n     * @param {string[]} input.tasks - The tasks to be added to the user doc\n     * @param {string[]} input.variants - The variants to be added to the user doc\n     * @param {string} input.assessmentPid - The assessment PID of the user\n     * @param {*} input.userMetadata - Any additional user metadata\n     * @method\n     * @async\n     */\n    updateUser(_a) {\n        var { tasks, variants, assessmentPid } = _a, userMetadata = __rest(_a, [\"tasks\", \"variants\", \"assessmentPid\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._initialized) {\n                yield this._init();\n            }\n            if (!this.authenticated) {\n                throw new Error('User must be authenticated to update their own data.');\n            }\n            return this.user.updateUser(Object.assign({ tasks, variants, assessmentPid }, userMetadata));\n        });\n    }\n    /**\n     * Start the ROAR run. Push the task and run info to Firestore.\n     * Call this method before starting the jsPsych experiment.\n     * @method\n     * @async\n     */\n    startRun(additionalRunMetadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._initialized) {\n                yield this._init();\n            }\n            if (!this.authenticated) {\n                throw new Error('User must be authenticated to start a run.');\n            }\n            return this.run.startRun(additionalRunMetadata).then(() => (this._started = true));\n        });\n    }\n    /**\n     * Update the ROAR task's game parameters.\n     * This must be called after the startRun() method.\n     *\n     * @method\n     * @async\n     */\n    updateTaskParams(newParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._started) {\n                const oldVariantId = this.task.variantId;\n                return this.task.updateTaskParams(newParams)\n                    .then(() => {\n                    return (0, firestore_1.updateDoc)(this.user.userRef, { variants: (0, firestore_1.arrayRemove)(oldVariantId) });\n                })\n                    .then(() => {\n                    return (0, firestore_1.updateDoc)(this.user.userRef, { variants: (0, firestore_1.arrayUnion)(this.task.variantId) });\n                })\n                    .then(() => {\n                    return (0, firestore_1.updateDoc)(this.run.runRef, { variantId: this.task.variantId });\n                });\n            }\n            else {\n                throw new Error('This run has not started. Use the startRun method first.');\n            }\n        });\n    }\n    /**\n     * Finish the ROAR run by marking it as finished in Firestore.\n     * Call this method after the jsPsych experiment finishes. For example:\n     *\n     * ```javascript\n     * jsPsych.init({\n     *   timeline: exp,\n     *   on_finish: function(data) {\n     *     firekit.finishRun();\n     *   }\n     * });\n     * ```\n     * @method\n     * @async\n     */\n    finishRun() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._started) {\n                return this.run.finishRun();\n            }\n            else {\n                throw new Error('This run has not started. Use the startRun method first.');\n            }\n        });\n    }\n    /**\n     * Abort the ROAR run, preventing any further writes to Firestore.\n     * @method\n     */\n    abortRun() {\n        if (this._started) {\n            this.run.abortRun();\n        }\n        else {\n            throw new Error('This run has not started. Use the startRun method first.');\n        }\n    }\n    /**\n     * Add new trial data to this run on Firestore.\n     *\n     * ROAR expects certain data to be added to each trial:\n     * - assessment_stage: string, either practice_response or test_response\n     * - correct: boolean, whether the correct answer was correct\n     * - subtask: string (optional), the name of the subtask\n     * - thetaEstimate: number (optional), the ability estimate for adaptive assessments\n     * - thetaSE: number (optional), the standard error of the ability estimate for adaptive assessments\n     *\n     * This method can be added to individual jsPsych trials by calling it from\n     * the `on_finish` function, like so:\n     *\n     * ```javascript\n     * var trial = {\n     *   type: 'image-keyboard-response',\n     *   stimulus: 'imgA.png',\n     *   on_finish: function(data) {\n     *     firekit.addTrialData(data);\n     *   }\n     * };\n     * ```\n     *\n     * Or you can call it from all trials in a jsPsych\n     * timeline by calling it from the `on_data_update` callback. In the latter\n     * case, you can avoid saving extraneous trials by conditionally calling\n     * this method based on the data. For example:\n     *\n     * ```javascript\n     * const timeline = [\n     *   // A fixation trial; don't save to Firestore\n     *   {\n     *     type: htmlKeyboardResponse,\n     *     stimulus: '<div style=\"font-size:60px;\">+</div>',\n     *     choices: \"NO_KEYS\",\n     *     trial_duration: 500,\n     *   },\n     *   // A stimulus and response trial; save to Firestore\n     *   {\n     *     type: imageKeyboardResponse,\n     *     stimulus: 'imgA.png',\n     *     data: { save: true },\n     *   }\n     * ]\n     * jsPsych.init({\n     *   timeline: timeline,\n     *   on_data_update: function(data) {\n     *     if (data.save) {\n     *       firekit.addTrialData(data);\n     *     }\n     *   }\n     * });\n     * ```\n     *\n     * @method\n     * @async\n     * @param {*} trialData - An object containing trial data.\n     */\n    writeTrial(trialData, computedScoreCallback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._started) {\n                return this.run.writeTrial(trialData, computedScoreCallback);\n            }\n            else {\n                throw new Error('This run has not started. Use the startRun method first.');\n            }\n        });\n    }\n}\nexports.RoarAppkit = RoarAppkit;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RoarRun = exports.convertTrialToFirestore = void 0;\nconst firestore_1 = require(\"firebase/firestore\");\nconst intersection_1 = __importDefault(require(\"lodash/intersection\"));\nconst mapValues_1 = __importDefault(require(\"lodash/mapValues\"));\nconst pick_1 = __importDefault(require(\"lodash/pick\"));\nconst set_1 = __importDefault(require(\"lodash/set\"));\nconst dot_object_1 = __importDefault(require(\"dot-object\"));\nconst util_1 = require(\"../util\");\n/**\n * Convert a trial data to allow storage on Cloud Firestore.\n *\n * This function leaves all other trial data intact but converts\n * any URL object to a string.\n *\n * @function\n * @param {Object} trialData - Trial data to convert\n * @returns {Object} Converted trial data\n */\nconst convertTrialToFirestore = (trialData) => {\n    return (0, util_1.removeUndefined)(Object.fromEntries(Object.entries(trialData).map(([key, value]) => {\n        if (value instanceof URL) {\n            return [key, value.toString()];\n        }\n        else if (typeof value === 'object' && value !== null) {\n            return [key, (0, exports.convertTrialToFirestore)(value)];\n        }\n        else {\n            return [key, value];\n        }\n    })));\n};\nexports.convertTrialToFirestore = convertTrialToFirestore;\nconst requiredTrialFields = ['assessment_stage', 'correct'];\nconst castToTheta = (value) => {\n    if (value === undefined || value === null) {\n        return null;\n    }\n    return value;\n};\n/**\n * Class representing a ROAR run.\n *\n * A run is a globally unique collection of successive trials that constitute\n * one user \"running\" through a single assessment one time.\n */\nclass RoarRun {\n    /** Create a ROAR run\n     * @param {IRunInput} input\n     * @param {RoarAppUser} input.user - The user running the task\n     * @param {RoarTaskVariant} input.task - The task variant being run\n     * @param {IOrgLists} input.assigningOrgs - The IDs of the orgs to which this run belongs\n     * @param {string} input.runId = The ID of the run. If undefined, a new run will be created.\n     */\n    constructor({ user, task, assigningOrgs, assignmentId, runId }) {\n        this.user = user;\n        this.task = task;\n        this.assigningOrgs = assigningOrgs;\n        this.assignmentId = assignmentId;\n        if (runId) {\n            this.runRef = (0, firestore_1.doc)(this.user.userRef, 'runs', runId);\n        }\n        else {\n            this.runRef = (0, firestore_1.doc)((0, firestore_1.collection)(this.user.userRef, 'runs'));\n        }\n        if (!this.task.taskRef) {\n            throw new Error('Task refs not set. Please use the task.setRefs method first.');\n        }\n        this.started = false;\n        this.completed = false;\n        this.aborted = false;\n        this.scores = {\n            raw: {},\n            computed: {},\n        };\n    }\n    /**\n     * Create a new run on Firestore\n     * @method\n     * @async\n     */\n    startRun(additionalRunMetadata) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.user.checkUserExists();\n            if (!this.task.variantRef) {\n                yield this.task.toFirestore();\n            }\n            if (this.assigningOrgs) {\n                const userDocSnap = yield (0, firestore_1.getDoc)(this.user.userRef);\n                if (userDocSnap.exists()) {\n                    const userDocData = userDocSnap.data();\n                    const userOrgs = (0, pick_1.default)(userDocData, Object.keys(this.assigningOrgs));\n                    for (const orgName of Object.keys(userOrgs)) {\n                        this.assigningOrgs[orgName] = (0, intersection_1.default)((_a = userOrgs[orgName]) === null || _a === void 0 ? void 0 : _a.current, this.assigningOrgs[orgName]);\n                    }\n                }\n                else {\n                    // This should never happen because of ``this.user.checkUserExists`` above. But just in case:\n                    throw new Error('User does not exist');\n                }\n            }\n            const runData = Object.assign(Object.assign({}, additionalRunMetadata), { id: this.runRef.id, assignmentId: (_b = this.assignmentId) !== null && _b !== void 0 ? _b : null, assigningOrgs: (_c = this.assigningOrgs) !== null && _c !== void 0 ? _c : null, taskId: this.task.taskId, variantId: this.task.variantId, completed: false, timeStarted: (0, firestore_1.serverTimestamp)(), timeFinished: null });\n            yield (0, firestore_1.setDoc)(this.runRef, (0, util_1.removeUndefined)(runData))\n                .then(() => {\n                return (0, firestore_1.updateDoc)(this.user.userRef, {\n                    tasks: (0, firestore_1.arrayUnion)(this.task.taskId),\n                    variants: (0, firestore_1.arrayUnion)(this.task.variantId),\n                });\n            })\n                .then(() => this.user.updateFirestoreTimestamp());\n            this.started = true;\n        });\n    }\n    /**\n     * Mark this run as complete on Firestore\n     * @method\n     * @async\n     */\n    finishRun() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.started) {\n                throw new Error('Run has not been started yet. Use the startRun method first.');\n            }\n            if (!this.aborted) {\n                return (0, firestore_1.updateDoc)(this.runRef, {\n                    completed: true,\n                    timeFinished: (0, firestore_1.serverTimestamp)(),\n                })\n                    .then(() => this.user.updateFirestoreTimestamp())\n                    .then(() => (this.completed = true));\n            }\n        });\n    }\n    /**\n     * Abort this run, preventing it from completing\n     * @method\n     */\n    abortRun() {\n        if (!this.started) {\n            throw new Error('Run has not been started yet. Use the startRun method first.');\n        }\n        this.aborted = true;\n    }\n    /**\n     * Add a new trial to this run on Firestore\n     * @method\n     * @async\n     * @param {*} trialData - An object containing trial data.\n     */\n    writeTrial(trialData, computedScoreCallback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.started) {\n                throw new Error('Run has not been started yet. Use the startRun method first.');\n            }\n            if (!this.aborted) {\n                // Check that the trial has all of the required reserved keys\n                if (!requiredTrialFields.every((key) => key in trialData)) {\n                    throw new Error('All ROAR trials saved to Firestore must have the following reserved keys: ' +\n                        `${requiredTrialFields}.` +\n                        'The current trial is missing the following required keys: ' +\n                        `${requiredTrialFields.filter((key) => !(key in trialData))}.`);\n                }\n                const trialRef = (0, firestore_1.doc)((0, firestore_1.collection)(this.runRef, 'trials'));\n                return (0, firestore_1.setDoc)(trialRef, Object.assign(Object.assign({}, (0, exports.convertTrialToFirestore)(trialData)), { serverTimestamp: (0, firestore_1.serverTimestamp)() }))\n                    .then(() => __awaiter(this, void 0, void 0, function* () {\n                    var _a, _b, _c, _d, _e, _f;\n                    // Only update scores if the trial was a test or a practice response.\n                    if (trialData.assessment_stage === 'test_response' || trialData.assessment_stage === 'practice_response') {\n                        // Here we update the scores for this run. We create scores for each subtask in the task.\n                        // E.g., ROAR-PA has three subtasks: FSM, LSM, and DEL. Each subtask has its own score.\n                        // Conversely, ROAR-SWR has no subtasks. It's scores are stored in the 'total' score field.\n                        // If no subtask is specified, the scores for the 'total' subtask will be updated.\n                        const defaultSubtask = 'composite';\n                        const subtask = (trialData.subtask || defaultSubtask);\n                        const stage = trialData.assessment_stage.split('_')[0];\n                        let scoreUpdate = {};\n                        if (subtask in this.scores.raw) {\n                            // Then this subtask has already been added to this run.\n                            // Simply update the block's scores.\n                            this.scores.raw[subtask][stage] = {\n                                thetaEstimate: castToTheta(trialData.thetaEstimate),\n                                thetaSE: castToTheta(trialData.thetaSE),\n                                numAttempted: (((_a = this.scores.raw[subtask][stage]) === null || _a === void 0 ? void 0 : _a.numAttempted) || 0) + 1,\n                                // For the next two, use the unary + operator to convert the boolean value to 0 or 1.\n                                numCorrect: (((_b = this.scores.raw[subtask][stage]) === null || _b === void 0 ? void 0 : _b.numCorrect) || 0) + +Boolean(trialData.correct),\n                                numIncorrect: (((_c = this.scores.raw[subtask][stage]) === null || _c === void 0 ? void 0 : _c.numIncorrect) || 0) + +!trialData.correct,\n                            };\n                            // And populate the score update for Firestore.\n                            scoreUpdate = {\n                                [`scores.raw.${subtask}.${stage}.thetaEstimate`]: castToTheta(trialData.thetaEstimate),\n                                [`scores.raw.${subtask}.${stage}.thetaSE`]: castToTheta(trialData.thetaSE),\n                                [`scores.raw.${subtask}.${stage}.numAttempted`]: (0, firestore_1.increment)(1),\n                                [`scores.raw.${subtask}.${stage}.numCorrect`]: trialData.correct ? (0, firestore_1.increment)(1) : undefined,\n                                [`scores.raw.${subtask}.${stage}.numIncorrect`]: trialData.correct ? undefined : (0, firestore_1.increment)(1),\n                            };\n                            if (subtask !== defaultSubtask) {\n                                this.scores.raw[defaultSubtask][stage] = {\n                                    numAttempted: (((_d = this.scores.raw[defaultSubtask][stage]) === null || _d === void 0 ? void 0 : _d.numAttempted) || 0) + 1,\n                                    // For the next two, use the unary + operator to convert the boolean value to 0 or 1.\n                                    numCorrect: (((_e = this.scores.raw[defaultSubtask][stage]) === null || _e === void 0 ? void 0 : _e.numCorrect) || 0) + +Boolean(trialData.correct),\n                                    numIncorrect: (((_f = this.scores.raw[defaultSubtask][stage]) === null || _f === void 0 ? void 0 : _f.numIncorrect) || 0) + +!trialData.correct,\n                                    thetaEstimate: null,\n                                    thetaSE: null,\n                                };\n                                scoreUpdate = Object.assign(Object.assign({}, scoreUpdate), { [`scores.raw.${defaultSubtask}.${stage}.numAttempted`]: (0, firestore_1.increment)(1), [`scores.raw.${defaultSubtask}.${stage}.numCorrect`]: trialData.correct ? (0, firestore_1.increment)(1) : undefined, [`scores.raw.${defaultSubtask}.${stage}.numIncorrect`]: trialData.correct ? undefined : (0, firestore_1.increment)(1) });\n                            }\n                        }\n                        else {\n                            // This is the first time this subtask has been added to this run.\n                            // Initialize the subtask scores.\n                            (0, set_1.default)(this.scores.raw, [subtask, stage], {\n                                thetaEstimate: castToTheta(trialData.thetaEstimate),\n                                thetaSE: castToTheta(trialData.thetaSE),\n                                numAttempted: 1,\n                                numCorrect: trialData.correct ? 1 : 0,\n                                numIncorrect: trialData.correct ? 0 : 1,\n                            });\n                            // And populate the score update for Firestore.\n                            scoreUpdate = {\n                                [`scores.raw.${subtask}.${stage}.thetaEstimate`]: castToTheta(trialData.thetaEstimate),\n                                [`scores.raw.${subtask}.${stage}.thetaSE`]: castToTheta(trialData.thetaSE),\n                                [`scores.raw.${subtask}.${stage}.numAttempted`]: 1,\n                                [`scores.raw.${subtask}.${stage}.numCorrect`]: trialData.correct ? 1 : 0,\n                                [`scores.raw.${subtask}.${stage}.numIncorrect`]: trialData.correct ? 0 : 1,\n                            };\n                            if (subtask !== defaultSubtask) {\n                                (0, set_1.default)(this.scores.raw, [defaultSubtask, stage], {\n                                    numAttempted: 1,\n                                    numCorrect: trialData.correct ? 1 : 0,\n                                    numIncorrect: trialData.correct ? 0 : 1,\n                                    thetaEstimate: null,\n                                    thetaSE: null,\n                                });\n                                scoreUpdate = Object.assign(Object.assign({}, scoreUpdate), { [`scores.raw.${defaultSubtask}.${stage}.numAttempted`]: (0, firestore_1.increment)(1), [`scores.raw.${defaultSubtask}.${stage}.numCorrect`]: trialData.correct ? (0, firestore_1.increment)(1) : undefined, [`scores.raw.${defaultSubtask}.${stage}.numIncorrect`]: trialData.correct ? undefined : (0, firestore_1.increment)(1) });\n                            }\n                        }\n                        if (computedScoreCallback) {\n                            // Use the user-provided callback to compute the computed scores.\n                            this.scores.computed = yield computedScoreCallback(this.scores.raw);\n                        }\n                        else {\n                            // If no computedScoreCallback is provided, we default to\n                            // numCorrect - numIncorrect for each subtask.\n                            this.scores.computed = (0, mapValues_1.default)(this.scores.raw, (subtaskScores) => {\n                                var _a, _b;\n                                const numCorrect = ((_a = subtaskScores.test) === null || _a === void 0 ? void 0 : _a.numCorrect) || 0;\n                                const numIncorrect = ((_b = subtaskScores.test) === null || _b === void 0 ? void 0 : _b.numIncorrect) || 0;\n                                return numCorrect - numIncorrect;\n                            });\n                        }\n                        // And use dot-object to convert the computed scores into dotted-key/value pairs.\n                        // First nest the computed scores into `scores.computed` so that they get updated\n                        // in the correct location.\n                        const fullUpdatePath = {\n                            scores: {\n                                computed: this.scores.computed,\n                            },\n                        };\n                        scoreUpdate = Object.assign(Object.assign({}, scoreUpdate), dot_object_1.default.dot(fullUpdatePath));\n                        return (0, firestore_1.updateDoc)(this.runRef, (0, util_1.removeUndefined)(scoreUpdate)).catch((error) => {\n                            // Catch the \"Unsupported field value: undefined\" error and\n                            // provide a more helpful error message to the ROAR app developer.\n                            if (error.message.toLowerCase().includes('unsupported field value: undefined')) {\n                                throw new Error('The computed or normed scores that you provided contained an undefined value. ' +\n                                    'Firestore does not support storing undefined values. ' +\n                                    'Please remove this value or convert it to ``null``.');\n                            }\n                            throw error;\n                        });\n                    }\n                }))\n                    .then(() => {\n                    this.user.updateFirestoreTimestamp();\n                });\n            }\n        });\n    }\n}\nexports.RoarRun = RoarRun;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RoarTaskVariant = void 0;\nconst firestore_1 = require(\"firebase/firestore\");\nconst util_1 = require(\"../util\");\n/**\n * Class representing a ROAR task.\n */\nclass RoarTaskVariant {\n    /** Create a ROAR task\n     * @param {ITaskVariantInput} input\n     * @param {Firestore} input.db - The assessment Firestore instance to which this task'data will be written\n     * @param {string} input.taskId - The ID of the parent task. Should be a short initialism, e.g. \"swr\" or \"sre\"\n     * @param {string} input.taskName - The name of the parent task\n     * @param {string} input.taskDescription - The description of the task\n     * @param {string} input.variantName - The name of the task variant\n     * @param {string} input.variantDescription - The description of the variant\n     * @param {object} input.variantParams - The parameters of the task variant\n     */\n    constructor({ db, taskId, taskName, taskDescription, taskImage, taskURL, external, variantName, variantDescription, variantParams = {}, }) {\n        this.db = db;\n        this.taskId = taskId;\n        this.taskName = taskName;\n        this.taskDescription = taskDescription;\n        this.taskImage = taskImage;\n        this.taskURL = taskURL;\n        this.external = external;\n        this.variantName = variantName;\n        this.variantDescription = variantDescription;\n        this.variantParams = variantParams;\n        this.taskRef = (0, firestore_1.doc)(this.db, 'tasks', this.taskId);\n        this.variantsCollectionRef = (0, firestore_1.collection)(this.taskRef, 'variants');\n        this.variantId = undefined;\n        this.variantRef = undefined;\n        this._firestoreUpdateAllowed = false;\n    }\n    /**\n     * Push the trial and trial variant to Firestore\n     * @method\n     * @async\n     */\n    toFirestore() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Push/update the task using the user provided task ID\n            const taskData = {\n                name: this.taskName,\n                description: this.taskDescription,\n                image: this.taskImage,\n                taskURL: this.taskURL,\n                external: this.external,\n                lastUpdated: (0, firestore_1.serverTimestamp)(),\n            };\n            yield (0, firestore_1.setDoc)(this.taskRef, (0, util_1.removeUndefined)(taskData), { merge: true });\n            // Check to see if variant exists already by querying for a match on the params.\n            const q = (0, firestore_1.query)(this.variantsCollectionRef, (0, firestore_1.where)('params', '==', this.variantParams), (0, firestore_1.orderBy)('lastUpdated', 'desc'), (0, firestore_1.limit)(1));\n            const querySnapshot = yield (0, firestore_1.getDocs)(q);\n            // If this query snapshot yielded results, then we can use it and\n            // update the timestamp\n            querySnapshot.forEach((docRef) => {\n                this.variantId = docRef.id;\n                this.variantRef = (0, firestore_1.doc)(this.variantsCollectionRef, this.variantId);\n                (0, firestore_1.updateDoc)(this.variantRef, (0, util_1.removeUndefined)({\n                    description: this.variantDescription,\n                    lastUpdated: (0, firestore_1.serverTimestamp)(),\n                }));\n            });\n            const variantData = {\n                name: this.variantName,\n                description: this.variantDescription,\n                taskURL: this.taskURL,\n                external: this.external,\n                params: this.variantParams,\n                lastUpdated: (0, firestore_1.serverTimestamp)(),\n            };\n            // no match, ask Firestore to generate a new document id for the variant\n            // and push it to Firestore.\n            if (!this.variantId || this._createNewVariant) {\n                this.variantRef = (0, firestore_1.doc)(this.variantsCollectionRef);\n                yield (0, firestore_1.setDoc)(this.variantRef, (0, util_1.removeUndefined)(variantData));\n                this.variantId = this.variantRef.id;\n            }\n            else if (this._firestoreUpdateAllowed) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                yield (0, firestore_1.updateDoc)(this.variantRef, (0, util_1.removeUndefined)(variantData));\n            }\n        });\n    }\n    /**\n     * Update variant params in Firestore\n     * @method\n     * @param {object} newParams - The parameters of the task variant\n     * @async\n     */\n    updateTaskParams(newParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.variantRef === undefined) {\n                throw new Error('Cannot update task params before writing task to Firestore. Please call `.toFirestore()` first.');\n            }\n            const oldParams = (0, util_1.replaceValues)(this.variantParams);\n            const cleanParams = (0, util_1.replaceValues)(newParams);\n            // Only allow updating the task params if we are updating previously null values.\n            const { keysAdded, merged } = (0, util_1.mergeGameParams)(oldParams, cleanParams);\n            this.variantParams = merged;\n            this._firestoreUpdateAllowed = true;\n            this._createNewVariant = keysAdded;\n            yield this.toFirestore().then(() => {\n                this._firestoreUpdateAllowed = false;\n                this._createNewVariant = undefined;\n            });\n        });\n    }\n}\nexports.RoarTaskVariant = RoarTaskVariant;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RoarAppUser = void 0;\nconst firestore_1 = require(\"firebase/firestore\");\nconst extend_1 = __importDefault(require(\"lodash/extend\"));\nconst interfaces_1 = require(\"../interfaces\");\nconst util_1 = require(\"../util\");\n/** Class representing a ROAR user */\nclass RoarAppUser {\n    /** Create a ROAR user\n     * @param {object} input\n     * @param {Firestore} input.db - The assessment Firestore instance to which this user's data will be written\n     * @param {string} input.roarUid - The ROAR ID of the user\n     * @param {string} input.assessmentUid - The assessment firebase UID of the user\n     * @param {string} input.assessmentPid - The assessment PID of the user\n     * @param {string} input.userType - The user type. Must be either 'admin', 'educator', 'student', 'caregiver', 'guest', or 'researcher.'\n     * @param {object} input.userMetadata - An object containing additional user metadata\n     */\n    constructor({ db, roarUid, assessmentUid, assessmentPid, userType = interfaces_1.UserType.guest, userMetadata = {} }) {\n        const allowedUserCategories = Object.values(interfaces_1.UserType);\n        if (!allowedUserCategories.includes(userType)) {\n            throw new Error(`User category must be one of ${allowedUserCategories.join(', ')}.`);\n        }\n        if (roarUid === undefined && userType !== interfaces_1.UserType.guest) {\n            throw new Error('All non-guest ROAR users must be created with a ROAR UID.');\n        }\n        if (userType === interfaces_1.UserType.guest && roarUid !== undefined) {\n            throw new Error('Guest ROAR users cannot have a ROAR UID.');\n        }\n        if (userType !== interfaces_1.UserType.guest && assessmentPid === undefined) {\n            throw new Error('All non-guest ROAR users must have an assessment PID on instantiation.');\n        }\n        this.db = db;\n        this.roarUid = roarUid;\n        this.assessmentPid = assessmentPid;\n        this.assessmentUid = assessmentUid;\n        this.userType = userType;\n        this.userMetadata = userMetadata;\n        if (userType === interfaces_1.UserType.guest) {\n            this.userRef = (0, firestore_1.doc)(this.db, 'guests', this.assessmentUid);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.userRef = (0, firestore_1.doc)(this.db, 'users', this.roarUid);\n        }\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (0, firestore_1.getDoc)(this.userRef).then((docSnap) => {\n                this.onFirestore = docSnap.exists();\n                if (this.onFirestore) {\n                    // If so, retrieve their data.\n                    this.userData = docSnap.data();\n                }\n                else {\n                    // Otherwise allow them to create their own data ONLY if they are a guest.\n                    this._setUserData();\n                }\n            });\n        });\n    }\n    _setUserData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.userType !== interfaces_1.UserType.guest) {\n                throw new Error('Cannot set user data on a non-guest ROAR user.');\n            }\n            this.userData = (0, util_1.removeUndefined)(Object.assign(Object.assign({}, this.userMetadata), { assessmentPid: this.assessmentPid, assessmentUid: this.assessmentUid, userType: this.userType }));\n            return (0, firestore_1.setDoc)(this.userRef, Object.assign(Object.assign({}, this.userData), { created: (0, firestore_1.serverTimestamp)() })).then(() => {\n                this.onFirestore = true;\n            });\n        });\n    }\n    checkUserExists() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.onFirestore) {\n                yield this.init();\n            }\n            if (!this.onFirestore) {\n                throw new Error('This non-guest user is not in Firestore.');\n            }\n        });\n    }\n    /**\n     * Update the user's data (both locally and in Firestore)\n     * @param {object} input\n     * @param {string[]} input.tasks - The tasks to be added to the user doc\n     * @param {string[]} input.variants - The variants to be added to the user doc\n     * @param {string} input.assessmentPid - The assessment PID of the user\n     * @param {*} input.userMetadata - Any additional user metadata\n     * @method\n     * @async\n     */\n    updateUser(_a) {\n        var { tasks, variants, assessmentPid } = _a, userMetadata = __rest(_a, [\"tasks\", \"variants\", \"assessmentPid\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            this.checkUserExists();\n            let userData = {\n                lastUpdated: (0, firestore_1.serverTimestamp)(),\n            };\n            if (tasks)\n                userData.tasks = (0, firestore_1.arrayUnion)(...tasks);\n            if (variants)\n                userData.variants = (0, firestore_1.arrayUnion)(...variants);\n            if (this.userType === interfaces_1.UserType.guest) {\n                if (assessmentPid)\n                    userData.assessmentPid = assessmentPid;\n                userData = Object.assign(Object.assign({}, userMetadata), userData);\n            }\n            this.userData = (0, extend_1.default)(this.userData, Object.assign(Object.assign({}, userMetadata), { tasks,\n                variants,\n                assessmentPid }));\n            return (0, firestore_1.updateDoc)(this.userRef, (0, util_1.removeUndefined)(userData));\n        });\n    }\n    /**\n     * Update the user's \"lastUpdated\" timestamp\n     * @method\n     * @async\n     */\n    updateFirestoreTimestamp() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.checkUserExists();\n            return (0, firestore_1.updateDoc)(this.userRef, {\n                lastUpdated: (0, firestore_1.serverTimestamp)(),\n            });\n        });\n    }\n}\nexports.RoarAppUser = RoarAppUser;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RoarFirekit = void 0;\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nconst filter_1 = __importDefault(require(\"lodash/filter\"));\nconst fromPairs_1 = __importDefault(require(\"lodash/fromPairs\"));\nconst get_1 = __importDefault(require(\"lodash/get\"));\nconst set_1 = __importDefault(require(\"lodash/set\"));\nconst isEmpty_1 = __importDefault(require(\"lodash/isEmpty\"));\nconst keys_1 = __importDefault(require(\"lodash/keys\"));\nconst map_1 = __importDefault(require(\"lodash/map\"));\nconst nth_1 = __importDefault(require(\"lodash/nth\"));\nconst union_1 = __importDefault(require(\"lodash/union\"));\nconst auth_1 = require(\"firebase/auth\");\nconst firestore_1 = require(\"firebase/firestore\");\nconst functions_1 = require(\"firebase/functions\");\nconst auth_2 = require(\"../auth\");\nconst util_1 = require(\"./util\");\nconst interfaces_1 = require(\"./interfaces\");\nconst appkit_1 = require(\"./app/appkit\");\nconst query_assessment_1 = require(\"./query-assessment\");\nconst query_admin_1 = require(\"./query-admin\");\nconst task_1 = require(\"./app/task\");\nvar AuthProviderType;\n(function (AuthProviderType) {\n    AuthProviderType[\"CLEVER\"] = \"clever\";\n    AuthProviderType[\"CLASSLINK\"] = \"classlink\";\n    AuthProviderType[\"GOOGLE\"] = \"google\";\n    AuthProviderType[\"EMAIL\"] = \"email\";\n    AuthProviderType[\"USERNAME\"] = \"username\";\n})(AuthProviderType || (AuthProviderType = {}));\nconst RoarProviderId = Object.assign(Object.assign({}, auth_1.ProviderId), { CLEVER: 'oidc.clever', ROAR_ADMIN_PROJECT: 'oidc.gse-roar-admin' });\nclass RoarFirekit {\n    /**\n     * Create a RoarFirekit. This expects an object with keys `roarConfig`,\n     * where `roarConfig` is a [[IRoarConfigData]] object.\n     * @param {{roarConfig: IRoarConfigData }=} destructuredParam\n     *     roarConfig: The ROAR firebase config object\n     */\n    constructor({ roarConfig, authPersistence = util_1.AuthPersistence.session, markRawConfig = {}, listenerUpdateCallback, }) {\n        this.roarConfig = roarConfig;\n        this._authPersistence = authPersistence;\n        this._markRawConfig = markRawConfig;\n        this._initialized = false;\n        this._idTokens = {};\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        this.listenerUpdateCallback = listenerUpdateCallback !== null && listenerUpdateCallback !== void 0 ? listenerUpdateCallback : (() => { });\n    }\n    _scrubAuthProperties() {\n        this.userData = undefined;\n        this.roarAppUserInfo = undefined;\n        this._adminOrgs = undefined;\n        this._superAdmin = undefined;\n        this.currentAssignments = undefined;\n        this.oAuthAccessToken = undefined;\n        this._adminClaimsListener = undefined;\n        this._appClaimsListener = undefined;\n        this._userDocListener = undefined;\n        this._adminTokenListener = undefined;\n        this._appTokenListener = undefined;\n        this._idTokens = {};\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.app = yield (0, util_1.initializeFirebaseProject)(this.roarConfig.app, 'app', this._authPersistence, this._markRawConfig);\n            this.admin = yield (0, util_1.initializeFirebaseProject)(this.roarConfig.admin, 'admin', this._authPersistence, this._markRawConfig);\n            this._initialized = true;\n            (0, auth_1.onAuthStateChanged)(this.admin.auth, (user) => {\n                if (this.admin) {\n                    if (user) {\n                        this.admin.user = user;\n                        this._adminClaimsListener = this._listenToClaims(this.admin);\n                        this._adminTokenListener = this._listenToTokenChange(this.admin, 'admin');\n                        user.getIdToken().then((idToken) => {\n                            this._idTokens.admin = idToken;\n                        });\n                    }\n                    else {\n                        this.admin.user = undefined;\n                    }\n                }\n                this.listenerUpdateCallback();\n            });\n            (0, auth_1.onAuthStateChanged)(this.app.auth, (user) => {\n                if (this.app) {\n                    if (user) {\n                        this.app.user = user;\n                        this._appClaimsListener = this._listenToClaims(this.app);\n                        this._appTokenListener = this._listenToTokenChange(this.app, 'app');\n                        user.getIdToken().then((idToken) => {\n                            this._idTokens.app = idToken;\n                        });\n                    }\n                    else {\n                        this.app.user = undefined;\n                    }\n                }\n                this.listenerUpdateCallback();\n            });\n            return this;\n        });\n    }\n    //           +--------------------------------+\n    // ----------|  Begin Authentication Methods  |----------\n    //           +--------------------------------+\n    get initialized() {\n        return this._initialized;\n    }\n    _verifyInit() {\n        if (!this._initialized) {\n            throw new Error('RoarFirekit has not been initialized. Use the `init` method.');\n        }\n    }\n    _isAuthenticated() {\n        this._verifyInit();\n        return !(this.admin.user === undefined || this.app.user === undefined);\n    }\n    isAdmin() {\n        if (this.superAdmin)\n            return true;\n        if (this._adminOrgs === undefined)\n            return false;\n        if ((0, isEmpty_1.default)((0, union_1.default)(...Object.values(this._adminOrgs))))\n            return false;\n        return true;\n    }\n    _verifyAuthentication() {\n        this._verifyInit();\n        if (!this._isAuthenticated()) {\n            throw new Error('User is not authenticated.');\n        }\n    }\n    _verifyAdmin() {\n        this._verifyAuthentication();\n        if (!this.isAdmin()) {\n            throw new Error('User is not an administrator.');\n        }\n    }\n    _listenToUserDoc() {\n        this._verifyAuthentication();\n        if (this.dbRefs && !this._userDocListener) {\n            let unsubscribe;\n            try {\n                unsubscribe = (0, firestore_1.onSnapshot)(this.dbRefs.admin.user, () => __awaiter(this, void 0, void 0, function* () {\n                    yield this.getMyData();\n                    this.listenerUpdateCallback();\n                }), (error) => {\n                    throw error;\n                });\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            }\n            catch (error) {\n                if (error.code !== 'permission-denied') {\n                    throw error;\n                }\n            }\n            return unsubscribe;\n        }\n        return this._userDocListener;\n    }\n    _listenToClaims(firekit) {\n        this._verifyInit();\n        if (firekit.user) {\n            let unsubscribe;\n            try {\n                unsubscribe = (0, firestore_1.onSnapshot)((0, firestore_1.doc)(firekit.db, 'userClaims', firekit.user.uid), (doc) => __awaiter(this, void 0, void 0, function* () {\n                    var _a;\n                    const data = doc.data();\n                    this._adminOrgs = (_a = data === null || data === void 0 ? void 0 : data.claims) === null || _a === void 0 ? void 0 : _a.adminOrgs;\n                    if (data === null || data === void 0 ? void 0 : data.lastUpdated) {\n                        const lastUpdated = new Date(data.lastUpdated);\n                        if (!firekit.claimsLastUpdated || lastUpdated > firekit.claimsLastUpdated) {\n                            // Update the user's ID token and refresh claimsLastUpdated.\n                            yield (0, auth_1.getIdToken)(firekit.user, true);\n                            firekit.claimsLastUpdated = lastUpdated;\n                        }\n                    }\n                    this.listenerUpdateCallback();\n                }), (error) => {\n                    throw error;\n                });\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            }\n            catch (error) {\n                if (error.code !== 'permission-denied') {\n                    throw error;\n                }\n            }\n            return unsubscribe;\n        }\n    }\n    _listenToTokenChange(firekit, _type) {\n        this._verifyInit();\n        if ((!this._adminTokenListener && _type === 'admin') || (!this._appTokenListener && _type === 'app')) {\n            return (0, auth_1.onIdTokenChanged)(firekit.auth, (user) => __awaiter(this, void 0, void 0, function* () {\n                var _a;\n                if (user) {\n                    const idTokenResult = yield user.getIdTokenResult(false);\n                    if (_type === 'admin') {\n                        this._superAdmin = Boolean(idTokenResult.claims.super_admin);\n                        if (idTokenResult.claims.roarUid) {\n                            if ((_a = this.app) === null || _a === void 0 ? void 0 : _a.user) {\n                                this._userDocListener = this._listenToUserDoc();\n                            }\n                            yield this.getMyData();\n                        }\n                        this._idTokenReceived = true;\n                    }\n                    this._idTokens[_type] = idTokenResult.token;\n                }\n                this.listenerUpdateCallback();\n            }));\n        }\n        else if (_type === 'admin') {\n            return this._adminTokenListener;\n        }\n        return this._appTokenListener;\n    }\n    _setUidCustomClaims() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            const setAdminUidClaims = (0, functions_1.httpsCallable)(this.admin.functions, 'setuidclaims');\n            const adminResult = yield setAdminUidClaims({ assessmentUid: this.app.user.uid });\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if ((0, get_1.default)(adminResult.data, 'status') !== 'ok') {\n                throw new Error('Failed to associate admin and assessment UIDs in the admin Firebase project.');\n            }\n            const setAppUidClaims = (0, functions_1.httpsCallable)(this.app.functions, 'setuidclaims');\n            const appResult = yield setAppUidClaims({ adminUid: this.admin.user.uid, roarUid: this.roarUid });\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if ((0, get_1.default)(appResult.data, 'status') !== 'ok') {\n                throw new Error('Failed to associate admin and assessment UIDs in the app Firebase project.');\n            }\n            return appResult;\n        });\n    }\n    _syncCleverUser(oAuthAccessToken, authProvider) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (authProvider === AuthProviderType.CLEVER) {\n                if (oAuthAccessToken === undefined) {\n                    throw new Error('No OAuth access token provided.');\n                }\n                this._verifyAuthentication();\n                const syncCleverUser = (0, functions_1.httpsCallable)(this.admin.functions, 'syncCleverUser');\n                const adminResult = yield syncCleverUser({\n                    assessmentUid: this.app.user.uid,\n                    accessToken: oAuthAccessToken,\n                });\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                if ((0, get_1.default)(adminResult.data, 'status') !== 'ok') {\n                    throw new Error('Failed to sync Clever and ROAR data.');\n                }\n            }\n        });\n    }\n    isUsernameAvailable(username) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyInit();\n            return (0, auth_2.isUsernameAvailable)(this.admin.auth, username);\n        });\n    }\n    isEmailAvailable(email) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyInit();\n            return (0, auth_2.isEmailAvailable)(this.admin.auth, email);\n        });\n    }\n    fetchEmailAuthMethods(email) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyInit();\n            return (0, auth_2.fetchEmailAuthMethods)(this.admin.auth, email);\n        });\n    }\n    isRoarAuthEmail(email) {\n        this._verifyInit();\n        return (0, auth_2.isRoarAuthEmail)(email);\n    }\n    registerWithEmailAndPassword({ email, password }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyInit();\n            return (0, auth_1.createUserWithEmailAndPassword)(this.admin.auth, email, password)\n                .catch((error) => {\n                console.log('Error creating user', error);\n                console.log(error.code);\n                console.log(error.message);\n            })\n                .then(() => {\n                return (0, auth_1.createUserWithEmailAndPassword)(this.app.auth, email, password).then(this._setUidCustomClaims.bind(this));\n            });\n        });\n    }\n    logInWithEmailAndPassword({ email, password }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyInit();\n            return (0, auth_1.signInWithEmailAndPassword)(this.admin.auth, email, password).then(() => {\n                return (0, auth_1.signInWithEmailAndPassword)(this.app.auth, email, password).then(this._setUidCustomClaims.bind(this));\n            });\n        });\n    }\n    logInWithUsernameAndPassword({ username, password }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const email = (0, auth_2.roarEmail)(username);\n            return this.logInWithEmailAndPassword({ email, password });\n        });\n    }\n    initiateLoginWithEmailLink({ email, redirectUrl }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyInit();\n            const actionCodeSettings = {\n                url: redirectUrl,\n                handleCodeInApp: true,\n            };\n            return (0, auth_1.sendSignInLinkToEmail)(this.admin.auth, email, actionCodeSettings);\n        });\n    }\n    isSignInWithEmailLink(emailLink) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyInit();\n            return (0, auth_1.isSignInWithEmailLink)(this.admin.auth, emailLink);\n        });\n    }\n    signInWithEmailLink({ email, emailLink }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyInit();\n            return (0, auth_1.signInWithEmailLink)(this.admin.auth, email, emailLink)\n                .then((userCredential) => __awaiter(this, void 0, void 0, function* () {\n                const roarAdminProvider = new auth_1.OAuthProvider(RoarProviderId.ROAR_ADMIN_PROJECT);\n                const roarAdminIdToken = yield (0, auth_1.getIdToken)(userCredential.user);\n                const roarAdminCredential = roarAdminProvider.credential({\n                    idToken: roarAdminIdToken,\n                });\n                return roarAdminCredential;\n            }))\n                .then((credential) => {\n                if (credential) {\n                    return (0, auth_1.signInWithCredential)(this.app.auth, credential);\n                }\n            })\n                .then((credential) => {\n                if (credential) {\n                    return this._setUidCustomClaims();\n                }\n            });\n        });\n    }\n    signInWithPopup(provider) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyInit();\n            const allowedProviders = [AuthProviderType.GOOGLE, AuthProviderType.CLEVER];\n            let authProvider;\n            if (provider === AuthProviderType.GOOGLE) {\n                authProvider = new auth_1.GoogleAuthProvider();\n            }\n            else if (provider === AuthProviderType.CLEVER) {\n                authProvider = new auth_1.OAuthProvider(RoarProviderId.CLEVER);\n            }\n            else {\n                throw new Error(`provider must be one of ${allowedProviders.join(', ')}. Received ${provider} instead.`);\n            }\n            const allowedErrors = ['auth/cancelled-popup-request', 'auth/popup-closed-by-user'];\n            const swallowAllowedErrors = (error) => {\n                if (!allowedErrors.includes(error.code)) {\n                    throw error;\n                }\n            };\n            let oAuthAccessToken;\n            return (0, auth_1.signInWithPopup)(this.admin.auth, authProvider)\n                .then((adminUserCredential) => __awaiter(this, void 0, void 0, function* () {\n                if (provider === AuthProviderType.GOOGLE) {\n                    const credential = auth_1.GoogleAuthProvider.credentialFromResult(adminUserCredential);\n                    // This gives you a Google Access Token. You can use it to access Google APIs.\n                    // TODO: Find a way to put this in the onAuthStateChanged handler\n                    oAuthAccessToken = credential === null || credential === void 0 ? void 0 : credential.accessToken;\n                    return credential;\n                }\n                else if (provider === AuthProviderType.CLEVER) {\n                    const credential = auth_1.OAuthProvider.credentialFromResult(adminUserCredential);\n                    // This gives you a Clever Access Token. You can use it to access Clever APIs.\n                    // TODO: Find a way to put this in the onAuthStateChanged handler\n                    oAuthAccessToken = credential === null || credential === void 0 ? void 0 : credential.accessToken;\n                    const roarAdminProvider = new auth_1.OAuthProvider(RoarProviderId.ROAR_ADMIN_PROJECT);\n                    const roarAdminIdToken = yield (0, auth_1.getIdToken)(adminUserCredential.user);\n                    const roarAdminCredential = roarAdminProvider.credential({\n                        idToken: roarAdminIdToken,\n                    });\n                    return roarAdminCredential;\n                }\n            }))\n                .catch(swallowAllowedErrors)\n                .then((credential) => {\n                if (credential) {\n                    return (0, auth_1.signInWithCredential)(this.app.auth, credential).catch(swallowAllowedErrors);\n                }\n            })\n                .then((credential) => {\n                if (credential) {\n                    return this._setUidCustomClaims();\n                }\n            })\n                .then((setClaimsResult) => {\n                if (setClaimsResult) {\n                    this._syncCleverUser(oAuthAccessToken, provider);\n                }\n            });\n        });\n    }\n    initiateRedirect(provider) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyInit();\n            const allowedProviders = [AuthProviderType.GOOGLE, AuthProviderType.CLEVER];\n            let authProvider;\n            if (provider === AuthProviderType.GOOGLE) {\n                authProvider = new auth_1.GoogleAuthProvider();\n            }\n            else if (provider === AuthProviderType.CLEVER) {\n                authProvider = new auth_1.OAuthProvider(RoarProviderId.CLEVER);\n            }\n            else {\n                throw new Error(`provider must be one of ${allowedProviders.join(', ')}. Received ${provider} instead.`);\n            }\n            return (0, auth_1.signInWithRedirect)(this.admin.auth, authProvider);\n        });\n    }\n    signInFromRedirectResult(enableCookiesCallback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyInit();\n            const catchEnableCookiesError = (error) => {\n                if (error.code == 'auth/web-storage-unsupported') {\n                    enableCookiesCallback();\n                }\n                else {\n                    throw error;\n                }\n            };\n            let oAuthAccessToken;\n            let authProvider;\n            return (0, auth_1.getRedirectResult)(this.admin.auth)\n                .then((adminUserCredential) => __awaiter(this, void 0, void 0, function* () {\n                if (adminUserCredential !== null) {\n                    const providerId = adminUserCredential.providerId;\n                    if (providerId === RoarProviderId.GOOGLE) {\n                        const credential = auth_1.GoogleAuthProvider.credentialFromResult(adminUserCredential);\n                        // This gives you a Google Access Token. You can use it to access Google APIs.\n                        // TODO: Find a way to put this in the onAuthStateChanged handler\n                        authProvider = AuthProviderType.GOOGLE;\n                        oAuthAccessToken = credential === null || credential === void 0 ? void 0 : credential.accessToken;\n                        return credential;\n                    }\n                    else if (providerId === RoarProviderId.CLEVER) {\n                        const credential = auth_1.OAuthProvider.credentialFromResult(adminUserCredential);\n                        // This gives you a Clever Access Token. You can use it to access Clever APIs.\n                        // TODO: Find a way to put this in the onAuthStateChanged handler\n                        authProvider = AuthProviderType.CLEVER;\n                        oAuthAccessToken = credential === null || credential === void 0 ? void 0 : credential.accessToken;\n                        const roarAdminProvider = new auth_1.OAuthProvider(RoarProviderId.ROAR_ADMIN_PROJECT);\n                        const roarAdminIdToken = yield (0, auth_1.getIdToken)(adminUserCredential.user);\n                        const roarAdminCredential = roarAdminProvider.credential({\n                            idToken: roarAdminIdToken,\n                        });\n                        return roarAdminCredential;\n                    }\n                }\n                return null;\n            }))\n                .catch(catchEnableCookiesError)\n                .then((credential) => {\n                if (credential) {\n                    return (0, auth_1.signInWithCredential)(this.app.auth, credential);\n                }\n                return null;\n            })\n                .then((credential) => {\n                if (credential) {\n                    return this._setUidCustomClaims();\n                }\n                return null;\n            })\n                .then((setClaimsResult) => {\n                if (setClaimsResult) {\n                    this._syncCleverUser(oAuthAccessToken, authProvider);\n                    return { status: 'ok' };\n                }\n                return null;\n            });\n        });\n    }\n    _signOutApp() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._appClaimsListener)\n                this._appClaimsListener();\n            if (this._userDocListener)\n                this._userDocListener();\n            this._scrubAuthProperties();\n            yield (0, auth_1.signOut)(this.app.auth);\n        });\n    }\n    _signOutAdmin() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._adminClaimsListener)\n                this._adminClaimsListener();\n            if (this._adminTokenListener)\n                this._adminTokenListener();\n            if (this._userDocListener)\n                this._userDocListener();\n            this._scrubAuthProperties();\n            yield (0, auth_1.signOut)(this.admin.auth);\n        });\n    }\n    signOut() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            yield this._signOutApp();\n            yield this._signOutAdmin();\n        });\n    }\n    //           +--------------------------------+\n    // ----------|   End Authentication Methods   |----------\n    //           +--------------------------------+\n    //           +--------------------------------+\n    // ----------| Begin Methods to Read User and |----------\n    // ----------| Assignment/Administration Data |----------\n    //           +--------------------------------+\n    get superAdmin() {\n        return this._superAdmin;\n    }\n    get idTokenReceived() {\n        return this._idTokenReceived;\n    }\n    get idTokens() {\n        return this._idTokens;\n    }\n    get restConfig() {\n        return {\n            admin: {\n                headers: { Authorization: `Bearer ${this._idTokens.admin}` },\n                baseURL: 'https://firestore.googleapis.com/v1/projects/gse-roar-admin/databases/(default)/documents',\n            },\n            app: {\n                headers: { Authorization: `Bearer ${this._idTokens.app}` },\n                baseURL: 'https://firestore.googleapis.com/v1/projects/gse-roar-assessment/databases/(default)/documents',\n            },\n        };\n    }\n    get adminOrgs() {\n        return this._adminOrgs;\n    }\n    get dbRefs() {\n        var _a, _b;\n        if (((_a = this.admin) === null || _a === void 0 ? void 0 : _a.user) && ((_b = this.app) === null || _b === void 0 ? void 0 : _b.user)) {\n            return {\n                admin: {\n                    user: (0, firestore_1.doc)(this.admin.db, 'users', this.roarUid),\n                    assignments: (0, firestore_1.collection)(this.admin.db, 'users', this.roarUid, 'assignments'),\n                },\n                app: {\n                    user: (0, firestore_1.doc)(this.app.db, 'users', this.roarUid),\n                    runs: (0, firestore_1.collection)(this.app.db, 'users', this.roarUid, 'runs'),\n                    tasks: (0, firestore_1.collection)(this.app.db, 'tasks'),\n                },\n            };\n        }\n        else {\n            return undefined;\n        }\n    }\n    _getUser(uid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            const userDocRef = (0, firestore_1.doc)(this.admin.db, 'users', uid);\n            const userDocSnap = yield (0, firestore_1.getDoc)(userDocRef);\n            if (userDocSnap.exists()) {\n                const userData = Object.assign({ userType: interfaces_1.UserType.guest }, userDocSnap.data());\n                const externalDataSnapshot = yield (0, firestore_1.getDocs)((0, firestore_1.collection)(userDocRef, 'externalData'));\n                let externalData = {};\n                externalDataSnapshot.forEach((doc) => {\n                    // doc.data() is never undefined for query doc snapshots returned by ``getDocs``\n                    externalData = Object.assign(Object.assign({}, externalData), { [doc.id]: doc.data() });\n                });\n                userData.externalData = externalData;\n                return userData;\n            }\n            else {\n                return {\n                    userType: interfaces_1.UserType.guest,\n                    districts: (0, util_1.emptyOrg)(),\n                    schools: (0, util_1.emptyOrg)(),\n                    classes: (0, util_1.emptyOrg)(),\n                    families: (0, util_1.emptyOrg)(),\n                    groups: (0, util_1.emptyOrg)(),\n                    archived: false,\n                };\n            }\n        });\n    }\n    getMyData() {\n        var _a, _b, _c, _d;\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyInit();\n            if (!this._isAuthenticated() || !this.roarUid) {\n                return;\n            }\n            this.userData = yield this._getUser(this.roarUid);\n            if (this.userData) {\n                // Get current assignments by first getting all assignments and then filtering by dates\n                this.currentAssignments = {\n                    assigned: (0, keys_1.default)((_a = this.userData) === null || _a === void 0 ? void 0 : _a.assignmentsAssigned),\n                    started: (0, keys_1.default)((_b = this.userData) === null || _b === void 0 ? void 0 : _b.assignmentsStarted),\n                    completed: (0, keys_1.default)((_c = this.userData) === null || _c === void 0 ? void 0 : _c.assignmentsCompleted),\n                };\n                // Create a list of all assignments\n                const allAssignments = (0, union_1.default)(...Object.values(this.currentAssignments));\n                // Map that list into an object with the assignment IDs as the keys and the\n                // assignment data as the values\n                const assignmentInfo = (0, fromPairs_1.default)(yield Promise.all((0, map_1.default)(allAssignments, (assignment) => __awaiter(this, void 0, void 0, function* () {\n                    return this._getAssignment(assignment).then((assignmentData) => [assignment, assignmentData]);\n                }))));\n                // Loop through the assignments and filter out non-current ones\n                const now = new Date();\n                for (const assignmentStatus in this.currentAssignments) {\n                    const key = assignmentStatus;\n                    this.currentAssignments[key] = (0, filter_1.default)(this.currentAssignments[key], (assignmentId) => {\n                        const { dateOpened, dateClosed } = assignmentInfo[assignmentId];\n                        return dateOpened.toDate() < now && dateClosed.toDate() > now;\n                    });\n                }\n                // Create a RoarAppUserInfo for later ingestion into a RoarAppkit\n                // First determine the PID. If the user has signed in through Clever, then\n                // the PID has been set to the Clever ID in the firebase cloud function.\n                // If the user signed in through another method, the PID **may** have been\n                // set to something else. Grab it if it's there.\n                // In either case, it will then be present in this.userData.\n                let assessmentPid = (0, get_1.default)(this.userData, 'assessmentPid');\n                // If the assessmentPid is undefined, set it to the local part of the user's email.\n                if (!assessmentPid) {\n                    assessmentPid = (0, nth_1.default)((_d = this.app.user.email) === null || _d === void 0 ? void 0 : _d.match(/^(.+)@/), 1);\n                }\n                this.roarAppUserInfo = {\n                    db: this.app.db,\n                    roarUid: this.roarUid,\n                    assessmentUid: this.app.user.uid,\n                    assessmentPid: assessmentPid,\n                    userType: this.userData.userType,\n                };\n            }\n        });\n    }\n    /* Return a list of all UIDs for users that this user has access to */\n    listUsers() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error('Method not currently implemented.');\n            // this._verifyAuthentication();\n            //\n            // const userCollectionRef = collection(this.admin.db, 'users');\n            // const userQuery = query(\n            //   userCollectionRef,\n            //   or(\n            //     where('districts', 'array-contains', this.roarUid!),\n            //     where('schools', 'array-contains', this.roarUid!),\n            //     where('classes', 'array-contains', this.roarUid!),\n            //     where('groups', 'array-contains', this.roarUid!),\n            //     where('families', 'array-contains', this.roarUid!),\n            //   ),\n            // );\n            // // TODO: Query all users within this user's admin orgs\n            // // TODO: Append the current user's uid to the list of UIDs\n            // return null;\n        });\n    }\n    getLegalDoc(docName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const docRef = (0, firestore_1.doc)(this.admin.db, 'legal', docName);\n            const docSnap = yield (0, firestore_1.getDoc)(docRef);\n            if (docSnap.exists()) {\n                const data = docSnap.data();\n                const gitHubUrl = `https://raw.githubusercontent.com/${(0, get_1.default)(data, 'gitHubOrg')}/${(0, get_1.default)(data, 'gitHubRepository')}/${(0, get_1.default)(data, 'currentCommit')}/${(0, get_1.default)(data, 'fileName')}`;\n                try {\n                    const response = yield fetch(gitHubUrl);\n                    const legalText = yield response.text();\n                    return {\n                        text: legalText,\n                        version: (0, get_1.default)(data, 'currentCommit'),\n                    };\n                }\n                catch (e) {\n                    throw new Error('Error retrieving consent document from GitHub.');\n                }\n            }\n            else {\n                return null;\n            }\n        });\n    }\n    updateConsentStatus(docName, consentVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, firestore_1.updateDoc)(this.dbRefs.admin.user, {\n                [`legal.${docName}.${consentVersion}`]: new Date(),\n            });\n        });\n    }\n    /* Return a list of Promises for user objects for each of the UIDs given in the input array */\n    getUsers(uidArray) {\n        this._verifyAuthentication();\n        return uidArray.map((uid) => this._getUser(uid));\n    }\n    get roarUid() {\n        var _a, _b;\n        return (_b = (_a = this.admin) === null || _a === void 0 ? void 0 : _a.user) === null || _b === void 0 ? void 0 : _b.uid;\n    }\n    _getAdministration(administrationId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            const docRef = (0, firestore_1.doc)(this.admin.db, 'administrations', administrationId);\n            const docSnap = yield (0, firestore_1.getDoc)(docRef);\n            if (docSnap.exists()) {\n                return Object.assign({ id: administrationId }, docSnap.data());\n            }\n        });\n    }\n    getAdministrations(administrationIds) {\n        this._verifyAuthentication();\n        return administrationIds.map((id) => this._getAdministration(id));\n    }\n    _getAssignment(administrationId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            const docRef = (0, firestore_1.doc)(this.dbRefs.admin.assignments, administrationId);\n            const docSnap = yield (0, firestore_1.getDoc)(docRef);\n            if (docSnap.exists()) {\n                const docData = docSnap.data();\n                const assessments = (0, get_1.default)(docData, 'assessments', []);\n                // Loop through these assessments and append their task data to docData\n                const extendedAssessmentData = yield Promise.all(assessments.map((assessment) => __awaiter(this, void 0, void 0, function* () {\n                    const taskDocRef = (0, firestore_1.doc)(this.dbRefs.app.tasks, assessment.taskId);\n                    const taskDocSnap = yield (0, firestore_1.getDoc)(taskDocRef);\n                    if (taskDocSnap.exists()) {\n                        return Object.assign(Object.assign({}, assessment), { taskData: taskDocSnap.data() });\n                    }\n                })));\n                return Object.assign(Object.assign({}, docData), { assessments: extendedAssessmentData });\n            }\n        });\n    }\n    getAssignments(administrationIds) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            return yield Promise.all((0, map_1.default)(administrationIds, (id) => __awaiter(this, void 0, void 0, function* () { return yield this._getAssignment(id); })));\n        });\n    }\n    startAssignment(administrationId, transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            const assignmentDocRef = (0, firestore_1.doc)(this.dbRefs.admin.assignments, administrationId);\n            if (transaction) {\n                return transaction.update(assignmentDocRef, { started: true });\n            }\n            else {\n                return (0, firestore_1.updateDoc)(assignmentDocRef, { started: true });\n            }\n        });\n    }\n    completeAssignment(administrationId, transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            const assignmentDocRef = (0, firestore_1.doc)(this.dbRefs.admin.assignments, administrationId);\n            if (transaction) {\n                return transaction.update(assignmentDocRef, { completed: true });\n            }\n            else {\n                return (0, firestore_1.updateDoc)(assignmentDocRef, { completed: true });\n            }\n        });\n    }\n    _updateAssignedAssessment(administrationId, taskId, updates, transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            const docRef = (0, firestore_1.doc)(this.dbRefs.admin.assignments, administrationId);\n            const docSnap = yield transaction.get(docRef);\n            if (docSnap.exists()) {\n                const assessments = docSnap.data().assessments;\n                const assessmentIdx = assessments.findIndex((a) => a.taskId === taskId);\n                const oldAssessmentInfo = assessments[assessmentIdx];\n                const newAssessmentInfo = Object.assign(Object.assign({}, oldAssessmentInfo), updates);\n                assessments[assessmentIdx] = newAssessmentInfo;\n                return transaction.update(docRef, { assessments });\n            }\n            else {\n                return transaction;\n            }\n        });\n    }\n    startAssessment(administrationId, taskId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            const appKit = yield (0, firestore_1.runTransaction)(this.admin.db, (transaction) => __awaiter(this, void 0, void 0, function* () {\n                var _a;\n                // First grab data about the administration\n                const administrationDocRef = (0, firestore_1.doc)(this.admin.db, 'administrations', administrationId);\n                const administrationDocSnap = yield transaction.get(administrationDocRef);\n                if (administrationDocSnap.exists()) {\n                    let assessmentParams = {};\n                    const assessments = administrationDocSnap.data().assessments;\n                    const thisAssessment = assessments.find((a) => a.taskId === taskId);\n                    if (thisAssessment) {\n                        assessmentParams = thisAssessment.params;\n                    }\n                    else {\n                        throw new Error(`Could not find assessment with taskId ${taskId} in administration ${administrationId}`);\n                    }\n                    // Create the run in the assessment Firestore, record the runId and then\n                    // pass it to the app\n                    const runRef = (0, firestore_1.doc)(this.dbRefs.app.runs);\n                    const runId = runRef.id;\n                    // Check the assignment to see if none of the assessments have been\n                    // started yet. If not, start the assignment\n                    const assignmentDocRef = (0, firestore_1.doc)(this.dbRefs.admin.assignments, administrationId);\n                    const assignmentDocSnap = yield transaction.get(assignmentDocRef);\n                    if (assignmentDocSnap.exists()) {\n                        const assignedAssessments = assignmentDocSnap.data().assessments;\n                        const allRunIdsForThisTask = ((_a = assignedAssessments.find((a) => a.taskId === taskId)) === null || _a === void 0 ? void 0 : _a.allRunIds) || [];\n                        allRunIdsForThisTask.push(runId);\n                        const assessmentUpdateData = {\n                            startedOn: new Date(),\n                            allRunIds: allRunIdsForThisTask,\n                        };\n                        if (allRunIdsForThisTask.length === 1) {\n                            assessmentUpdateData.runId = runId;\n                        }\n                        // Append runId to `allRunIds` for this assessment\n                        // in the userId/assignments collection\n                        yield this._updateAssignedAssessment(administrationId, taskId, assessmentUpdateData, transaction);\n                        if (!assignedAssessments.some((a) => Boolean(a.startedOn))) {\n                            yield this.startAssignment(administrationId, transaction);\n                        }\n                        if (this.roarAppUserInfo === undefined) {\n                            yield this.getMyData();\n                        }\n                        const assigningOrgs = assignmentDocSnap.data().assigningOrgs;\n                        const taskAndVariant = yield (0, query_assessment_1.getTaskAndVariant)({\n                            db: this.app.db,\n                            taskId,\n                            variantParams: assessmentParams,\n                        });\n                        if (taskAndVariant.task === undefined) {\n                            throw new Error(`Could not find task ${taskId}`);\n                        }\n                        if (taskAndVariant.variant === undefined) {\n                            throw new Error(`Could not find a variant of task ${taskId} with the params: ${JSON.stringify(assessmentParams)}`);\n                        }\n                        const taskName = taskAndVariant.task.name;\n                        const taskDescription = taskAndVariant.task.description;\n                        const variantName = taskAndVariant.variant.name;\n                        const variantDescription = taskAndVariant.variant.description;\n                        const taskInfo = {\n                            db: this.app.db,\n                            taskId,\n                            taskName,\n                            taskDescription,\n                            variantName,\n                            variantDescription,\n                            variantParams: assessmentParams,\n                        };\n                        this.selectBestRun({\n                            assignmentId: administrationId,\n                            taskId,\n                        });\n                        return new appkit_1.RoarAppkit({\n                            firebaseProject: this.app,\n                            userInfo: this.roarAppUserInfo,\n                            assigningOrgs,\n                            assignmentId: administrationId,\n                            runId,\n                            taskInfo,\n                        });\n                    }\n                    else {\n                        throw new Error(`Could not find assignment for user ${this.roarUid} with administration id ${administrationId}`);\n                    }\n                }\n                else {\n                    throw new Error(`Could not find administration with id ${administrationId}`);\n                }\n            }));\n            return appKit;\n        });\n    }\n    completeAssessment(administrationId, taskId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            yield (0, firestore_1.runTransaction)(this.admin.db, (transaction) => __awaiter(this, void 0, void 0, function* () {\n                // Check to see if all of the assessments in this assignment have been completed,\n                // If so, complete the assignment\n                const docRef = (0, firestore_1.doc)(this.dbRefs.admin.assignments, administrationId);\n                const docSnap = yield transaction.get(docRef);\n                // Update this assignment's `completedOn` timestamp\n                yield this._updateAssignedAssessment(administrationId, taskId, { completedOn: new Date() }, transaction);\n                this.selectBestRun({\n                    assignmentId: administrationId,\n                    taskId,\n                });\n                if (docSnap.exists()) {\n                    // Now check to see if all of the assessments in this assignment have\n                    // been completed.  Because we do this all in one transaction, we have\n                    // to put the `.get` call before any `.update` or `.set` calls. Thus, in\n                    // the `docSnap` that we are referencing below, the current assessment\n                    // will not have a `completedOn` timestamp yet (we set that after we\n                    // called `.get`).  We therefore check to see if all of the assessments\n                    // have been completed **or** have the current taskId.\n                    if (docSnap\n                        .data()\n                        .assessments.every((a) => Boolean(a.completedOn) || a.taskId === taskId)) {\n                        this.completeAssignment(administrationId, transaction);\n                    }\n                }\n            }));\n        });\n    }\n    updateAssessmentRewardShown(administrationId, taskId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            yield (0, firestore_1.runTransaction)(this.admin.db, (transaction) => __awaiter(this, void 0, void 0, function* () {\n                this._updateAssignedAssessment(administrationId, taskId, { rewardShown: true }, transaction);\n            }));\n        });\n    }\n    selectBestRun({ assignmentId, taskId }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            const cloudSelectBestRun = (0, functions_1.httpsCallable)(this.admin.functions, 'selectBestRun');\n            const response = yield cloudSelectBestRun({ assignmentId, taskId });\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if ((0, get_1.default)(response.data, 'status') !== 'ok') {\n                throw new Error('Failed to create administrator user account.');\n            }\n            return (0, get_1.default)(response.data, 'bestRun');\n        });\n    }\n    // These are all methods that will be important for admins, but not necessary for students\n    createAdministration({ name, assessments, dateOpen, dateClose, sequential = true, orgs = (0, util_1.emptyOrgList)(), }) {\n        var _a, _b, _c, _d, _e;\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            // First add the administration to the database\n            const administrationData = {\n                name,\n                createdBy: this.roarUid,\n                groups: (_a = orgs.groups) !== null && _a !== void 0 ? _a : [],\n                families: (_b = orgs.families) !== null && _b !== void 0 ? _b : [],\n                classes: (_c = orgs.classes) !== null && _c !== void 0 ? _c : [],\n                schools: (_d = orgs.schools) !== null && _d !== void 0 ? _d : [],\n                districts: (_e = orgs.districts) !== null && _e !== void 0 ? _e : [],\n                dateCreated: new Date(),\n                dateOpened: dateOpen,\n                dateClosed: dateClose,\n                assessments: assessments,\n                sequential: sequential,\n            };\n            yield (0, firestore_1.runTransaction)(this.admin.db, (transaction) => __awaiter(this, void 0, void 0, function* () {\n                // Create the administration doc in the admin Firestore,\n                const administrationDocRef = (0, firestore_1.doc)((0, firestore_1.collection)(this.admin.db, 'administrations'));\n                transaction.set(administrationDocRef, administrationData);\n                // Then add the ID to the admin's list of administrationsCreated\n                const userDocRef = this.dbRefs.admin.user;\n                transaction.update(userDocRef, {\n                    'adminData.administrationsCreated': (0, firestore_1.arrayUnion)(administrationDocRef.id),\n                });\n            }));\n        });\n    }\n    assignAdministrationToOrgs(administrationId, orgs = (0, util_1.emptyOrgList)()) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            this._verifyAdmin();\n            const docRef = (0, firestore_1.doc)(this.admin.db, 'administrations', administrationId);\n            yield (0, firestore_1.updateDoc)(docRef, {\n                districts: (0, firestore_1.arrayUnion)(...orgs.districts),\n                schools: (0, firestore_1.arrayUnion)(...orgs.schools),\n                classes: (0, firestore_1.arrayUnion)(...orgs.classes),\n                groups: (0, firestore_1.arrayUnion)(...orgs.groups),\n                families: (0, firestore_1.arrayUnion)(...orgs.families),\n            });\n        });\n    }\n    unassignAdministrationToOrgs(administrationId, orgs = (0, util_1.emptyOrgList)()) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            this._verifyAdmin();\n            const docRef = (0, firestore_1.doc)(this.admin.db, 'administrations', administrationId);\n            yield (0, firestore_1.updateDoc)(docRef, {\n                districts: (0, firestore_1.arrayRemove)(...orgs.districts),\n                schools: (0, firestore_1.arrayRemove)(...orgs.schools),\n                classes: (0, firestore_1.arrayRemove)(...orgs.classes),\n                groups: (0, firestore_1.arrayRemove)(...orgs.groups),\n                families: (0, firestore_1.arrayRemove)(...orgs.families),\n            });\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    updateUserExternalData(uid, externalResourceId, externalData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error('Method not currently implemented.');\n            // this._verifyAuthentication();\n            // this._verifyAdmin();\n            // const docRef = doc(this.admin!.db, 'users', uid, 'externalData', externalResourceId);\n            // const docSnap = await getDoc(docRef);\n            // if (docSnap.exists()) {\n            //   // We use the dot-object module to transform the potentially nested external data to\n            //   // dot notation. This prevents overwriting extisting external data.\n            //   // See the note about dot notation in https://firebase.google.com/docs/firestore/manage-data/add-data#update_fields_in_nested_objects\n            //   await updateDoc(\n            //     docRef,\n            //     removeNull(\n            //       dot.dot({\n            //         [externalResourceId]: externalData,\n            //       }),\n            //     ),\n            //   );\n            // } else {\n            //   await setDoc(docRef, removeNull(externalData));\n            // }\n        });\n    }\n    createStudentWithEmailPassword(email, password, userData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            this._verifyAdmin();\n            if (!(0, get_1.default)(userData, 'dob')) {\n                throw new Error('Student date of birth must be supplied.');\n            }\n            const userDocData = {\n                userType: interfaces_1.UserType.student,\n                studentData: {},\n                districts: (0, util_1.emptyOrg)(),\n                schools: (0, util_1.emptyOrg)(),\n                classes: (0, util_1.emptyOrg)(),\n                families: (0, util_1.emptyOrg)(),\n                groups: (0, util_1.emptyOrg)(),\n                archived: false,\n            };\n            if ((0, get_1.default)(userData, 'pid')) {\n                (0, set_1.default)(userDocData, 'assessmentPid', userData.pid);\n            }\n            else {\n                // If PID was not supplied, then construct one using an eight character\n                // checksum of the email.\n                // Prefix that checksum with optional org abbreviations:\n                // 1. If the district has an abbreviation, start with that.\n                // 2. Then add the school abbreviation, if it exists.\n                // 3. If neither of those are available, use the group abbreviation.\n                // 4. Otherwise prepend nothing.\n                const emailCheckSum = (0, util_1.crc32String)(email);\n                const districtPrefix = (0, get_1.default)(userData, 'district.abbreviation');\n                const schoolPrefix = (0, get_1.default)(userData, 'school.abbreviation');\n                const groupPrefix = (0, get_1.default)(userData, 'group.abbreviation');\n                const pidParts = [];\n                if (districtPrefix)\n                    pidParts.push(districtPrefix);\n                if (schoolPrefix)\n                    pidParts.push(schoolPrefix);\n                if (pidParts.length === 0 && groupPrefix)\n                    pidParts.push(groupPrefix);\n                pidParts.push(emailCheckSum);\n                (0, set_1.default)(userDocData, 'assessmentPid', pidParts.join('-'));\n            }\n            // TODO: this can probably be optimized.\n            (0, set_1.default)(userDocData, 'email', email);\n            if ((0, get_1.default)(userData, 'username'))\n                (0, set_1.default)(userDocData, 'username', userData.username);\n            if ((0, get_1.default)(userData, 'name'))\n                (0, set_1.default)(userDocData, 'name', userData.name);\n            if ((0, get_1.default)(userData, 'dob'))\n                (0, set_1.default)(userDocData, 'studentData.dob', userData.dob);\n            if ((0, get_1.default)(userData, 'gender'))\n                (0, set_1.default)(userDocData, 'studentData.gender', userData.gender);\n            if ((0, get_1.default)(userData, 'grade'))\n                (0, set_1.default)(userDocData, 'studentData.grade', userData.grade);\n            if ((0, get_1.default)(userData, 'state_id'))\n                (0, set_1.default)(userDocData, 'studentData.state_id', userData.state_id);\n            if ((0, get_1.default)(userData, 'hispanic_ethnicity'))\n                (0, set_1.default)(userDocData, 'studentData.hispanic_ethnicity', userData.hispanic_ethnicity);\n            if ((0, get_1.default)(userData, 'ell_status'))\n                (0, set_1.default)(userDocData, 'studentData.ell_status', userData.ell_status);\n            if ((0, get_1.default)(userData, 'iep_status'))\n                (0, set_1.default)(userDocData, 'studentData.iep_status', userData.iep_status);\n            if ((0, get_1.default)(userData, 'frl_status'))\n                (0, set_1.default)(userDocData, 'studentData.frl_status', userData.frl_status);\n            if ((0, get_1.default)(userData, 'race'))\n                (0, set_1.default)(userDocData, 'studentData.race', userData.race);\n            if ((0, get_1.default)(userData, 'home_language'))\n                (0, set_1.default)(userDocData, 'studentData.home_language', userData.home_language);\n            if ((0, get_1.default)(userData, 'district'))\n                (0, set_1.default)(userDocData, 'orgIds.district', userData.district.id);\n            if ((0, get_1.default)(userData, 'school'))\n                (0, set_1.default)(userDocData, 'orgIds.school', userData.school.id);\n            if ((0, get_1.default)(userData, 'class'))\n                (0, set_1.default)(userDocData, 'orgIds.class', userData.class.id);\n            if ((0, get_1.default)(userData, 'group'))\n                (0, set_1.default)(userDocData, 'orgIds.group', userData.group.id);\n            if ((0, get_1.default)(userData, 'family'))\n                (0, set_1.default)(userDocData, 'orgIds.family', userData.family.id);\n            const cloudCreateAdminStudent = (0, functions_1.httpsCallable)(this.admin.functions, 'createstudentaccount');\n            const adminResponse = yield cloudCreateAdminStudent({ email, password, userData: userDocData });\n            const adminUid = (0, get_1.default)(adminResponse, 'data.adminUid');\n            const cloudCreateAppStudent = (0, functions_1.httpsCallable)(this.app.functions, 'createstudentaccount');\n            const appResponse = yield cloudCreateAppStudent({ adminUid, email, password, userData: userDocData });\n            // cloud function returns all relevant Uids (since at this point, all of the associations and claims have been made)\n            const assessmentUid = (0, get_1.default)(appResponse, 'data.assessmentUid');\n            const cloudUpdateUserClaims = (0, functions_1.httpsCallable)(this.admin.functions, 'associateassessmentuid');\n            yield cloudUpdateUserClaims({ adminUid, assessmentUid });\n        });\n    }\n    createStudentWithUsernamePassword(username, password, userData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            this._verifyAdmin();\n            const email = `${username}@roar-auth.com`;\n            return this.createStudentWithEmailPassword(email, password, userData);\n        });\n    }\n    createAdministrator(email, name, targetOrgs, targetAdminOrgs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            this._verifyAdmin();\n            const cloudCreateAdministrator = (0, functions_1.httpsCallable)(this.admin.functions, 'createAdministratorAccount');\n            const adminResponse = yield cloudCreateAdministrator({\n                email,\n                name,\n                orgs: targetOrgs,\n                adminOrgs: targetAdminOrgs,\n            });\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if ((0, get_1.default)(adminResponse.data, 'status') !== 'ok') {\n                throw new Error('Failed to create administrator user account.');\n            }\n        });\n    }\n    getTasks(requireRegistered = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            return (0, query_assessment_1.getTasks)(this.app.db, requireRegistered);\n        });\n    }\n    getVariants(requireRegistered = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            return (0, query_assessment_1.getVariants)(this.app.db, requireRegistered);\n        });\n    }\n    getMyAdministrations(includeStats = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            if (this._superAdmin || this._adminOrgs) {\n                const orgs = this._superAdmin ? undefined : this._adminOrgs;\n                return (0, query_admin_1.getAdministrations)({\n                    db: this.admin.db,\n                    isSuperAdmin: this._superAdmin || false,\n                    orgs,\n                    includeStats,\n                });\n            }\n            else {\n                throw new Error('You must be an admin to get organizations.');\n            }\n        });\n    }\n    getOrgsById({ orgType, orgIds, pageLimit = 15, startAfterDocId, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (0, query_assessment_1.getOrganizations)({ db: this.admin.db, orgType, orgIds, pageLimit, startAfterDocId });\n        });\n    }\n    getOrgs(orgType) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            if (this._superAdmin) {\n                return (0, query_assessment_1.getOrganizations)({ db: this.admin.db, orgType });\n            }\n            else if (this._adminOrgs) {\n                const orgIds = this._adminOrgs[orgType] === undefined ? [] : [...this._adminOrgs[orgType]];\n                // If orgType is school or class, and the user has district or school\n                // admin orgs, we must add all subordinate orgs to the orgIds.\n                if (['schools', 'classes'].includes(orgType)) {\n                    const districtIds = this._adminOrgs.districts;\n                    let schoolIds = [];\n                    if (districtIds !== undefined) {\n                        const districts = yield (0, query_assessment_1.getOrganizations)({ db: this.admin.db, orgType: 'districts', orgIds: districtIds });\n                        schoolIds = (0, union_1.default)(...districts.map((d) => d.schools));\n                    }\n                    if (orgType === 'schools') {\n                        orgIds.push(...schoolIds);\n                    }\n                    else if (orgType === 'classes') {\n                        const allSchoolIds = (0, union_1.default)(schoolIds, (_a = this._adminOrgs.schools) !== null && _a !== void 0 ? _a : []);\n                        const schools = yield (0, query_assessment_1.getOrganizations)({ db: this.admin.db, orgType: 'schools', orgIds: allSchoolIds });\n                        const classIds = (0, union_1.default)(...schools.map((s) => s.classes));\n                        orgIds.push(...classIds);\n                    }\n                }\n                return (0, query_assessment_1.getOrganizations)({ db: this.admin.db, orgType, orgIds });\n            }\n            else {\n                throw new Error('You must be an admin to get organizations.');\n            }\n        });\n    }\n    getUsersBySingleOrg({ orgType, orgId, countOnly = false, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            this._verifyAdmin();\n            const orgs = (0, util_1.emptyOrgList)();\n            orgs[orgType] = [orgId];\n            return (0, query_admin_1.getUsersByOrgs)({\n                db: this.admin.db,\n                isSuperAdmin: this._superAdmin || false,\n                orgs,\n                countOnly,\n            });\n        });\n    }\n    getUsersByOrgs({ orgs, countOnly = false }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            this._verifyAdmin();\n            return (0, query_admin_1.getUsersByOrgs)({\n                db: this.admin.db,\n                isSuperAdmin: this._superAdmin || false,\n                orgs,\n                countOnly,\n            });\n        });\n    }\n    syncCleverOrgs(shallow = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            if (!this._superAdmin) {\n                throw new Error('You must be a super admin to sync Clever organizations.');\n            }\n            const syncCleverOrgs = (0, functions_1.httpsCallable)(this.admin.functions, 'syncCleverOrgs', { timeout: 300000 });\n            const result = yield syncCleverOrgs({ shallow });\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if ((0, get_1.default)(result.data, 'status') !== 'ok') {\n                throw new Error('Failed to sync Clever orgs.');\n            }\n        });\n    }\n    createOrg(orgsCollection, orgData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            this._verifyAdmin();\n            if (orgsCollection === 'schools' && orgData.districtId === undefined) {\n                throw new Error('You must specify a districtId when creating a school.');\n            }\n            if (orgsCollection === 'classes' && orgData.schoolId === undefined) {\n                throw new Error('You must specify a schoolId when creating a class.');\n            }\n            if (orgsCollection === 'classes') {\n                const schoolDocRef = (0, firestore_1.doc)(this.admin.db, 'schools', orgData.schoolId);\n                const districtId = yield (0, firestore_1.getDoc)(schoolDocRef).then((snapshot) => {\n                    if (snapshot.exists()) {\n                        return snapshot.data().districtId;\n                    }\n                    else {\n                        throw new Error(`Could not find a school with ID ${orgData.schoolId} in the ROAR database.`);\n                    }\n                });\n                orgData = Object.assign(Object.assign({}, orgData), { districtId });\n            }\n            const orgId = yield (0, firestore_1.addDoc)((0, firestore_1.collection)(this.admin.db, orgsCollection), orgData).then((docRef) => __awaiter(this, void 0, void 0, function* () {\n                yield (0, firestore_1.setDoc)((0, firestore_1.doc)(this.app.db, orgsCollection, docRef.id), orgData);\n                return docRef.id;\n            }));\n            if (orgsCollection === 'schools') {\n                const districtId = orgData.districtId;\n                const adminDistrictRef = (0, firestore_1.doc)(this.admin.db, 'districts', districtId);\n                const appDistrictRef = (0, firestore_1.doc)(this.app.db, 'districts', districtId);\n                yield (0, firestore_1.updateDoc)(adminDistrictRef, { schools: (0, firestore_1.arrayUnion)(orgId) });\n                yield (0, firestore_1.updateDoc)(appDistrictRef, { schools: (0, firestore_1.arrayUnion)(orgId) });\n            }\n            else if (orgsCollection === 'classes') {\n                const schoolId = orgData.schoolId;\n                const adminSchoolRef = (0, firestore_1.doc)(this.admin.db, 'schools', schoolId);\n                const appSchoolRef = (0, firestore_1.doc)(this.app.db, 'schools', schoolId);\n                yield (0, firestore_1.updateDoc)(adminSchoolRef, { classes: (0, firestore_1.arrayUnion)(orgId) });\n                yield (0, firestore_1.updateDoc)(appSchoolRef, { classes: (0, firestore_1.arrayUnion)(orgId) });\n            }\n            return orgId;\n        });\n    }\n    getUsersByAssignment({ assignmentId, orgs, countOnly = false, includeScores = false, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            this._verifyAdmin();\n            return (0, query_admin_1.getUsersByAssignment)({\n                db: this.admin.db,\n                assessmentDb: this.app.db,\n                assignmentId,\n                orgs,\n                countOnly,\n                includeScores,\n            });\n        });\n    }\n    registerTaskVariant({ taskId, taskName, taskDescription, taskImage, taskURL, variantName, variantDescription, variantParams = {}, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._verifyAuthentication();\n            this._verifyAdmin();\n            const task = new task_1.RoarTaskVariant({\n                db: this.app.db,\n                taskId,\n                taskName,\n                taskDescription,\n                taskImage,\n                taskURL,\n                variantName,\n                variantDescription,\n                variantParams,\n            });\n            yield task.toFirestore();\n            return task;\n        });\n    }\n}\nexports.RoarFirekit = RoarFirekit;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserType = void 0;\nvar UserType;\n(function (UserType) {\n    UserType[\"admin\"] = \"admin\";\n    UserType[\"educator\"] = \"educator\";\n    UserType[\"student\"] = \"student\";\n    UserType[\"caregiver\"] = \"caregiver\";\n    UserType[\"guest\"] = \"guest\";\n    UserType[\"researcher\"] = \"researcher\";\n})(UserType = exports.UserType || (exports.UserType = {}));\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getUsersByAssignment = exports.getAdministrations = exports.getUsersByOrgs = exports.buildQueryByAssignment = exports.buildQueryByOrgs = void 0;\nconst firestore_1 = require(\"firebase/firestore\");\nconst util_1 = require(\"./util\");\nconst flatten_1 = __importDefault(require(\"lodash/flatten\"));\nconst union_1 = __importDefault(require(\"lodash/union\"));\nconst uniqBy_1 = __importDefault(require(\"lodash/uniqBy\"));\nconst query_assessment_1 = require(\"./query-assessment\");\nconst buildQueryByOrgs = ({ db, collectionName, nested, isSuperAdmin = false, orgs }) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    const collectionRef = (0, firestore_1.collection)(db, collectionName);\n    if (!orgs) {\n        if (isSuperAdmin)\n            return (0, firestore_1.query)(collectionRef);\n        throw new Error('Orgs are required if user is not a super admin');\n    }\n    // Cloud Firestore limits a query to a maximum of 30 disjunctions in disjunctive normal form.\n    // Detect if there are too many `array-contains` comparisons\n    if ((0, union_1.default)(...Object.values(orgs)).length > 30) {\n        console.error('Too many orgs', orgs);\n        throw new Error('Too many orgs to query. Please chunk orgs such that the total number of orgs is less than 30.');\n    }\n    const orgQueryParams = [];\n    if (nested) {\n        if ((_a = orgs.districts) === null || _a === void 0 ? void 0 : _a.length)\n            orgQueryParams.push((0, firestore_1.where)('districts.current', 'array-contains-any', orgs.districts));\n        if ((_b = orgs.schools) === null || _b === void 0 ? void 0 : _b.length)\n            orgQueryParams.push((0, firestore_1.where)('schools.current', 'array-contains-any', orgs.schools));\n        if ((_c = orgs.classes) === null || _c === void 0 ? void 0 : _c.length)\n            orgQueryParams.push((0, firestore_1.where)('classes.current', 'array-contains-any', orgs.classes));\n        if ((_d = orgs.groups) === null || _d === void 0 ? void 0 : _d.length)\n            orgQueryParams.push((0, firestore_1.where)('groups.current', 'array-contains-any', orgs.groups));\n        if ((_e = orgs.families) === null || _e === void 0 ? void 0 : _e.length)\n            orgQueryParams.push((0, firestore_1.where)('families.current', 'array-contains-any', orgs.families));\n    }\n    else {\n        if ((_f = orgs.districts) === null || _f === void 0 ? void 0 : _f.length)\n            orgQueryParams.push((0, firestore_1.where)('districts', 'array-contains-any', orgs.districts));\n        if ((_g = orgs.schools) === null || _g === void 0 ? void 0 : _g.length)\n            orgQueryParams.push((0, firestore_1.where)('schools', 'array-contains-any', orgs.schools));\n        if ((_h = orgs.classes) === null || _h === void 0 ? void 0 : _h.length)\n            orgQueryParams.push((0, firestore_1.where)('classes', 'array-contains-any', orgs.classes));\n        if ((_j = orgs.groups) === null || _j === void 0 ? void 0 : _j.length)\n            orgQueryParams.push((0, firestore_1.where)('groups', 'array-contains-any', orgs.groups));\n        if ((_k = orgs.families) === null || _k === void 0 ? void 0 : _k.length)\n            orgQueryParams.push((0, firestore_1.where)('families', 'array-contains-any', orgs.families));\n    }\n    if (orgQueryParams.length === 0)\n        return undefined;\n    return (0, firestore_1.query)(collectionRef, (0, firestore_1.or)(...orgQueryParams));\n};\nexports.buildQueryByOrgs = buildQueryByOrgs;\nconst buildQueryByAssignment = ({ db, assignmentId, orgs, }) => {\n    const collectionRef = (0, firestore_1.collectionGroup)(db, 'assignments');\n    const assignmentIdQuery = (0, firestore_1.where)('id', '==', assignmentId);\n    if (orgs) {\n        // Cloud Firestore limits a query to a maximum of 30 disjunctions in disjunctive normal form.\n        // We cap it at 25 so that we can combine with the assignment ID query as well.\n        // Detect if there are too many `array-contains` comparisons\n        if ((0, union_1.default)(...Object.values(orgs)).length > 25) {\n            throw new Error('Too many orgs to query. Please chunk orgs such that the total number of orgs is less than 30.');\n        }\n        const orgQueryParams = [];\n        if (orgs.districts.length)\n            orgQueryParams.push((0, firestore_1.where)('assigningOrgs.districts', 'array-contains-any', orgs.districts));\n        if (orgs.schools.length)\n            orgQueryParams.push((0, firestore_1.where)('assigningOrgs.schools', 'array-contains-any', orgs.schools));\n        if (orgs.classes.length)\n            orgQueryParams.push((0, firestore_1.where)('assigningOrgs.classes', 'array-contains-any', orgs.classes));\n        if (orgs.groups.length)\n            orgQueryParams.push((0, firestore_1.where)('assigningOrgs.groups', 'array-contains-any', orgs.groups));\n        if (orgs.families.length)\n            orgQueryParams.push((0, firestore_1.where)('assigningOrgs.families', 'array-contains-any', orgs.families));\n        if (orgQueryParams.length === 0) {\n            return undefined;\n        }\n        return (0, firestore_1.query)(collectionRef, (0, firestore_1.and)(assignmentIdQuery, (0, firestore_1.or)(...orgQueryParams)));\n    }\n    else {\n        return (0, firestore_1.query)(collectionRef, assignmentIdQuery);\n    }\n};\nexports.buildQueryByAssignment = buildQueryByAssignment;\nconst getUsersFromQuery = ({ query, countOnly = false }) => __awaiter(void 0, void 0, void 0, function* () {\n    if (countOnly) {\n        const snapshot = yield (0, firestore_1.getCountFromServer)(query);\n        return snapshot.data().count;\n    }\n    else {\n        const users = [];\n        const snapshot = yield (0, firestore_1.getDocs)(query);\n        snapshot.forEach((docSnap) => {\n            users.push(Object.assign({ id: docSnap.id }, docSnap.data()));\n        });\n        return users;\n    }\n});\nconst getUsersByOrgs = ({ db, orgs, isSuperAdmin = false, countOnly = false, }) => __awaiter(void 0, void 0, void 0, function* () {\n    const chunkedOrgs = (0, util_1.chunkOrgLists)({ orgs, chunkSize: 20 });\n    const promises = [];\n    for (const orgsChunk of chunkedOrgs) {\n        const userQuery = (0, exports.buildQueryByOrgs)({\n            db,\n            collectionName: 'users',\n            nested: true,\n            isSuperAdmin,\n            orgs: orgsChunk,\n        });\n        if (userQuery) {\n            promises.push(getUsersFromQuery({ query: userQuery, countOnly }));\n        }\n    }\n    const users = yield Promise.all(promises);\n    if (countOnly) {\n        return users.reduce((prev, curr) => prev + curr, 0);\n    }\n    return (0, uniqBy_1.default)((0, flatten_1.default)(users), (u) => u.id);\n});\nexports.getUsersByOrgs = getUsersByOrgs;\nconst getAdministrationsFromQuery = ({ query, includeStats = true, }) => __awaiter(void 0, void 0, void 0, function* () {\n    const administrations = [];\n    const snapshot = yield (0, firestore_1.getDocs)(query);\n    for (const docSnap of snapshot.docs) {\n        const docData = docSnap.data();\n        if (includeStats) {\n            const completionDocRef = (0, firestore_1.doc)(docSnap.ref, 'stats', 'completion');\n            const completionDocSnap = yield (0, firestore_1.getDoc)(completionDocRef);\n            if (completionDocSnap.exists()) {\n                docData.stats = completionDocSnap.data();\n            }\n        }\n        administrations.push(Object.assign({ id: docSnap.id }, docData));\n    }\n    return administrations;\n});\nconst getAdministrations = ({ db, orgs, isSuperAdmin = false, includeStats = true, }) => __awaiter(void 0, void 0, void 0, function* () {\n    const chunkedOrgs = (0, util_1.chunkOrgLists)({ orgs, chunkSize: 20 });\n    const promises = [];\n    for (const orgsChunk of chunkedOrgs) {\n        const q = (0, exports.buildQueryByOrgs)({\n            db,\n            collectionName: 'administrations',\n            nested: false,\n            orgs: orgsChunk,\n            isSuperAdmin,\n        });\n        if (q) {\n            promises.push(getAdministrationsFromQuery({ query: q, includeStats: includeStats }));\n        }\n    }\n    const administrations = (0, flatten_1.default)(yield Promise.all(promises));\n    return (0, uniqBy_1.default)(administrations, (a) => a.id);\n});\nexports.getAdministrations = getAdministrations;\nconst getAssignmentData = ({ docSnap, assessmentDb, includeScores = false, }) => __awaiter(void 0, void 0, void 0, function* () {\n    // Now grab the user document and add it to the results.\n    const userRef = docSnap.ref.parent.parent;\n    if (!userRef) {\n        return undefined;\n    }\n    const userDocSnapPromise = (0, firestore_1.getDoc)(userRef);\n    const assignmentData = docSnap.data();\n    const assessments = assignmentData.assessments;\n    const scoresPromises = [];\n    if (includeScores) {\n        // To retrieve scores, we first build an object where the keys are\n        // the task IDs of each assessment and the values are the scores\n        // for the run associated with that assessment.\n        console.log('userRef', userRef);\n        for (const assessment of assessments) {\n            const runId = assessment.runId;\n            if (runId) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                scoresPromises.push((0, query_assessment_1.getRunById)({ db: assessmentDb, runId: runId })\n                    .catch((e) => {\n                    console.log('caught error', e);\n                    if (!e.message.includes('Could not find run with id'))\n                        throw e;\n                })\n                    .then((runData) => [assessment.taskId, runData === null || runData === void 0 ? void 0 : runData.scores]));\n            }\n        }\n    }\n    const [userDocSnap, scores] = yield Promise.all([userDocSnapPromise, Promise.all(scoresPromises)]);\n    if (includeScores) {\n        // Now we iterate over the scores and insert them into the\n        // assessments array of objects.\n        for (const [taskId, score] of scores) {\n            if (score && taskId) {\n                const assessmentIdx = assessments.findIndex((a) => a.taskId === taskId);\n                const oldAssessmentInfo = assessments[assessmentIdx];\n                const newAssessmentInfo = Object.assign(Object.assign({}, oldAssessmentInfo), { scores: score });\n                assessments[assessmentIdx] = newAssessmentInfo;\n            }\n        }\n        assignmentData.assessments = assessments;\n    }\n    if (userDocSnap.exists()) {\n        return {\n            id: userDocSnap.id,\n            user: userDocSnap.data(),\n            assignment: assignmentData,\n        };\n    }\n});\nconst getUsersByAssignmentQuery = ({ assessmentDb, query, countOnly = false, includeScores = false, }) => __awaiter(void 0, void 0, void 0, function* () {\n    if (countOnly) {\n        const snapshot = yield (0, firestore_1.getCountFromServer)(query);\n        return snapshot.data().count;\n    }\n    else {\n        const assignmentPromises = [];\n        const snapshot = yield (0, firestore_1.getDocs)(query);\n        for (const docSnap of snapshot.docs) {\n            assignmentPromises.push(getAssignmentData({ docSnap, assessmentDb, includeScores }));\n        }\n        const assignments = yield Promise.all(assignmentPromises);\n        return assignments;\n    }\n});\nconst getUsersByAssignment = ({ db, assessmentDb, assignmentId, orgs, countOnly = false, includeScores = false, }) => __awaiter(void 0, void 0, void 0, function* () {\n    if (includeScores && !assessmentDb) {\n        throw new Error('You must provide an assessmentDb if you want to include scores.');\n    }\n    const assignmentsPromises = [];\n    if (orgs) {\n        const chunkedOrgs = (0, util_1.chunkOrgLists)({ orgs, chunkSize: 20 });\n        for (const orgsChunk of chunkedOrgs) {\n            const q = (0, exports.buildQueryByAssignment)({\n                db,\n                assignmentId,\n                orgs: orgsChunk,\n            });\n            if (q) {\n                assignmentsPromises.push(getUsersByAssignmentQuery({\n                    assessmentDb,\n                    query: q,\n                    countOnly,\n                    includeScores,\n                }));\n            }\n        }\n    }\n    const assignments = yield Promise.all(assignmentsPromises);\n    if (countOnly) {\n        return assignments.reduce((prev, curr) => prev + curr, 0);\n    }\n    const assignmentsFlat = (0, flatten_1.default)(assignments).filter((a) => a !== undefined);\n    return (0, uniqBy_1.default)(assignmentsFlat, (a) => a.id);\n});\nexports.getUsersByAssignment = getUsersByAssignment;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRunById = exports.getTaskAndVariant = exports.getRunTrials = exports.getUserRuns = exports.formatDate = exports.queryUsers = exports.getVariants = exports.getTasks = exports.getOrganizations = void 0;\nconst firestore_1 = require(\"firebase/firestore\");\nconst util_1 = require(\"./util\");\nconst chunk_1 = __importDefault(require(\"lodash/chunk\"));\nconst getOrganizations = ({ db, orgType, orgIds, pageLimit = 15, startAfterDocId, }) => __awaiter(void 0, void 0, void 0, function* () {\n    let q;\n    if (!orgIds) {\n        if (startAfterDocId) {\n            q = (0, firestore_1.query)((0, firestore_1.collection)(db, orgType), (0, firestore_1.orderBy)((0, firestore_1.documentId)()), (0, firestore_1.startAfter)(startAfterDocId), (0, firestore_1.limit)(pageLimit));\n        }\n        else {\n            q = (0, firestore_1.query)((0, firestore_1.collection)(db, orgType), (0, firestore_1.orderBy)((0, firestore_1.documentId)()), (0, firestore_1.limit)(pageLimit));\n        }\n        const snapshot = yield (0, firestore_1.getDocs)(q);\n        return snapshot.docs.map((doc) => {\n            const docData = doc.data();\n            docData.id = doc.id;\n            return docData;\n        });\n    }\n    let remainingOrgIds = orgIds.sort();\n    if (startAfterDocId) {\n        const startIndex = remainingOrgIds.indexOf(startAfterDocId) + 1;\n        remainingOrgIds = remainingOrgIds.slice(startIndex, startIndex + pageLimit);\n    }\n    const orgs = [];\n    const maxQueryDisjunctions = 10;\n    for (const _orgsChunk of (0, chunk_1.default)(remainingOrgIds, maxQueryDisjunctions)) {\n        q = (0, firestore_1.query)((0, firestore_1.collection)(db, orgType), (0, firestore_1.where)((0, firestore_1.documentId)(), 'in', _orgsChunk));\n        const snapshot = yield (0, firestore_1.getDocs)(q);\n        orgs.push(...snapshot.docs.map((doc) => {\n            const docData = doc.data();\n            docData.id = doc.id;\n            return docData;\n        }));\n    }\n    return orgs;\n});\nexports.getOrganizations = getOrganizations;\nconst getTasks = (db, requireRegistered = true) => __awaiter(void 0, void 0, void 0, function* () {\n    let q;\n    if (requireRegistered) {\n        q = (0, firestore_1.query)((0, firestore_1.collection)(db, 'tasks'), (0, firestore_1.where)('registered', '==', true));\n    }\n    else {\n        q = (0, firestore_1.query)((0, firestore_1.collection)(db, 'tasks'));\n    }\n    const tasksSnapshot = yield (0, firestore_1.getDocs)(q);\n    const tasks = [];\n    tasksSnapshot.forEach((doc) => {\n        const docData = doc.data();\n        tasks.push(Object.assign({ id: doc.id, image: docData.image, name: docData.name, description: docData.description, registered: docData.registered }, docData));\n    });\n    return tasks;\n});\nexports.getTasks = getTasks;\nconst getVariants = (db, requireRegistered = true) => __awaiter(void 0, void 0, void 0, function* () {\n    const taskVariants = [];\n    const tasks = yield (0, exports.getTasks)(db, requireRegistered);\n    for (const task of tasks) {\n        let q;\n        if (requireRegistered) {\n            q = (0, firestore_1.query)((0, firestore_1.collection)(db, 'tasks', task.id, 'variants'), (0, firestore_1.where)('registered', '==', true));\n        }\n        else {\n            q = (0, firestore_1.query)((0, firestore_1.collection)(db, 'tasks', task.id, 'variants'));\n        }\n        const snapshot = yield (0, firestore_1.getDocs)(q);\n        snapshot.forEach((doc) => {\n            if (doc.id !== 'empty') {\n                const docData = doc.data();\n                taskVariants.push({\n                    id: doc.id,\n                    task,\n                    variant: Object.assign({ id: doc.id, name: docData.name, params: docData.params, registered: docData.registered, lastUpdated: docData.lastUpdated }, docData),\n                });\n            }\n        });\n    }\n    return taskVariants;\n});\nexports.getVariants = getVariants;\nconst queryUsers = (rootDoc, taskIds, variantIds) => __awaiter(void 0, void 0, void 0, function* () {\n    const users = [];\n    if (taskIds.length > 0) {\n        let userQuery;\n        if (variantIds.length > 0) {\n            userQuery = (0, firestore_1.query)((0, firestore_1.collection)(rootDoc, 'users'), (0, firestore_1.where)('variants', 'array-contains-any', variantIds));\n        }\n        else {\n            userQuery = (0, firestore_1.query)((0, firestore_1.collection)(rootDoc, 'users'), (0, firestore_1.where)('tasks', 'array-contains-any', taskIds));\n        }\n        const usersSnapshot = yield (0, firestore_1.getDocs)(userQuery);\n        usersSnapshot.forEach((doc) => {\n            const { districtIds, schoolIds, groupIds, classIds } = (0, util_1.getOrgs)(doc.data());\n            users.push({\n                roarUid: doc.id,\n                districts: districtIds,\n                schools: schoolIds,\n                groups: groupIds,\n                classes: classIds,\n            });\n        });\n    }\n    return users;\n});\nexports.queryUsers = queryUsers;\nconst formatDate = (date) => date === null || date === void 0 ? void 0 : date.toLocaleString('en-US');\nexports.formatDate = formatDate;\nconst getUserRuns = (rootDoc, user, filters, taskIds, variantIds) => __awaiter(void 0, void 0, void 0, function* () {\n    const runs = [];\n    const { roarUid, districts, schools, classes, groups } = user;\n    const filterOrgs = [\n        (0, util_1.userHasSelectedOrgs)(districts, filters.districts),\n        (0, util_1.userHasSelectedOrgs)(schools, filters.schools),\n        (0, util_1.userHasSelectedOrgs)(classes, filters.classes),\n        (0, util_1.userHasSelectedOrgs)(groups, filters.groups),\n    ];\n    const isUserSelected = filterOrgs.every((element) => element === true);\n    if (isUserSelected) {\n        let runsQuery;\n        if (variantIds.length > 0) {\n            runsQuery = (0, firestore_1.query)((0, firestore_1.collection)(rootDoc, 'users', roarUid, 'runs'), (0, firestore_1.where)('variantId', 'in', variantIds));\n        }\n        else {\n            runsQuery = (0, firestore_1.query)((0, firestore_1.collection)(rootDoc, 'users', roarUid, 'runs'), (0, firestore_1.where)('taskId', 'in', taskIds));\n        }\n        const runsSnapshot = yield (0, firestore_1.getDocs)(runsQuery);\n        runsSnapshot.forEach((doc) => {\n            var _a, _b;\n            const firestoreRun = doc.data();\n            const runData = {\n                roarUid: roarUid,\n                runId: doc.id,\n            };\n            runData.timeStarted = (0, exports.formatDate)((_a = firestoreRun.timeStarted) === null || _a === void 0 ? void 0 : _a.toDate()) || null;\n            runData.timeFinished = (0, exports.formatDate)((_b = firestoreRun.timeFinished) === null || _b === void 0 ? void 0 : _b.toDate()) || null;\n            runData.task = { id: firestoreRun.taskId };\n            runData.variant = { id: firestoreRun.variantId };\n            runData.district = { id: firestoreRun.districtId };\n            runData.school = { id: firestoreRun.schoolId };\n            runData.class = { id: firestoreRun.classId };\n            runData.group = { id: firestoreRun.groupId };\n            delete firestoreRun.taskRef;\n            delete firestoreRun.variantRef;\n            delete firestoreRun.taskId;\n            delete firestoreRun.variantId;\n            delete firestoreRun.districtId;\n            delete firestoreRun.schoolId;\n            delete firestoreRun.classId;\n            delete firestoreRun.groupId;\n            delete firestoreRun.timeStarted;\n            delete firestoreRun.timeFinished;\n            runs.push(Object.assign(Object.assign({}, runData), firestoreRun));\n        });\n    }\n    return runs;\n});\nexports.getUserRuns = getUserRuns;\nconst getRunTrials = (rootDoc, run) => __awaiter(void 0, void 0, void 0, function* () {\n    const trialsQuery = (0, firestore_1.query)((0, firestore_1.collection)(rootDoc, 'users', run.roarUid, 'runs', run.runId, 'trials'));\n    const trialsSnapshot = yield (0, firestore_1.getDocs)(trialsQuery);\n    const trials = [];\n    trialsSnapshot.forEach((doc) => {\n        var _a, _b;\n        const firestoreTrial = doc.data();\n        const trialData = {\n            roarUid: run.roarUid,\n            runId: run.runId,\n        };\n        trialData.timeStarted = (0, exports.formatDate)((_a = firestoreTrial.timeStarted) === null || _a === void 0 ? void 0 : _a.toDate()) || null;\n        trialData.timeFinished = (0, exports.formatDate)((_b = firestoreTrial.timeFinished) === null || _b === void 0 ? void 0 : _b.toDate()) || null;\n        trialData.task = { id: firestoreTrial.taskId };\n        trialData.variant = { id: firestoreTrial.variantId };\n        trialData.district = { id: firestoreTrial.districtId };\n        trialData.school = { id: firestoreTrial.schoolId };\n        trialData.class = { id: firestoreTrial.classId };\n        trialData.group = { id: firestoreTrial.groupId };\n        delete firestoreTrial.taskId;\n        delete firestoreTrial.variantId;\n        delete firestoreTrial.districtId;\n        delete firestoreTrial.schoolId;\n        delete firestoreTrial.classId;\n        delete firestoreTrial.groupId;\n        delete firestoreTrial.timeStarted;\n        delete firestoreTrial.timeFinished;\n        trials.push(Object.assign(Object.assign({}, trialData), firestoreTrial));\n    });\n});\nexports.getRunTrials = getRunTrials;\nconst getTaskAndVariant = ({ db, taskId, variantParams, }) => __awaiter(void 0, void 0, void 0, function* () {\n    const taskRef = (0, firestore_1.doc)(db, 'tasks', taskId);\n    const variantsCollectionRef = (0, firestore_1.collection)(taskRef, 'variants');\n    const docSnap = yield (0, firestore_1.getDoc)(taskRef);\n    if (docSnap.exists()) {\n        const taskData = docSnap.data();\n        // Check to see if variant exists already by querying for a match on the params.\n        const q = (0, firestore_1.query)(variantsCollectionRef, (0, firestore_1.where)('params', '==', variantParams), (0, firestore_1.limit)(1));\n        const querySnapshot = yield (0, firestore_1.getDocs)(q);\n        let variantData;\n        querySnapshot.forEach((docRef) => {\n            variantData = Object.assign(Object.assign({}, docRef.data()), { id: docRef.id });\n        });\n        return {\n            task: taskData,\n            variant: variantData,\n        };\n    }\n    return {\n        task: undefined,\n        variant: undefined,\n    };\n});\nexports.getTaskAndVariant = getTaskAndVariant;\nconst getRunById = ({ db, runId }) => __awaiter(void 0, void 0, void 0, function* () {\n    const q = (0, firestore_1.query)((0, firestore_1.collectionGroup)(db, 'runs'), (0, firestore_1.where)('id', '==', runId));\n    const runsSnapshot = yield (0, firestore_1.getDocs)(q);\n    if (runsSnapshot.empty) {\n        throw new Error(`Could not find run with id: ${runId}`);\n    }\n    else if (runsSnapshot.docs.length > 1) {\n        throw new Error(`Found multiple runs with id: ${runId}`);\n    }\n    else {\n        return runsSnapshot.docs[0].data();\n    }\n});\nexports.getRunById = getRunById;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chunkOrgLists = exports.getTreeTableOrgs = exports.crc32String = exports.mergeGameParams = exports.waitFor = exports.emptyOrgList = exports.emptyOrg = exports.userHasSelectedOrgs = exports.getOrgs = exports.mergeIds = exports.initializeFirebaseProject = exports.AuthPersistence = exports.safeInitializeApp = exports.replaceValues = exports.removeUndefined = exports.removeNull = void 0;\nconst app_1 = require(\"firebase/app\");\nconst auth_1 = require(\"firebase/auth\");\nconst firestore_1 = require(\"firebase/firestore\");\nconst functions_1 = require(\"firebase/functions\");\nconst chunk_1 = __importDefault(require(\"lodash/chunk\"));\nconst difference_1 = __importDefault(require(\"lodash/difference\"));\nconst flatten_1 = __importDefault(require(\"lodash/flatten\"));\nconst get_1 = __importDefault(require(\"lodash/get\"));\nconst isEmpty_1 = __importDefault(require(\"lodash/isEmpty\"));\nconst isEqual_1 = __importDefault(require(\"lodash/isEqual\"));\nconst isPlainObject_1 = __importDefault(require(\"lodash/isPlainObject\"));\nconst mergeWith_1 = __importDefault(require(\"lodash/mergeWith\"));\nconst remove_1 = __importDefault(require(\"lodash/remove\"));\nconst vue_1 = require(\"vue\");\nconst crc_32_1 = require(\"crc-32\");\n/** Remove null attributes from an object\n * @function\n * @param {Object} obj - Object to remove null attributes from\n * @returns {Object} Object with null attributes removed\n */\nconst removeNull = (obj) => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    return Object.fromEntries(Object.entries(obj).filter(([_, v]) => v !== null));\n};\nexports.removeNull = removeNull;\n/** Remove undefined attributes from an object\n * @function\n * @param {Object} obj - Object to remove undefined attributes from\n * @returns {Object} Object with undefined attributes removed\n */\nconst removeUndefined = (obj) => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    return Object.fromEntries(Object.entries(obj).filter(([_, v]) => v !== undefined));\n};\nexports.removeUndefined = removeUndefined;\n/** Recursively replace values in an object\n * @function\n * @param {Object} obj - Object to recursively replace values in\n * @param {unknown} valueToReplace - Value to replace\n * @param {unknown} replacementValue - Replacement value\n * @returns {Object} Object with values recursively replaced\n */\nconst replaceValues = (obj, valueToReplace = undefined, replacementValue = null) => {\n    return Object.fromEntries(Object.entries(obj).map(([key, value]) => {\n        if ((0, isPlainObject_1.default)(value)) {\n            return [key, (0, exports.replaceValues)(value, valueToReplace, replacementValue)];\n        }\n        return [key, value === valueToReplace ? replacementValue : value];\n    }));\n};\nexports.replaceValues = replaceValues;\nconst safeInitializeApp = (config, name) => {\n    try {\n        const app = (0, app_1.getApp)(name);\n        if (!(0, isEqual_1.default)(app.options, config)) {\n            throw new Error(`There is an existing firebase app named ${name} with different configuration options.`);\n        }\n        return app;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }\n    catch (error) {\n        if (error.code === 'app/no-app') {\n            return (0, app_1.initializeApp)(config, name);\n        }\n        else {\n            throw error;\n        }\n    }\n};\nexports.safeInitializeApp = safeInitializeApp;\nvar AuthPersistence;\n(function (AuthPersistence) {\n    AuthPersistence[\"local\"] = \"local\";\n    AuthPersistence[\"session\"] = \"session\";\n    AuthPersistence[\"none\"] = \"none\";\n})(AuthPersistence = exports.AuthPersistence || (exports.AuthPersistence = {}));\nconst initializeFirebaseProject = (config, name, authPersistence = AuthPersistence.session, markRawConfig = {}) => __awaiter(void 0, void 0, void 0, function* () {\n    const optionallyMarkRaw = (productKey, productInstance) => {\n        if ((0, get_1.default)(markRawConfig, productKey)) {\n            return (0, vue_1.markRaw)(productInstance);\n        }\n        else {\n            return productInstance;\n        }\n    };\n    if (config.emulatorPorts) {\n        const app = (0, app_1.initializeApp)({ projectId: config.projectId, apiKey: config.apiKey }, name);\n        const ports = config.emulatorPorts;\n        const auth = optionallyMarkRaw('auth', (0, auth_1.getAuth)(app));\n        const db = optionallyMarkRaw('db', (0, firestore_1.getFirestore)(app));\n        const functions = optionallyMarkRaw('functions', (0, functions_1.getFunctions)(app));\n        (0, firestore_1.connectFirestoreEmulator)(db, '127.0.0.1', ports.db);\n        (0, functions_1.connectFunctionsEmulator)(functions, '127.0.0.1', ports.functions);\n        const originalInfo = console.info;\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        console.info = () => { };\n        (0, auth_1.connectAuthEmulator)(auth, `http://127.0.0.1:${ports.auth}`);\n        console.info = originalInfo;\n        return {\n            firebaseApp: app,\n            auth,\n            db,\n            functions,\n        };\n    }\n    else {\n        const app = (0, exports.safeInitializeApp)(config, name);\n        const kit = {\n            firebaseApp: app,\n            auth: optionallyMarkRaw('auth', (0, auth_1.getAuth)(app)),\n            db: optionallyMarkRaw('db', (0, firestore_1.getFirestore)(app)),\n            functions: optionallyMarkRaw('functions', (0, functions_1.getFunctions)(app)),\n        };\n        // Auth state persistence is set with ``setPersistence`` and specifies how a\n        // user session is persisted on a device. We choose in session persistence by\n        // default because many students will access the ROAR on shared devices in the\n        // classroom.\n        if (authPersistence === AuthPersistence.session) {\n            yield (0, auth_1.setPersistence)(kit.auth, auth_1.browserSessionPersistence);\n        }\n        else if (authPersistence === AuthPersistence.local) {\n            yield (0, auth_1.setPersistence)(kit.auth, auth_1.browserLocalPersistence);\n        }\n        else if (authPersistence === AuthPersistence.none) {\n            yield (0, auth_1.setPersistence)(kit.auth, auth_1.inMemoryPersistence);\n        }\n        return kit;\n    }\n});\nexports.initializeFirebaseProject = initializeFirebaseProject;\n/** Get unique entries from a single id string and an array of id strings\n *\n * @function\n * @param {string} id - a single id string\n * @param {string[]} idArray - an array of id strings\n * @returns {string[]} the merged array of unique ids\n */\nconst mergeIds = (id, idArray) => {\n    const resultIds = [];\n    if (id)\n        resultIds.push(id);\n    if (idArray && idArray.length)\n        resultIds.push(...idArray);\n    return [...new Set(resultIds)];\n};\nexports.mergeIds = mergeIds;\nconst getOrgs = (docData) => {\n    const { districtId, schoolId, schools, classId, classes, groupId, groups } = docData;\n    const districtIds = (0, exports.mergeIds)(districtId, undefined);\n    const schoolIds = (0, exports.mergeIds)(schoolId, schools);\n    const classIds = (0, exports.mergeIds)(classId, classes);\n    const groupIds = (0, exports.mergeIds)(groupId, groups);\n    return {\n        districtIds,\n        schoolIds,\n        classIds,\n        groupIds,\n    };\n};\nexports.getOrgs = getOrgs;\nconst userHasSelectedOrgs = (usersOrgs, selectedOrgs) => {\n    // If the selected org list is empty, assume that the user wants all users\n    if (selectedOrgs.length === 0) {\n        return true;\n    }\n    return Boolean(usersOrgs.filter((value) => selectedOrgs.includes(value)).length);\n};\nexports.userHasSelectedOrgs = userHasSelectedOrgs;\nconst emptyOrg = () => {\n    return {\n        current: [],\n        all: [],\n        dates: {},\n    };\n};\nexports.emptyOrg = emptyOrg;\nconst emptyOrgList = () => {\n    return {\n        districts: [],\n        schools: [],\n        classes: [],\n        groups: [],\n        families: [],\n    };\n};\nexports.emptyOrgList = emptyOrgList;\nconst waitFor = (conditionFunction) => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const poll = (resolve) => {\n        if (conditionFunction())\n            resolve();\n        else\n            setTimeout(() => poll(resolve), 300);\n    };\n    return new Promise(poll);\n};\nexports.waitFor = waitFor;\n/**\n * Merge new game parameters with old parameters with constraints\n *\n * The constraints are:\n * - no new parameters may be added,\n * - no old parameters may be removed,\n * - any parameters that have been changed must have had ``null`` values in ``oldParams``\n *\n * @param oldParams - Old game parameters\n * @param newParams - New game parameters\n * @returns merged game parameters\n */\nconst mergeGameParams = (oldParams, newParams) => {\n    let keysAdded = false;\n    const customizer = (oldValue, newValue, key) => {\n        if (oldValue === null) {\n            return newValue;\n        }\n        if ((0, isEqual_1.default)(oldValue, newValue)) {\n            return newValue;\n        }\n        if (oldValue === undefined && newValue !== undefined) {\n            keysAdded = true;\n            return newValue;\n        }\n        else {\n            throw new Error(`Attempted to change previously non-null value with key ${key}`);\n        }\n    };\n    const merged = (0, mergeWith_1.default)(Object.assign({}, oldParams), newParams, customizer);\n    const differentKeys = (0, difference_1.default)(Object.keys(merged), Object.keys(newParams));\n    if (!(0, isEmpty_1.default)(differentKeys)) {\n        throw new Error(`Detected deleted keys: ${differentKeys.join(', ')}`);\n    }\n    return {\n        keysAdded,\n        merged,\n    };\n};\nexports.mergeGameParams = mergeGameParams;\nconst crc32String = (inputString) => {\n    const modulo = (a, b) => {\n        return a - Math.floor(a / b) * b;\n    };\n    const toUint32 = (x) => {\n        return modulo(x, Math.pow(2, 32));\n    };\n    return toUint32((0, crc_32_1.str)(inputString)).toString(16);\n};\nexports.crc32String = crc32String;\nconst treeTableFormat = (orgs, orgType, startIndex = 0) => {\n    return orgs.map((element, index) => ({\n        key: (index + startIndex).toString(),\n        data: Object.assign(Object.assign({}, element), { orgType }),\n    }));\n};\nconst getTreeTableOrgs = (inputOrgs) => {\n    const { districts = [], schools = [], classes = [], groups = [], families = [] } = inputOrgs;\n    const ttDistricts = treeTableFormat(districts, 'district');\n    const ttSchools = treeTableFormat(schools, 'school');\n    const ttClasses = treeTableFormat(classes, 'class');\n    let topLevelOrgs = [];\n    if (districts.length) {\n        topLevelOrgs = ttDistricts;\n        for (const _school of ttSchools) {\n            const districtId = _school.data.districtId;\n            const districtIndex = topLevelOrgs.findIndex((district) => district.data.id === districtId);\n            // This will return all classes for this school and also remove them from the classes array.\n            // At the end, we will add any left over classes as orphaned classes\n            const classesForThisSchool = (0, remove_1.default)(ttClasses, (c) => c.data.schoolId === _school.data.id);\n            if (districtIndex !== -1) {\n                const _district = topLevelOrgs[districtIndex];\n                if (_district.children === undefined) {\n                    topLevelOrgs[districtIndex].children = [\n                        Object.assign(Object.assign(Object.assign({}, _school), { key: `${_district.key}-0` }), (classesForThisSchool.length > 0 && {\n                            children: classesForThisSchool.map((element, index) => ({\n                                key: `${_district.key}-0-${index}`,\n                                data: element.data,\n                            })),\n                        })),\n                    ];\n                }\n                else {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    topLevelOrgs[districtIndex].children.push(Object.assign(Object.assign(Object.assign({}, _school), { key: `${_district.key}-${_district.children.length}` }), (classesForThisSchool.length > 0 && {\n                        children: classesForThisSchool.map((element, index) => ({\n                            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                            key: `${_district.key}-${_district.children.length}-${index}`,\n                            data: element.data,\n                        })),\n                    })));\n                }\n            }\n            else {\n                topLevelOrgs.push(Object.assign(Object.assign(Object.assign({}, _school), { key: `${topLevelOrgs.length}` }), (classesForThisSchool.length > 0 && {\n                    children: classesForThisSchool.map((element, index) => ({\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        key: `${topLevelOrgs.length}-${index}`,\n                        data: element.data,\n                    })),\n                })));\n            }\n        }\n        // We have now gone through all of the schools and removed any classes that\n        // belong to the supplied schools. If there are any schools left, they\n        // should either be direct descendants of a district (rare) or they should\n        // be at the top level.\n        for (const _class of ttClasses) {\n            const districtId = _class.data.districtId;\n            const districtIndex = topLevelOrgs.findIndex((district) => district.data.id === districtId);\n            if (districtIndex !== -1) {\n                // Add this class as a direct descendant of the district\n                const _district = topLevelOrgs[districtIndex];\n                if (_district.children === undefined) {\n                    topLevelOrgs[districtIndex].children = [\n                        {\n                            key: `${_district.key}-0`,\n                            data: _class.data,\n                        },\n                    ];\n                }\n                else {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    topLevelOrgs[districtIndex].children.push({\n                        key: `${_district.key}-${_district.children.length}`,\n                        data: _class.data,\n                    });\n                }\n            }\n            else {\n                // Add this class to the top-level orgs\n                topLevelOrgs.push({\n                    key: `${topLevelOrgs.length}`,\n                    data: _class.data,\n                });\n            }\n        }\n    }\n    else if (schools.length) {\n        topLevelOrgs = ttSchools;\n        for (const _class of ttClasses) {\n            const schoolId = _class.data.schoolId;\n            const schoolIndex = topLevelOrgs.findIndex((school) => school.data.id === schoolId);\n            if (schoolIndex !== -1) {\n                const _school = topLevelOrgs[schoolIndex];\n                if (_school.children === undefined) {\n                    topLevelOrgs[schoolIndex].children = [\n                        Object.assign(Object.assign({}, _class), { key: `${_school.key}-0` }),\n                    ];\n                }\n                else {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    topLevelOrgs[schoolIndex].children.push(Object.assign(Object.assign({}, _class), { key: `${_school.key}-${_school.children.length}` }));\n                }\n            }\n            else {\n                topLevelOrgs.push(Object.assign(Object.assign({}, _class), { key: `${topLevelOrgs.length}` }));\n            }\n        }\n    }\n    else if (classes.length) {\n        topLevelOrgs = ttClasses;\n    }\n    const ttGroups = treeTableFormat(groups, 'group', topLevelOrgs.length);\n    topLevelOrgs.push(...ttGroups);\n    const ttFamilies = treeTableFormat(families, 'family', topLevelOrgs.length);\n    topLevelOrgs.push(...ttFamilies);\n    return topLevelOrgs;\n};\nexports.getTreeTableOrgs = getTreeTableOrgs;\nconst chunkOrgLists = ({ orgs, chunkSize = 30 }) => {\n    if (!orgs)\n        return [undefined];\n    const orgPairs = (0, flatten_1.default)(Object.entries(orgs).map(([orgType, orgIds]) => {\n        return orgIds.map((orgId) => [orgType, orgId]);\n    }));\n    if (orgPairs.length <= chunkSize)\n        return [orgs];\n    const chunkedOrgs = (0, chunk_1.default)(orgPairs, chunkSize);\n    return chunkedOrgs.map((chunk) => {\n        const orgChunk = (0, exports.emptyOrgList)();\n        for (const [orgType, orgId] of chunk) {\n            orgChunk[orgType].push(orgId);\n        }\n        return orgChunk;\n    });\n};\nexports.chunkOrgLists = chunkOrgLists;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initializeFirebaseProject = exports.getTreeTableOrgs = exports.emptyOrgList = exports.emptyOrg = exports.RoarTaskVariant = exports.RoarAppUser = exports.RoarAppkit = exports.RoarFirekit = void 0;\nvar firekit_1 = require(\"./firestore/firekit\");\nObject.defineProperty(exports, \"RoarFirekit\", { enumerable: true, get: function () { return firekit_1.RoarFirekit; } });\nvar appkit_1 = require(\"./firestore/app/appkit\");\nObject.defineProperty(exports, \"RoarAppkit\", { enumerable: true, get: function () { return appkit_1.RoarAppkit; } });\nvar user_1 = require(\"./firestore/app/user\");\nObject.defineProperty(exports, \"RoarAppUser\", { enumerable: true, get: function () { return user_1.RoarAppUser; } });\nvar task_1 = require(\"./firestore/app/task\");\nObject.defineProperty(exports, \"RoarTaskVariant\", { enumerable: true, get: function () { return task_1.RoarTaskVariant; } });\nvar util_1 = require(\"./firestore/util\");\nObject.defineProperty(exports, \"emptyOrg\", { enumerable: true, get: function () { return util_1.emptyOrg; } });\nObject.defineProperty(exports, \"emptyOrgList\", { enumerable: true, get: function () { return util_1.emptyOrgList; } });\nObject.defineProperty(exports, \"getTreeTableOrgs\", { enumerable: true, get: function () { return util_1.getTreeTableOrgs; } });\nObject.defineProperty(exports, \"initializeFirebaseProject\", { enumerable: true, get: function () { return util_1.initializeFirebaseProject; } });\n__exportStar(require(\"./firestore/query-admin\"), exports);\n__exportStar(require(\"./firestore/query-assessment\"), exports);\n","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n/* eslint-disable no-underscore-dangle */\nimport path from 'path-browserify';\nimport mime from 'mime-types';\nimport { deviceType, primaryInput } from 'detect-it';\n\n// converts a string to camel case\nexport function camelize(string) {\n  return string.replace(/^([A-Z])|[\\s-_](\\w)/g, function (_0, p1, p2, _1) {\n    if (p2) return p2.toUpperCase();\n    return p1.toLowerCase();\n  });\n}\n\n// get an object where the key is camelize(filename) and the value is the filename\nexport function camelizeFiles(files) {\n  var obj = {};\n  var _iterator = _createForOfIteratorHelper(files),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var filePath = _step.value;\n      var fileName = path.parse(filePath).name;\n      obj[camelize(fileName)] = filePath;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return obj;\n}\n\n/*\nPlays the correct audio based on user response.\nIf user response does not matter, it will play a neutral feedback audio.\nTakes in 3 parameters:\n- responseIsCorrect (boolean || null): if the user's response was correct/incorrect\nOR null if it does matter, ex. true OR null\n- correct/neutral audio (string): path to the audio file, ex. \"http://localhost:8080/audio/feedbackAudio.mp3\"\n- incorrect audio (string): path to the audio file\n*/\n\n/*\nExamples of the function can be called\n\nplayFeedbackAudio(true, 'correct.mp3', 'incorrect.mp3')\nplayFeedbackAudio(null, 'neutral.mp3',)\n*/\n\nexport function playFeedbackAudio(responseIsCorrect, audio1, audio2) {\n  var audioToPlay;\n  if (responseIsCorrect || responseIsCorrect === null) {\n    audioToPlay = audio1;\n  } else {\n    audioToPlay = audio2;\n  }\n  new Audio(audioToPlay).play();\n}\n\n// Gets the app language based on the lng query string. Using this because ROAR apps use i18next.\nexport function getLanguage(setLanguage) {\n  if (setLanguage) return setLanguage;\n  var urlParams = new URLSearchParams(window.location.search);\n  return urlParams.get('lng') || 'en';\n}\n\n// Gets the device type based on the device inputs\nexport function getDevice() {\n  if (deviceType === 'touchOnly' || deviceType === 'hybrid' && primaryInput === 'touch') {\n    return 'mobile';\n  }\n  return 'desktop';\n}\n\n// Returns device-level information of user through the browser window object.\nexport function getDeviceInfo() {\n  var width = window.innerWidth;\n  var height = window.innerHeight;\n  var language = window.navigator.language;\n  var userAgent = window.navigator.userAgent;\n  var userAgentData = window.navigator.userAgentData;\n  return {\n    screen: {\n      width: width,\n      height: height\n    },\n    language: language,\n    userAgent: userAgent,\n    platform: userAgentData.platform,\n    mobile: userAgentData.mobile,\n    engine: userAgentData.brands[0].brand,\n    engineVersion: userAgentData.brands[0].version,\n    browser: userAgentData.brands[1].brand,\n    browserVersion: userAgentData.brands[1].version\n  };\n}\n\n/**\n * Returns the formatted URL based on different conditions for asset type,\n * nesting and default values.\n *\n * @param {string} bucketURI - The bucket URI where the assets are stored.\n * Ex. 'https://storage.googleapis.com/${bucketName}\n * @param {string} filePath - The file path of the asset.\n * @param {string} lng - The language identifier as a ISO 639-1 code. Ex. 'en' for English\n * @param {string} device - The device identifier.\n * @param {string} type - The type of asset category. Can be one of the following:\n * 'device', 'shared', 'shared/device', 'languageSpecific', 'default'.\n * @param {boolean} nested - Indicates if the asset is nested in language specific data.\n *  Default is false.\n * @param {boolean} isDefault - Indicates if the asset is from default data. Default is false.\n * @returns {string} The formatted URL based on the given conditions.\n * Ex. 'https://storage.googleapis.com/${bucketName}/${lng}/${device}/${file}'\n */\n\nexport function getFormattedURL(bucketURI, filePath, lng, device, type, nested, isDefault) {\n  if (isDefault && nested && type === 'device' || nested && type === 'device') {\n    return \"\".concat(bucketURI, \"/\").concat(lng, \"/\").concat(device, \"/\").concat(filePath);\n  }\n  if (isDefault && nested && type === 'shared' || nested && type === 'shared') {\n    return \"\".concat(bucketURI, \"/\").concat(lng, \"/shared/\").concat(filePath);\n  }\n  if (type === 'device') {\n    return \"\".concat(bucketURI, \"/\").concat(device, \"/\").concat(filePath);\n  }\n  if (type === 'shared/device') {\n    return \"\".concat(bucketURI, \"/shared/\").concat(device, \"/\").concat(filePath);\n  }\n  if (type === 'languageSpecific') {\n    return \"\".concat(bucketURI, \"/\").concat(lng, \"/\").concat(filePath);\n  }\n  if (type === 'default') {\n    return \"\".concat(bucketURI, \"/\").concat(filePath);\n  }\n  return \"\".concat(bucketURI, \"/shared/\").concat(filePath);\n}\nexport function getAssetType(asset) {\n  var mimeType = mime.lookup(asset);\n  if (!mimeType) {\n    throw new Error(\"Unrecognized file extension in path: \".concat(asset));\n  }\n  if (mimeType.startsWith('image/')) return 'images';\n  if (mimeType.startsWith('audio/')) return 'audio';\n  if (mimeType.startsWith('video/')) return 'video';\n  throw new Error(\"Unsupported MIME type for file: \".concat(asset, \". Only image, audio, and video files are supported.\"));\n}\n\n/**\n * Calculates and returns age data based on the provided birth month, birth year,\n * age, and age in months.\n *\n * @function getAgeData\n *\n * @param {string|number|null} birthMonth - The month of birth (1-12).\n * If not provided, it will be calculated based on other parameters.\n * @param {string|number|null} birthYear - The year of birth.\n * If not provided, it will be calculated based on other parameters.\n * @param {string|number|null} age - The age in years.\n * If not provided, it will be calculated based on other parameters.\n * @param {string|number|null} ageMonths - The age in months.\n * If not provided, it will be calculated based on other parameters.\n *\n * @returns {Object} ageData - The calculated age data.\n * @returns {number|null} ageData.age - The calculated age in years.\n * @returns {number|null} ageData.ageMonths - The calculated age in months.\n * @returns {number|null} ageData.birthMonth - The calculated or provided month of birth.\n * @returns {number|null} ageData.birthYear - The calculated or provided year of birth.\n */\n\nexport var getAgeData = function getAgeData(birthMonth, birthYear, age, ageMonths) {\n  // milliseconds per year (accounting for leap years)\n  var msPerYear = 1000 * 60 * 60 * 24 * 365.25;\n  var currDate = new Date();\n  var safeNumber = function safeNumber(value) {\n    var numValue = Number(value);\n    return Object.is(numValue, NaN) || numValue === 0 ? null : numValue;\n  };\n  var bm = safeNumber(birthMonth);\n  var by = safeNumber(birthYear);\n  var yearsOld = safeNumber(age);\n  var ageM = safeNumber(ageMonths);\n  var ageData = {\n    age: yearsOld,\n    ageMonths: ageM\n  };\n  if (bm && by) {\n    ageData.birthMonth = bm;\n    ageData.birthYear = by;\n    var birthDate = new Date(by, bm - 1, currDate.getDate());\n    var decimalYear = (currDate - birthDate) / msPerYear;\n    ageData.age = Math.floor(decimalYear);\n    ageData.ageMonths = ageM || Math.floor(decimalYear * 12);\n  } else if (by) {\n    ageData.birthYear = by;\n    ageData.birthMonth = currDate.getMonth() + 1;\n    var _birthDate = new Date(by, ageData.birthMonth - 1, currDate.getDate());\n    var _decimalYear = (currDate - _birthDate) / msPerYear;\n    ageData.age = Math.floor(_decimalYear);\n    ageData.ageMonths = ageM || Math.floor(_decimalYear * 12);\n  } else if (ageM) {\n    var _birthDate2 = new Date();\n    _birthDate2.setMonth(_birthDate2.getMonth() - ageM);\n    ageData.birthYear = _birthDate2.getFullYear();\n    ageData.birthMonth = _birthDate2.getMonth() + 1;\n    ageData.age = Math.floor((currDate - _birthDate2) / msPerYear);\n  } else if (yearsOld) {\n    ageData.birthYear = currDate.getFullYear() - yearsOld;\n    ageData.birthMonth = currDate.getMonth() + 1;\n    ageData.ageMonths = yearsOld * 12;\n  } else {\n    ageData.birthMonth = null;\n    ageData.birthYear = null;\n  }\n  return ageData;\n};\n\n/**\n * Return grade after min/max filtering and accounting for string values.\n *\n * @function getGrade\n *\n * @param {string|number|null} inputGrade - The input grade.\n * @param {number} gradeMin - The minimum grade. Default is 0 (for Kindergarten).\n * @param {number} gradeMax - The maximum grade. Default is 12.\n *\n * @returns {number} numeric grade\n */\nexport var getGrade = function getGrade(inputGrade) {\n  var gradeMin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var gradeMax = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 13;\n  var parsedGrade = Number(inputGrade);\n  var gradeStringMap = {\n    k: 0,\n    tk: 0,\n    pk: 0,\n    preschool: 0,\n    prekindergarten: 0,\n    transitionalkindergarten: 0,\n    kindergarten: 0,\n    infanttoddler: 0,\n    infant: 0,\n    toddler: 0,\n    first: 1,\n    firstgrade: 1,\n    second: 2,\n    secondgrade: 2,\n    third: 3,\n    thirdgrade: 3,\n    fourth: 4,\n    fourthgrade: 4,\n    fifth: 5,\n    fifthgrade: 5,\n    sixth: 6,\n    sixthgrade: 6,\n    seventh: 7,\n    seventhgrade: 7,\n    eighth: 8,\n    eighthgrade: 8,\n    ninth: 9,\n    ninthgrade: 9,\n    tenth: 10,\n    tenthgrade: 10,\n    eleventh: 11,\n    eleventhgrade: 11,\n    twelfth: 12,\n    twelfthgrade: 12,\n    freshman: 9,\n    sophomore: 10,\n    junior: 11,\n    senior: 12,\n    postgraduate: 13,\n    university: 13,\n    graduate: 13,\n    master: 13,\n    doctorate: 13,\n    masters: 13\n  };\n\n  // if inputGrade is null or undefined, return undefined to avoid an error with undefined.toLowerCase()\n  if (inputGrade === null || inputGrade === undefined) {\n    return undefined;\n  }\n  if (Number.isNaN(parsedGrade)) {\n    // Grade is a string. Remove any whitespace and hyphens. Make lowercase.\n    // And refer to the gradeStringMap for the mapping.\n    var spaceRegex = /\\s/g;\n    var hyphenRegex = /-/g;\n    var standardizedGradeString = inputGrade.toLowerCase().replace(spaceRegex, '').replace(hyphenRegex, '');\n    var grade = gradeStringMap[standardizedGradeString];\n    if (grade === undefined) return undefined;\n    if (grade < gradeMin) return gradeMin;\n    if (grade > gradeMax) return gradeMax;\n    return grade;\n  }\n  if (parsedGrade < gradeMin) {\n    return gradeMin;\n  }\n  if (parsedGrade > gradeMax) {\n    return gradeMax;\n  }\n\n  // grade is within range and is a number\n  return parsedGrade;\n};\n\n/**\n * Return grade after min/max filtering and accounting for string values.\n *\n * @const median\n *\n * @param {array} array - Array of response times.\n *\n * @returns {number} median of array of response times\n */\nexport var median = function median(array) {\n  array.sort(function (a, b) {\n    return b - a;\n  });\n  var length = array.length;\n  if (length % 2 === 0) {\n    return (array[length / 2] + array[length / 2 - 1]) / 2;\n  }\n  return array[Math.floor(length / 2)];\n};\n\n/**\n * Returns a function that evaluates the reliability of a run based on the following criteria:\n *\n * @param {number} responseTimeLowThreshold - The minimum acceptable response time threshold in MS.\n * @param {number} responseTimeHighThreshold - The maximum acceptable response time threshold in MS.\n * @param {number} accuracyThreshold - The minimum acceptable accuracy threshold.\n * @param {array} includedReliabilityFlags - An array of flags that should be included\n * when evaluating reliability.\n * @returns {function} baseValidityEvaluator - A function that evaluates the reliability of a run.\n */\nexport function createEvaluateValidity(_ref) {\n  var _ref$responseTimeLowT = _ref.responseTimeLowThreshold,\n    responseTimeLowThreshold = _ref$responseTimeLowT === void 0 ? 400 : _ref$responseTimeLowT,\n    _ref$responseTimeHigh = _ref.responseTimeHighThreshold,\n    responseTimeHighThreshold = _ref$responseTimeHigh === void 0 ? 10000 : _ref$responseTimeHigh,\n    _ref$accuracyThreshol = _ref.accuracyThreshold,\n    accuracyThreshold = _ref$accuracyThreshol === void 0 ? 0.2 : _ref$accuracyThreshol,\n    _ref$minResponsesRequ = _ref.minResponsesRequired,\n    minResponsesRequired = _ref$minResponsesRequ === void 0 ? 0 : _ref$minResponsesRequ,\n    _ref$includedReliabil = _ref.includedReliabilityFlags,\n    includedReliabilityFlags = _ref$includedReliabil === void 0 ? ['responseTimeTooFast'] : _ref$includedReliabil;\n  return function baseEvaluateValidity(_ref2) {\n    var responseTimes = _ref2.responseTimes,\n      responses = _ref2.responses,\n      correct = _ref2.correct,\n      completed = _ref2.completed;\n    var flags = [];\n    var isReliable = false;\n    if (responseTimes.length < minResponsesRequired) {\n      flags.push('notEnoughResponses');\n    } else {\n      var _correct$filter$lengt;\n      // verifies if responseTimes lie above or below a threshold\n      if (median(responseTimes) <= responseTimeLowThreshold) {\n        flags.push('responseTimeTooFast');\n      }\n      if (median(responseTimes) >= responseTimeHighThreshold) {\n        flags.push('responseTimeTooSlow');\n      }\n      if (completed === false && includedReliabilityFlags.includes('incomplete')) {\n        flags.push('incomplete');\n      }\n\n      // TODO: Calculate response similarity based on maxChainLength\n\n      // Calculate accuracy based on the number of correct responses\n      var numCorrect = (_correct$filter$lengt = correct === null || correct === void 0 ? void 0 : correct.filter(function (x) {\n        return x === 1;\n      }).length) !== null && _correct$filter$lengt !== void 0 ? _correct$filter$lengt : 0;\n      if (numCorrect / correct.length <= accuracyThreshold) {\n        flags.push('accuracyTooLow');\n      }\n      isReliable = flags.filter(function (x) {\n        return includedReliabilityFlags.includes(x);\n      }).length === 0;\n      flags = flags.filter(function (x) {\n        return includedReliabilityFlags.includes(x);\n      });\n    }\n    return {\n      flags: flags,\n      isReliable: isReliable\n    };\n  };\n}\n\n/**\n * Tracks response times and invokes callback function when response times\n * exceed specified thresholds.\n *\n * @class ResponseTimeTracker\n * @param {Function} evaluateValidity function to be called to generate an decision on the\n *    reliability of a run\n * @param {Function} addEngagementFlags function passed through to update the run's\n *  firekit object with flags tripped\n * @param {number} minResponsesRequired The minimum number of responses required before\n *   checking for threshold exceedance.\n * @property {Array<number>} _responseTimes An array to store the response times.\n * @property {Array<number>} _responses An array to store the responses\n * (keypresses or button choices).\n * @property {Array<number>} _correct An array to store the correctness of the responses.\n */\nexport var ValidityEvaluator = /*#__PURE__*/function () {\n  function ValidityEvaluator(_ref3) {\n    var _ref3$evaluateValidit = _ref3.evaluateValidity,\n      evaluateValidity = _ref3$evaluateValidit === void 0 ? createEvaluateValidity() : _ref3$evaluateValidit,\n      _ref3$handleEngagemen = _ref3.handleEngagementFlags,\n      handleEngagementFlags = _ref3$handleEngagemen === void 0 ? function () {} : _ref3$handleEngagemen;\n    _classCallCheck(this, ValidityEvaluator);\n    this.evaluateValidity = evaluateValidity;\n    this.handleEngagementFlags = handleEngagementFlags;\n    this._responseTimes = [];\n    this._responses = [];\n    this._correct = [];\n    this._preserveFlags = [];\n    this.currentBlock = undefined;\n    this.reliabilityByBlock = {};\n    this.completed = false;\n  }\n\n  /**\n   * Takes in array of flags and returns array of flags with current block appended to each flag\n   * @function appendCurrentBlockToFlags\n   * @param {Array<string>} flags\n   */\n  _createClass(ValidityEvaluator, [{\n    key: \"appendCurrentBlockToFlags\",\n    value: function appendCurrentBlockToFlags(flags) {\n      var _this = this;\n      if (this.currentBlock !== undefined) {\n        // We only want to append for block based flags, incomplete would be a global flag\n        return flags.map(function (flag) {\n          return flag !== 'incomplete' ? \"\".concat(flag, \"_\").concat(_this.currentBlock) : flag;\n        });\n      }\n      return flags;\n    }\n\n    /**\n     * Returns true if all blocks so far are reliable, false if not\n     * @function calculateReliabilityWithBlocks\n     */\n  }, {\n    key: \"calculateReliabilityWithBlocks\",\n    value: function calculateReliabilityWithBlocks() {\n      return Object.values(this.reliabilityByBlock).every(function (x) {\n        return x === true;\n      });\n    }\n\n    /**\n     *  @function startNewBlockValidation Called when a new block is started to reset the\n     * data arrays and update the evaluateValidity function if needed\n     * For block-scoped assessments, this function must be called with the first block name\n     * before beginning the first block\n     * @param {Function} evaluateValidity\n     * @param {String} currentBlock The name of the current block\n     */\n  }, {\n    key: \"startNewBlockValidation\",\n    value: function startNewBlockValidation(currentBlock) {\n      var evaluateValidity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.evaluateValidity;\n      // Compute and store flags from the previous block\n      // The first conditional prevents a tooFewResponses flag from being\n      // stored erroneously before the initial block begins\n      if (this._responseTimes.length > 0 && currentBlock !== undefined) {\n        var flags = this.calculateAndUpdateFlags();\n        // Update new flags to preserveFlags array\n        this._preserveFlags = [].concat(_toConsumableArray(this._preserveFlags), _toConsumableArray(this.appendCurrentBlockToFlags(flags)));\n      }\n      this.currentBlock = currentBlock;\n      this.evaluateValidity = evaluateValidity;\n      this._responseTimes = [];\n      this._responses = [];\n      this._correct = [];\n      this.completed = false;\n    }\n\n    /**\n     *  @function markAsCompleted Called when a block or task is completed.\n     * For block-scoped assessments, this function must be called at the completion\n     * of each block\n     * */\n  }, {\n    key: \"markAsCompleted\",\n    value: function markAsCompleted() {\n      this.completed = true;\n      this.calculateAndUpdateFlags();\n    }\n\n    /**\n     *  @function calculateAndUpdateFlags Helper function to calculate flag and reliability\n     * and use the handleEngagementFlags function to update the run's firekit object\n     * @return {Array<string>} flags\n     * */\n  }, {\n    key: \"calculateAndUpdateFlags\",\n    value: function calculateAndUpdateFlags() {\n      var _this$evaluateValidit = this.evaluateValidity({\n          responseTimes: this._responseTimes,\n          responses: this._responses,\n          correct: this._correct,\n          completed: this.completed\n        }),\n        flags = _this$evaluateValidit.flags,\n        isReliable = _this$evaluateValidit.isReliable;\n\n      // Case for block based assessments\n      if (this.currentBlock !== undefined) {\n        this.reliabilityByBlock[this.currentBlock] = isReliable;\n\n        // Please note that calling this function with a new set of engagement flags\n        // will overwrite the previous set.\n        this.handleEngagementFlags([].concat(_toConsumableArray(this._preserveFlags), _toConsumableArray(this.appendCurrentBlockToFlags(flags))), this.calculateReliabilityWithBlocks(), this.reliabilityByBlock);\n      } else {\n        // Please note that calling this function with a new set of engagement flags\n        // will overwrite the previous set.\n        this.handleEngagementFlags(flags, isReliable);\n      }\n      return flags;\n    }\n\n    /**\n     * Updates ValidityEvaluator arrays (responseTimes, response, and accuracy) with\n     *\n     * @function addResponseData\n     * @param {number} responseTime Time it took for a user to respond to a stimulus\n     * @param {string} response  Choice that a user responded with\n     * ex: left_arrow, right_arrow, button_3\n     * @param {number} isCorrect 1 if a user answered correctly, 0 if answered incorrectly\n     */\n  }, {\n    key: \"addResponseData\",\n    value: function addResponseData(responseTime, response, isCorrect) {\n      this._responseTimes.push(responseTime);\n      this._responses.push(response);\n      this._correct.push(isCorrect);\n      this.calculateAndUpdateFlags();\n    }\n  }]);\n  return ValidityEvaluator;\n}();"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","Cat","abilityPrior","optimization_js_1","lodash_1","utils_1","seedrandom_1","normal","constructor","method","itemSelect","nStartItems","startSelect","theta","minTheta","maxTheta","prior","randomSeed","validateMethod","validateItemSelect","validateStartSelect","_zetas","_resps","_theta","_nItems","_seMeasurement","Number","MAX_VALUE","_rng","default","seMeasurement","nItems","length","resps","zetas","lowerMethod","toLowerCase","includes","Error","lowerItemSelect","lowerStartSelect","updateAbilityEstimate","zeta","answer","Array","isArray","push","estimateAbilityEAP","estimateAbilityMLE","calculateSE","num","nf","forEach","probability","like","likelihood","minimize_Powell","negLikelihood","bind","argument","thetaArray","reduce","acc","i","irf","itemResponseFunction","Math","log","sum","previousValue","fisherInformation","sqrt","findNextItem","stimuli","deepCopy","arr","selector","cloneDeep","sort","a","b","difficulty","selectorMiddle","selectorClosest","selectorRandom","selectorMFI","stimuliAddFisher","map","element","assign","c","d","stimulus","nextStimulus","remainingStimuli","slice","index","floor","randomInteger","nextItem","splice","findClosest","min","max","binary_search_1","exp","p","q","pow","mean","stdDev","stepSize","distribution","x","PI","target","indexOfTarget","needle","lowIndex","highIndex","abs","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","fetchEmailAuthMethods","isUsernameAvailable","isEmailAvailable","isRoarAuthEmail","roarEmail","auth_1","roarPid","email","split","auth","fetchSignInMethodsForEmail","signInMethods","username","methods","indexOf","EmailAuthProvider","EMAIL_PASSWORD_SIGN_IN_METHOD","EMAIL_LINK_SIGN_IN_METHOD","__rest","s","t","prototype","hasOwnProperty","call","getOwnPropertySymbols","propertyIsEnumerable","RoarAppkit","firestore_1","run_1","task_1","user_1","util_1","firebaseProject","firebaseConfig","userInfo","taskInfo","assigningOrgs","assignmentId","runId","_userInfo","_taskInfo","_assigningOrgs","_assignmentId","_runId","_authenticated","_initialized","_started","_init","initializeFirebaseProject","onAuthStateChanged","user","Boolean","RoarAppUser","db","task","RoarTaskVariant","run","RoarRun","init","authenticated","updateUser","_a","tasks","variants","assessmentPid","userMetadata","startRun","additionalRunMetadata","updateTaskParams","newParams","oldVariantId","variantId","updateDoc","userRef","arrayRemove","arrayUnion","runRef","finishRun","abortRun","writeTrial","trialData","computedScoreCallback","convertTrialToFirestore","intersection_1","mapValues_1","pick_1","set_1","dot_object_1","removeUndefined","fromEntries","entries","key","URL","toString","requiredTrialFields","castToTheta","doc","collection","taskRef","started","completed","aborted","scores","raw","computed","_b","_c","checkUserExists","variantRef","toFirestore","userDocSnap","getDoc","exists","userDocData","data","userOrgs","keys","orgName","current","runData","id","taskId","timeStarted","serverTimestamp","timeFinished","setDoc","updateFirestoreTimestamp","every","filter","trialRef","_d","_e","_f","assessment_stage","defaultSubtask","subtask","stage","scoreUpdate","thetaEstimate","thetaSE","numAttempted","numCorrect","correct","numIncorrect","increment","undefined","subtaskScores","test","fullUpdatePath","dot","catch","error","message","taskName","taskDescription","taskImage","taskURL","external","variantName","variantDescription","variantParams","variantsCollectionRef","_firestoreUpdateAllowed","taskData","name","description","image","lastUpdated","merge","query","where","orderBy","limit","getDocs","docRef","variantData","params","_createNewVariant","oldParams","replaceValues","cleanParams","keysAdded","merged","mergeGameParams","extend_1","interfaces_1","roarUid","assessmentUid","userType","UserType","guest","allowedUserCategories","values","join","docSnap","onFirestore","userData","_setUserData","created","RoarFirekit","filter_1","fromPairs_1","get_1","isEmpty_1","keys_1","map_1","nth_1","union_1","functions_1","auth_2","appkit_1","query_assessment_1","query_admin_1","AuthProviderType","RoarProviderId","ProviderId","CLEVER","ROAR_ADMIN_PROJECT","roarConfig","authPersistence","AuthPersistence","session","markRawConfig","listenerUpdateCallback","_authPersistence","_markRawConfig","_idTokens","_scrubAuthProperties","roarAppUserInfo","_adminOrgs","_superAdmin","currentAssignments","oAuthAccessToken","_adminClaimsListener","_appClaimsListener","_userDocListener","_adminTokenListener","_appTokenListener","app","admin","_listenToClaims","_listenToTokenChange","getIdToken","idToken","initialized","_verifyInit","_isAuthenticated","isAdmin","superAdmin","_verifyAuthentication","_verifyAdmin","_listenToUserDoc","dbRefs","unsubscribe","onSnapshot","getMyData","code","firekit","uid","claims","adminOrgs","Date","claimsLastUpdated","_type","onIdTokenChanged","idTokenResult","getIdTokenResult","super_admin","_idTokenReceived","token","_setUidCustomClaims","setAdminUidClaims","httpsCallable","functions","adminResult","setAppUidClaims","appResult","adminUid","_syncCleverUser","authProvider","syncCleverUser","accessToken","registerWithEmailAndPassword","password","createUserWithEmailAndPassword","console","logInWithEmailAndPassword","signInWithEmailAndPassword","logInWithUsernameAndPassword","initiateLoginWithEmailLink","redirectUrl","actionCodeSettings","url","handleCodeInApp","sendSignInLinkToEmail","isSignInWithEmailLink","emailLink","signInWithEmailLink","userCredential","roarAdminProvider","OAuthProvider","roarAdminIdToken","credential","signInWithCredential","signInWithPopup","provider","allowedProviders","GOOGLE","GoogleAuthProvider","allowedErrors","swallowAllowedErrors","adminUserCredential","credentialFromResult","setClaimsResult","initiateRedirect","signInWithRedirect","signInFromRedirectResult","enableCookiesCallback","getRedirectResult","providerId","status","_signOutApp","signOut","_signOutAdmin","idTokenReceived","idTokens","restConfig","headers","Authorization","baseURL","assignments","runs","_getUser","userDocRef","externalDataSnapshot","externalData","districts","emptyOrg","schools","classes","families","groups","archived","assigned","assignmentsAssigned","assignmentsStarted","assignmentsCompleted","allAssignments","assignmentInfo","all","assignment","_getAssignment","assignmentData","now","assignmentStatus","dateOpened","dateClosed","toDate","match","listUsers","getLegalDoc","docName","gitHubUrl","response","fetch","text","version","updateConsentStatus","consentVersion","getUsers","uidArray","_getAdministration","administrationId","getAdministrations","administrationIds","docData","assessments","extendedAssessmentData","assessment","taskDocRef","taskDocSnap","getAssignments","startAssignment","transaction","assignmentDocRef","update","completeAssignment","_updateAssignedAssessment","updates","get","assessmentIdx","findIndex","oldAssessmentInfo","newAssessmentInfo","startAssessment","runTransaction","administrationDocRef","administrationDocSnap","assessmentParams","thisAssessment","find","assignmentDocSnap","assignedAssessments","allRunIdsForThisTask","allRunIds","assessmentUpdateData","startedOn","some","taskAndVariant","getTaskAndVariant","variant","JSON","stringify","selectBestRun","completeAssessment","completedOn","updateAssessmentRewardShown","rewardShown","cloudSelectBestRun","createAdministration","dateOpen","dateClose","sequential","orgs","emptyOrgList","administrationData","createdBy","dateCreated","set","assignAdministrationToOrgs","unassignAdministrationToOrgs","updateUserExternalData","externalResourceId","createStudentWithEmailPassword","student","studentData","pid","emailCheckSum","crc32String","districtPrefix","schoolPrefix","groupPrefix","pidParts","dob","gender","grade","state_id","hispanic_ethnicity","ell_status","iep_status","frl_status","race","home_language","district","school","class","group","family","cloudCreateAdminStudent","adminResponse","cloudCreateAppStudent","appResponse","cloudUpdateUserClaims","createStudentWithUsernamePassword","createAdministrator","targetOrgs","targetAdminOrgs","cloudCreateAdministrator","getTasks","requireRegistered","getVariants","getMyAdministrations","includeStats","isSuperAdmin","getOrgsById","orgType","orgIds","pageLimit","startAfterDocId","getOrganizations","getOrgs","districtIds","schoolIds","allSchoolIds","classIds","getUsersBySingleOrg","orgId","countOnly","getUsersByOrgs","syncCleverOrgs","shallow","timeout","createOrg","orgsCollection","orgData","districtId","schoolId","schoolDocRef","snapshot","addDoc","adminDistrictRef","appDistrictRef","adminSchoolRef","appSchoolRef","getUsersByAssignment","includeScores","assessmentDb","registerTaskVariant","buildQueryByAssignment","buildQueryByOrgs","flatten_1","uniqBy_1","collectionName","nested","_g","_h","_j","_k","collectionRef","orgQueryParams","or","collectionGroup","assignmentIdQuery","and","getUsersFromQuery","getCountFromServer","count","users","chunkedOrgs","chunkOrgLists","chunkSize","promises","orgsChunk","userQuery","prev","curr","u","getAdministrationsFromQuery","administrations","docs","completionDocRef","ref","completionDocSnap","stats","getAssignmentData","parent","userDocSnapPromise","scoresPromises","getRunById","score","getUsersByAssignmentQuery","assignmentPromises","assignmentsPromises","assignmentsFlat","getRunTrials","getUserRuns","formatDate","queryUsers","chunk_1","documentId","startAfter","remainingOrgIds","startIndex","_orgsChunk","tasksSnapshot","registered","taskVariants","rootDoc","taskIds","variantIds","groupIds","date","toLocaleString","filters","userHasSelectedOrgs","runsQuery","firestoreRun","classId","groupId","trialsQuery","trialsSnapshot","trials","firestoreTrial","runsSnapshot","empty","getTreeTableOrgs","waitFor","mergeIds","safeInitializeApp","removeNull","app_1","difference_1","isEqual_1","isPlainObject_1","mergeWith_1","remove_1","vue_1","crc_32_1","obj","_","v","valueToReplace","replacementValue","config","getApp","options","initializeApp","optionallyMarkRaw","productKey","productInstance","markRaw","emulatorPorts","projectId","apiKey","ports","getAuth","getFirestore","getFunctions","connectFirestoreEmulator","connectFunctionsEmulator","originalInfo","info","connectAuthEmulator","firebaseApp","kit","setPersistence","browserSessionPersistence","local","browserLocalPersistence","none","inMemoryPersistence","idArray","resultIds","Set","usersOrgs","selectedOrgs","dates","conditionFunction","poll","setTimeout","oldValue","newValue","differentKeys","inputString","str","treeTableFormat","inputOrgs","ttDistricts","ttSchools","ttClasses","topLevelOrgs","_school","districtIndex","classesForThisSchool","_district","children","_class","schoolIndex","ttGroups","ttFamilies","orgPairs","chunk","orgChunk","__createBinding","create","o","m","k","k2","desc","getOwnPropertyDescriptor","writable","configurable","enumerable","__exportStar","firekit_1","string","replace","_0","p1","p2","_1","toUpperCase"],"sourceRoot":""}